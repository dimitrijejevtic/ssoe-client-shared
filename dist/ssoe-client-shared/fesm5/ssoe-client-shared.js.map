{"version":3,"file":"ssoe-client-shared.js","sources":["ng://ssoe-client-shared/shared/extensions/utils.ts","ng://ssoe-client-shared/shared/services/config.service.ts","ng://ssoe-client-shared/shared/services/api.service.ts","ng://ssoe-client-shared/shared/services/translation.service.ts","ng://ssoe-client-shared/shared/components/confirm-dialog/confirm-dialog.component.ts","ng://ssoe-client-shared/shared/directives/confirm-action.directive.ts","ng://ssoe-client-shared/shared/components/error-display/error-dialog/error-dialog.component.ts","ng://ssoe-client-shared/shared/poco/errorMessage.ts","ng://ssoe-client-shared/shared/services/error-messages.service.ts","ng://ssoe-client-shared/shared/directives/form-validator.directive.ts","ng://ssoe-client-shared/shared/directives/number-formatter.directive.ts","ng://ssoe-client-shared/shared/pipes/boolean-evaluate-status-to-string.pipe.ts","ng://ssoe-client-shared/shared/pipes/booleanToYesNo.pipe.ts","ng://ssoe-client-shared/shared/services/classification-service.service.ts","ng://ssoe-client-shared/shared/pipes/classification-value-get.pipe.ts","ng://ssoe-client-shared/shared/pipes/classification-value.pipe.ts","ng://ssoe-client-shared/shared/extensions/constants.ts","ng://ssoe-client-shared/shared/pipes/currency.pipe.ts","ng://ssoe-client-shared/shared/pipes/date-time-format.pipe.ts","ng://ssoe-client-shared/shared/pipes/empty-string-to-default.pipe.ts","ng://ssoe-client-shared/shared/pipes/lifecycle-status.pipe.ts","ng://ssoe-client-shared/shared/pipes/quantity.pipe.ts","ng://ssoe-client-shared/shared/pipes/translate.pipe.ts","ng://ssoe-client-shared/shared/components/currency-amount/decimal-formatter.directive.ts","ng://ssoe-client-shared/shared/components/typeahead-input/options-scroll.directive.ts","ng://ssoe-client-shared/material/material.module.ts","ng://ssoe-client-shared/shared/services/actions-ribbon.service.ts","ng://ssoe-client-shared/shared/components/actions-ribbon/actions-ribbon.component.ts","ng://ssoe-client-shared/shared/components/base-selected-tab/base-selected-tab.component.ts","ng://ssoe-client-shared/shared/components/classification-group-input/classification-group-input.component.ts","ng://ssoe-client-shared/shared/components/classification-input/classification-input.component.ts","ng://ssoe-client-shared/shared/POCO/currencyAmount.ts","ng://ssoe-client-shared/shared/components/currency-amount/currency-amount.component.ts","ng://ssoe-client-shared/shared/components/error-display/error-display.component.ts","ng://ssoe-client-shared/shared/components/general-error-page/general-error-page.component.ts","ng://ssoe-client-shared/shared/components/input-validation-message/input-validation-message.component.ts","ng://ssoe-client-shared/shared/services/loading.service.ts","ng://ssoe-client-shared/shared/components/loader/loader.component.ts","ng://ssoe-client-shared/shared/components/notification-dialog-unsaved/notification-dialog-unsaved.component.ts","ng://ssoe-client-shared/shared/POCO/Quantity.ts","ng://ssoe-client-shared/shared/components/quantity/quantity.component.ts","ng://ssoe-client-shared/shared/services/search.service.ts","ng://ssoe-client-shared/shared/components/typeahead-input/typeahead-input.component.ts","ng://ssoe-client-shared/shared/shared.module.ts","ng://ssoe-client-shared/shared/services/command.service.ts","ng://ssoe-client-shared/shared/services/query.service.ts","ng://ssoe-client-shared/shared/services/paginator-i18n.service.ts","ng://ssoe-client-shared/shared/services/unsaved-data-notification.service.ts"],"sourcesContent":["import cloneDeep from 'lodash/cloneDeep';\r\n// @dynamic\r\nexport class Utils {\r\n    public static isNullEmptyOrUndefined(value) {\r\n        return value === null || value === '' || typeof value === 'undefined' || value === 'null';\r\n    }\r\n\r\n    public static isNumber(value) {\r\n        return typeof value === 'number' && isFinite(value);\r\n    }\r\n\r\n    public static deepClone(source): any {\r\n      return cloneDeep(source);\r\n    }\r\n\r\n    public static trimLastComma(str: string) {\r\n      str = str.replace(/,\\s*$/, '');\r\n      return str;\r\n    }\r\n\r\n    public static trimLastSlash(str: string) {\r\n      return str.replace(/\\/$/, '');\r\n    }\r\n\r\n    public static sum(key, array) {\r\n        return array.reduce((a, b) => a + (b[key] || 0), 0);\r\n    }\r\n\r\n    public static newTechnicalNumber(): string {\r\n      // tslint:disable-next-line: only-arrow-functions\r\n      return 'xxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        // tslint:disable:one-variable-per-declaration\r\n        // tslint:disable: no-bitwise\r\n        const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n      });\r\n    }\r\n\r\n    public static regexMatch(regex: RegExp, testString: string) {\r\n      const exc = regex.exec(testString);\r\n      if (exc !== null && exc.find(x => x === testString) !== null)\r\n        return true;\r\n      else return false;\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IConfigServiceConfig } from '../interfaces/IConfigServiceConfig';\nimport { Configuration } from '../poco/configuration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  private configurations;\n  constructor(private http: HttpClient) { }\n\n  delayInit(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 10);\n    });\n  }\n  getConfiguration(config: IConfigServiceConfig) {\n    return this.http.get(`${config.apiUrl}/${config.getConfigEndpoint}`).toPromise()\n      .then((response: Response) => {\n        this.configurations = response;\n        // environment.configuration = this.configurations;\n        return this.configurations;\n       }\n      // ).then((_) => {\n      //   return this.http.get(`${environment.configuration.apiUrl}/common/getTranslations`).toPromise().then((resp: any) => {\n      //     const keyarray = [];\n      //     for (let index = 0; index < resp.value.length; index++) {\n      //       const el = resp.value[index];\n      //       if (localTranslations.findIndex(x => x.key === el.key) < 0)\n      //         localTranslations.push({ key: el.key, value: el.value });\n      //     }\n      //   });\n      //   }\n      ).catch(err => {\n        // if (environment.production)\n        //   return Promise.reject(err);\n        // else {\n        //   this.configurations = environment.configuration;\n        //   return Promise.resolve(environment.configuration);\n        // }\n      });\n  }\n\n  public getConfig(): Configuration {\n    return this.configurations;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private http: HttpClient, private configService: ConfigService) { }\r\n\r\n  private formatErrors(error: any) {\r\n    console.error(error);\r\n    return throwError(error.error);\r\n  }\r\n  get(zone: string, path: string, params: HttpParams = new HttpParams()): Observable<any> {\r\n    return this.http.get(`${this.getApiUrl()}/${zone}/${path}`\r\n      , { params })\r\n      .pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  put(zone: string, path: string, body: Object = {}): Observable<any> {\r\n    return this.http.put(\r\n      `${this.getApiUrl()}${zone}/${path}`,\r\n      JSON.stringify(body)\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  post(zone: string, path: string, id?: string, body: Object = {}, withCredentials = false): Observable<any> {\r\n    if (id !== undefined)\r\n      id = '/' + id;\r\n    else id = '';\r\n\r\n    let withCr;\r\n    if (withCredentials === true)\r\n      withCr = { withCredentials: true };\r\n\r\n    return this.http.post(\r\n      `${this.getApiUrl()}/${zone}/${path}${id}`,\r\n      JSON.stringify(body), withCr\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  postFile(zone: string, path: string, id?: string, body: Object = {}, withCredentials = false, reportProgress?: boolean): Observable<any> {\r\n    if (id !== undefined)\r\n      id = '/' + id;\r\n    else id = '';\r\n\r\n    let withCr;\r\n    if (withCredentials === true)\r\n      withCr = { withCredentials: true };\r\n\r\n    if (reportProgress === undefined)\r\n      reportProgress == false;\r\n\r\n    return this.http.post(\r\n      `${this.getApiUrl()}/${zone}/${path}${id}`,\r\n      body, { withCredentials : withCr, reportProgress: reportProgress, observe: 'events' }\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  delete(zone: string, path: string): Observable<any> {\r\n    return this.http.delete(\r\n      `${this.getApiUrl()}/${zone}/${path}`\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  uploadFile(zone: string, path: string, file: File, typeName?: string, parentObjectId?: number) {\r\n    const formData: FormData = new FormData();\r\n    formData.append('file', file, file.name);\r\n\r\n    return this.http.post(`${this.configService.getConfig().apiUrl}/${zone}/${path}/${typeName}/${parentObjectId}`, formData);\r\n  }\r\n\r\n  public getApiUrl() {\r\n    return this.configService.getConfig().apiUrl;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Utils } from '../extensions/utils';\r\nimport { ApiService } from './api.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpParams } from '@angular/common/http';\r\n\r\nexport class TranslationKeyContract {\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranslationService {\r\n\r\n  private translations: { [key: string]: string };\r\n\r\n  public cultureCode: number;\r\n  private _cultureCode: number;\r\n\r\n  cultureChange: Subject<any>;\r\n\r\n  constructor(private apiService: ApiService) {\r\n    this.translations = {};\r\n    this.cultureChange = new Subject();\r\n  }\r\n\r\n  setCultureCode(code: number) {\r\n    this._cultureCode = code;\r\n    this.cultureCode = Date.now();\r\n  }\r\n  getCultureCode() {\r\n    return this._cultureCode;\r\n  }\r\n\r\n  getTranslations(cultureCode?) {\r\n    let params = new HttpParams();\r\n    if (cultureCode !== undefined)\r\n      params = params.append('cultureCode', cultureCode);\r\n    return this.apiService.get('common', 'getTranslations', params).pipe(tap(x => {\r\n      const keyarray = [];\r\n      for (let index = 0; index < x.value.length; index++) {\r\n        const element = x.value[index];\r\n        keyarray.push({ key: element.key, value: element.value });\r\n      }\r\n      this.setTranslations(keyarray);\r\n      this.cultureChange.next();\r\n      this.cultureCode = Date.now();\r\n    }));\r\n  }\r\n\r\n   setTranslations(trans: TranslationKeyContract[]) {\r\n    this.translations = {};\r\n    for (let index = 0; index < trans.length; index++) {\r\n      const element = trans[index];\r\n      this.translations[element.key] = element.value;\r\n    }\r\n    localStorage.setItem('translations', JSON.stringify(this.translations));\r\n  }\r\n\r\n  getForKey(key: string): string {\r\n    let res = key;\r\n    if (Utils.isNullEmptyOrUndefined(key) || key === '-')\r\n      return key;\r\n    const r = this.translations[key];\r\n    if (!Utils.isNullEmptyOrUndefined(r))\r\n      res = r;\r\n    else {\r\n      console.log(key);\r\n      this.translations[key] = '[' + key + ']';\r\n      res = '[' + key + ']';\r\n    }\r\n    return res;\r\n  }\r\n\r\n  getForKeyByObject(key: string): string {\r\n    let res = key;\r\n    if (Utils.isNullEmptyOrUndefined(key) || key === '-')\r\n      return key;\r\n    const r = this.translations[key];\r\n    if (!Utils.isNullEmptyOrUndefined(r))\r\n      res = r;\r\n    else {\r\n        const newKey = key.split('_')[1];\r\n        const keyValue = this.translations[newKey];\r\n        res = keyValue;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  loadStorage() {\r\n    const local = localStorage.getItem('translations');\r\n    if (local !== undefined && local !== null) {\r\n      const obj = JSON.parse(local);\r\n      this.translations = obj;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { TranslationService } from '../../services/translation.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { Utils } from '../../extensions/utils';\r\n\r\nexport interface IConfirmDialogData {\r\n  title: string;\r\n  text: string;\r\n  translatedText: string;\r\n  confirmLabel: string;\r\n  cancelLabel: string;\r\n  action: any;\r\n  parameters: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\n\r\nexport class ConfirmDialogComponent implements OnInit {\r\n\r\n  get showText() {\r\n    return !Utils.isNullEmptyOrUndefined(this.data.text);\r\n  }\r\n\r\n  get showTranslatedText() {\r\n    return !Utils.isNullEmptyOrUndefined(this.data.translatedText);\r\n  }\r\n\r\n  get showOkButton() {\r\n    return !Utils.isNullEmptyOrUndefined(this.data.confirmLabel);\r\n  }\r\n\r\n  get showCloseButton() {\r\n    return !Utils.isNullEmptyOrUndefined(this.data.cancelLabel);\r\n  }\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: IConfirmDialogData,\r\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\r\n    public translateService: TranslationService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ok() {\r\n    if (this.data.action !== undefined)\r\n      this.data.action(this.data.parameters);\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef, HostListener, Optional } from '@angular/core';\r\nimport { IConfirmDialogData, ConfirmDialogComponent } from '../components/confirm-dialog/confirm-dialog.component';\r\nimport { MatDialog } from '@angular/material';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[confirmAction]'\r\n})\r\nexport class ConfirmActionDirective implements OnInit {\r\n\r\n  @Input('confirmAction') action: any;\r\n  @Input() parameters: any;\r\n\r\n  constructor(\r\n    private dialog: MatDialog) { }\r\n\r\n    @HostListener('click') onClick(event) {\r\n      const confirmDialogData: IConfirmDialogData = {\r\n        title: 'Confirm publish tender',\r\n        text: 'This action is irrevertible, are you sure?',\r\n        translatedText: undefined,\r\n        confirmLabel: 'Confirm',\r\n        cancelLabel: 'Cancel',\r\n        action: this.action,\r\n        parameters: this.parameters\r\n      };\r\n      this.dialog.open(ConfirmDialogComponent, { panelClass: 'modal-small', data: confirmDialogData });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.viewContainer.createEmbeddedView(this.templateRef);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { TranslationService } from 'src/lib/shared/services/translation.service';\r\n\r\nexport interface ErrorData {\r\n  errors: [];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-error-dialog',\r\n  templateUrl: './error-dialog.component.html',\r\n  styleUrls: ['./error-dialog.component.css']\r\n})\r\nexport class ErrorDialogComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: ErrorData,\r\n              public translationService: TranslationService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export class ErrorMessage {\r\n  source: string;\r\n  errors: string[];\r\n  isCleanup = false;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { MatSnackBar, MatDialog } from '@angular/material';\r\nimport { TranslationService } from './translation.service';\r\nimport { ErrorDialogComponent } from '../components/error-display/error-dialog/error-dialog.component';\r\nimport { ValidationFailure } from '../poco/validationFailure';\r\nimport { ErrorMessage } from '../poco/errorMessage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorMessagesService {\r\n\r\n  public errorMessagesSubject: Subject<ErrorMessage>;\r\n  public errorPropertyMessageSubject: Subject<ValidationFailure>;\r\n  public removeFormErrorsSubject: Subject<boolean>;\r\n\r\n  private propertyValidationErrors: {[source: string]: ValidationFailure[]} = {};\r\n\r\n  constructor(\r\n    private translationService: TranslationService,\r\n    private dialog: MatDialog,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.errorMessagesSubject = new Subject();\r\n    this.errorPropertyMessageSubject = new Subject();\r\n    this.removeFormErrorsSubject = new Subject();\r\n  }\r\n\r\n  showErrorDialog(errs) {\r\n    this.dialog.open(ErrorDialogComponent, {\r\n      data: {errors: errs}, panelClass: 'dialog-error'\r\n    });\r\n  }\r\n\r\n  publishMessages(errors: ValidationFailure[], source?: string) {\r\n\r\n    // TODO: errors with property name 'popup' should not go to propertyvalidators\r\n\r\n    const errorM = new ErrorMessage();\r\n    errorM.source = source;\r\n    errorM.errors = [];\r\n\r\n    const ex = this.propertyValidationErrors[source];\r\n    if (ex !== undefined) {\r\n      const becameValid = [];\r\n      const stillInvalid = [];\r\n      for (let index = 0; index < ex.length; index++) {\r\n        const element = ex[index];\r\n        const stillInvalidProperty = errors.find(x => x.propertyName === element.propertyName);\r\n        if (stillInvalidProperty !== undefined) {\r\n          stillInvalidProperty.isCleanup = false;\r\n          stillInvalid.push(stillInvalidProperty);\r\n        } else {\r\n          element.isCleanup = true;\r\n          becameValid.push(element);\r\n        }\r\n      }\r\n\r\n      for (let index = 0; index < errors.length; index++) {\r\n        const element = errors[index];\r\n        const newError = ex.find(x => x.propertyName === element.propertyName);\r\n        if (newError === undefined) {\r\n          element.isCleanup = false;\r\n          stillInvalid.push(element);\r\n        }\r\n      }\r\n\r\n      this.propertyValidationErrors[source] = stillInvalid;\r\n      for (let index = 0; index < becameValid.length; index++) {\r\n        const element = becameValid[index];\r\n        this.publishPropertyMessage(element);\r\n      }\r\n\r\n    } else {\r\n      for (let index = 0; index < errors.length; index++) {\r\n        const element = errors[index];\r\n        element.isCleanup = false;\r\n      }\r\n      this.propertyValidationErrors[source] = errors;\r\n    }\r\n\r\n    for (let index = 0; index < this.propertyValidationErrors[source].length; index++) {\r\n      const element = this.propertyValidationErrors[source][index];\r\n      this.publishPropertyMessage(element);\r\n    }\r\n\r\n    const generalErrors = errors.filter(x => x.propertyName === 'popup');\r\n    for (let index = 0; index < generalErrors.length; index++) {\r\n      const element = generalErrors[index];\r\n      errorM.errors.push(...element.errorMessage.split('###'));\r\n      // errorM.errors.push(element.errorMessage);\r\n    }\r\n\r\n    if (this.propertyValidationErrors[source].length > 0 && generalErrors.length === 0 && source !== 'login') {\r\n      this.snackBar.open(this.translationService.getForKey('There were errors!'), null, {\r\n        duration: 2000,\r\n        verticalPosition: 'top',\r\n        panelClass: 'danger'\r\n      });\r\n    }\r\n    this.errorMessagesSubject.next(errorM);\r\n  }\r\n\r\n  clearMessages(source: string) {\r\n    const errorM = new ErrorMessage();\r\n    errorM.source = source;\r\n    errorM.isCleanup = true;\r\n    this.errorMessagesSubject.next(errorM);\r\n  }\r\n\r\n  publishPropertyMessage(validationMessage: ValidationFailure) {\r\n    this.errorPropertyMessageSubject.next(validationMessage);\r\n  }\r\n}\r\n","import { Directive, TemplateRef, ViewContainerRef, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, ValidationErrors } from '@angular/forms';\r\nimport { ErrorMessagesService } from '../services/error-messages.service';\r\nimport { Utils } from '../extensions/utils';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'form[formValidator]'\r\n})\r\nexport class FormValidatorDirective implements OnInit {\r\n\r\n  constructor(\r\n    public form: NgForm,\r\n    private errorService: ErrorMessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.errorService.errorPropertyMessageSubject.subscribe(x => {\r\n      if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === false) {\r\n        const control = this.form.form.get(x.propertyName);\r\n        control.setErrors({incorrect: true});\r\n        control.markAsDirty();\r\n        control.markAsTouched();\r\n      } else if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === true)\r\n        this.form.form.setErrors(null);\r\n    });\r\n    this.errorService.removeFormErrorsSubject.subscribe(x => {\r\n      this.form.form.setErrors(null);\r\n    });\r\n  }\r\n}\r\n","import { Directive, Input, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[numberFormatter]'\r\n})\r\nexport class NumberFormatterDirective {\r\n\r\n  regexStr = '^[0-9]*$';\r\n  @Input() isAlphaNumeric: boolean;\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n\r\n  @HostListener('keypress', ['$event']) onKeyPress(event) {\r\n    return new RegExp(this.regexStr).test(event.key);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { Utils } from '../extensions/utils';\r\n\r\n@Pipe({\r\n  name: 'booleanEvaluateStatusToString'\r\n})\r\nexport class BooleanEvaluateStatusToStringPipe implements PipeTransform {\r\n\r\n  constructor(private translationService: TranslationService) {\r\n  }\r\n\r\n  transform(value: boolean, args?: any): any {\r\n    if (Utils.isNullEmptyOrUndefined(value))\r\n      return '-';\r\n\r\n    const key = value ? 'Evaluated (accepted)' : 'Evaluated (rejected)';\r\n    return this.translationService.getForKey(key);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslationService } from '../services/translation.service';\r\n\r\n@Pipe({\r\n  name: 'booleanToYesNo'\r\n})\r\nexport class BooleanToYesNoPipe implements PipeTransform {\r\n\r\n    constructor(private translationService: TranslationService) {\r\n    }\r\n\r\n    transform(value: boolean, args?: any): any {\r\n        const key = value ? 'Yes' : 'No';\r\n        return this.translationService.getForKey(key);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { Utils } from '../extensions/utils';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { shareReplay, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClassificationService {\r\n\r\n  private classificationCache: {[key: string]: Observable<any[]>};\r\n  private classificationValueCache: {[key: string]: Observable<any>};\r\n\r\n  constructor(private apiService: ApiService) {\r\n    this.classificationCache = {};\r\n    this.classificationValueCache = {};\r\n  }\r\n\r\n  getClassificationValues(classificationName: string, classificationModel?: string, volatile = false): Observable<any> {\r\n    if (Utils.isNullEmptyOrUndefined(classificationName))\r\n      return;\r\n    else {\r\n      if (Utils.isNullEmptyOrUndefined(classificationModel))\r\n        classificationModel = '';\r\n        else\r\n        classificationModel = '?model=' + classificationModel;\r\n\r\n      const key = classificationName + classificationModel;\r\n\r\n      if (volatile === true)\r\n        return this.apiService.get('common', 'GetClassification/' + classificationName + classificationModel);\r\n\r\n      if (this.classificationCache[key] === undefined)\r\n        this.classificationCache[key]\r\n        = this.apiService.get('common', 'GetClassification/' + classificationName + classificationModel).pipe(shareReplay(1));\r\n\r\n      return this.classificationCache[key];\r\n    }\r\n  }\r\n\r\n  getGroupedClassificationValues(classificationName: string, classificationModel?: string, volatile = false): Observable<any> {\r\n    if (Utils.isNullEmptyOrUndefined(classificationName))\r\n      return;\r\n    else {\r\n      if (Utils.isNullEmptyOrUndefined(classificationModel))\r\n        classificationModel = '';\r\n        else\r\n        classificationModel = '?model=' + classificationModel;\r\n\r\n      const key = classificationName + classificationModel;\r\n\r\n      if (volatile === true)\r\n        return this.apiService.get('common', 'GetGroupedClassification/' + classificationName + classificationModel);\r\n\r\n      if (this.classificationCache[key] === undefined)\r\n        this.classificationCache[key]\r\n        = this.apiService.get('common', 'GetGroupedClassification/' + classificationName + classificationModel).pipe(shareReplay(1));\r\n\r\n      return this.classificationCache[key];\r\n    }\r\n  }\r\n  getClassificationValue(valueId: string) {\r\n    if (Utils.isNullEmptyOrUndefined(valueId))\r\n      return of('-');\r\n    const key = valueId;\r\n    if (this.classificationValueCache[key] === undefined) {\r\n      const httpParams = new HttpParams().set('valueId', '' + valueId);\r\n      this.classificationValueCache[key]\r\n      = this.apiService.get('common', 'getClassificationValue', httpParams).pipe(shareReplay(1), switchMap(x => {\r\n        if (x === undefined || x === null || x.value === undefined) return '';\r\n        return of(x);\r\n      }));\r\n    }\r\n\r\n    // const httpParams = new HttpParams().set('valueId', '' + valueId);\r\n    // return this.apiService.get('common', 'getClassificationValue', httpParams);\r\n    return this.classificationValueCache[key];\r\n\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ClassificationService } from '../services/classification-service.service';\r\n\r\n@Pipe({\r\n  name: 'classificationValueGet'\r\n})\r\nexport class ClassificationValueGet implements PipeTransform {\r\n\r\n  constructor(private classificationService: ClassificationService) {\r\n  }\r\n  transform(value: any, args?: any): any {\r\n    if (value === undefined || value === null || typeof(value) === 'object') return '';\r\n\r\n    return this.classificationService.getClassificationValue(value);\r\n\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslatePipe } from './translate.pipe';\r\nimport { TranslationService } from '../services/translation.service';\r\n\r\n@Pipe({\r\n  name: 'classificationValue'\r\n})\r\nexport class ClassificationValuePipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    if (value === undefined || value === null || value.value === undefined || value.value === null) return '-';\r\n\r\n    return value.value.caption;\r\n  }\r\n\r\n}\r\n","// @dynamic\r\nexport class Constants {\r\n  static currencyCodes = {\r\n    941: 'RSD',\r\n    978: 'EUR',\r\n    840: 'USD',\r\n    826: 'GBP'};\r\n  static quantityCodes = {\r\n    1: 'pcs',\r\n    2: 'pack',\r\n    3: 'kg'\r\n  };\r\n\r\n  static readonly DATE_FMT = 'd.M.yyyy';\r\n  static readonly DATE_TIME_FMT = `${Constants.DATE_FMT} H:mm`;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Constants } from '../extensions/constants';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { Utils } from '../extensions/utils';\r\nimport { CurrencyAmount } from '../POCO/currencyAmount';\r\n\r\n@Pipe({\r\n  name: 'currencyAmmount'\r\n})\r\nexport class CurrencyPipe implements PipeTransform {\r\n  private decimalPipe = new DecimalPipe('sr-Latn-ME');\r\n\r\n  transform(value: CurrencyAmount, args?: any): any {\r\n    if (Utils.isNullEmptyOrUndefined(value) || Utils.isNullEmptyOrUndefined(value.amount)) return '';\r\n    let v = '' + this.decimalPipe.transform(value.amount, '1.2-2');\r\n    if (!Utils.isNullEmptyOrUndefined(value.currencyCode))\r\n      v += ' ' + (Constants.currencyCodes[value.currencyCode] !== undefined ? Constants.currencyCodes[value.currencyCode] : '');\r\n\r\n    return v;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Constants } from '../extensions/constants';\r\n\r\n@Pipe({\r\n  name: 'dateTimeFormat'\r\n})\r\nexport class DateTimeFormatPipe extends DatePipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    return super.transform(value, Constants.DATE_TIME_FMT);\r\n  }\r\n\r\n}\r\n","import { Utils } from './../extensions/utils';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'emptyStringToDefault'\r\n})\r\nexport class EmptyStringToDefaultPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    // if (value === undefined || value === null || value.value === undefined || value.value === null) return '-';\r\n    // return value.value.caption;\r\n    if (Utils.isNullEmptyOrUndefined(value)) return '-';\r\n    return value;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from '../services/translation.service';\n\n@Pipe({\n  name: 'lifecycleStatus'\n})\nexport class LifecycleStatusPipe implements PipeTransform {\n  statuses = {\n    1: 'Ready',\n    2: 'Active',\n    4: 'Canceled',\n    8: 'Completed',\n    16: 'Terminated',\n    32: 'Suspend',\n    64: 'Published',\n    128: 'Deleted',\n    256: 'Deactivated',\n    512: 'PublishPending'\n  };\n\n  constructor() {\n  }\n  transform(value: any, args?: any): any {\n    const status = this.statuses[value];\n    if (status === undefined)\n      return value;\n    return status;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Constants } from '../extensions/constants';\r\nimport { Quantity } from '../POCO/Quantity';\r\n\r\n@Pipe({\r\n  name: 'quantity'\r\n})\r\nexport class QuantityPipe implements PipeTransform {\r\n\r\n  transform(value: Quantity, args?: any): any {\r\n    let v = '' + value.amount;\r\n    if (value.unitOfMeasure !== undefined)\r\n      v += ' ' + value.unitOfMeasure;\r\n    return v;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { Utils } from '../extensions/utils';\r\n\r\n@Pipe({\r\n  name: 'translate'\r\n})\r\nexport class TranslatePipe implements PipeTransform {\r\n\r\n  constructor(private translationService: TranslationService) {\r\n  }\r\n\r\n  transform(value: any, args?: any, byObject?: any): any {\r\n    if (args === undefined || args === null)\r\n      return;\r\n\r\n    if (!Utils.isNullEmptyOrUndefined(byObject))\r\n       return this.translationService.getForKeyByObject(value);\r\n\r\n      // console.log(value);\r\n    return this.translationService.getForKey(value);\r\n  }\r\n\r\n}\r\n","import { Directive, OnInit, Input, ElementRef, HostListener } from '@angular/core';\r\nimport { NgModel } from '@angular/forms';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { tap, map } from 'rxjs/operators';\r\nimport { Utils } from '../../extensions/utils';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[decimalFormatter][ngModel]',\r\n  providers: [NgModel]\r\n})\r\nexport class DecimalFormatterDirective implements OnInit {\r\n\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('decimals') decimals: string;\r\n  locale = 'sr-Latn-ME';\r\n  decimalFormatPipe: DecimalPipe;\r\n  lastValue: any;\r\n  rgx = /^\\d*((\\,|\\.)\\d*)?(?!\\w)$/g;\r\n\r\n  private el: HTMLInputElement;\r\n  constructor(\r\n            private elementRef: ElementRef,\r\n            private ngModel: NgModel\r\n  ) {\r\n    this.el = this.elementRef.nativeElement;\r\n    this.decimalFormatPipe = new DecimalPipe('sr-Latn-ME');\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    if (this.decimals == null)\r\n      this.decimals = '1.2-2';\r\n\r\n    this.el.value = this.decimalFormatPipe.transform(this.el.value, this.decimals, this.locale);\r\n    if (this.el.value === '0')\r\n      this.el.value = '';\r\n  }\r\n\r\n  @HostListener('focus', ['$event.target.value'])\r\n  onFocus(value) {\r\n      this.el.value = this.ngModel.viewModel;\r\n      this.lastValue = this.ngModel.viewModel;\r\n  }\r\n\r\n  @HostListener('blur', ['$event.target.value'])\r\n  onBlur(value) {\r\n    try {\r\n      this.ngModel.viewModel = this.el.value;\r\n      const nocomma = this.el.value.replace(',', '.');\r\n      this.el.value = this.decimalFormatPipe.transform(nocomma, this.decimals, this.locale);\r\n    } catch (ex) {\r\n      if (!Utils.isNullEmptyOrUndefined(this.lastValue) && Utils.regexMatch(this.rgx, this.lastValue)) {\r\n        this.el.value = this.decimalFormatPipe.transform(this.lastValue, this.decimals, this.locale);\r\n        this.ngModel.viewModel = this.lastValue;\r\n      }\r\n    }\r\n  }\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyPress(event) {\r\n      this.lastValue = Utils.deepClone(event.target.value);\r\n      if ((event.code === 'Comma' && this.lastValue.indexOf(',') === -1)\r\n        || event.code === 'Delete' || event.code === 'Backspace' || !RegExp(/\\D/).test(event.key)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n}\r\n","import { Directive, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { MatAutocomplete } from '@angular/material';\r\nimport { Subject } from 'rxjs';\r\nimport { tap, takeUntil } from 'rxjs/operators';\r\nimport { Utils } from '../../extensions/utils';\r\n\r\nexport interface IAutoCompleteScrollEvent {\r\n  autoComplete: MatAutocomplete;\r\n  scrollEvent: Event;\r\n}\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'mat-autocomplete[optionsScroll]'\r\n})\r\nexport class OptionsScrollDirective implements OnDestroy {\r\n\r\n\r\n  @Input() tressholdPercent = 0.8;\r\n  // tslint:disable-next-line:no-output-rename\r\n  @Output('optionsScroll') scroll = new EventEmitter<IAutoCompleteScrollEvent>();\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  _onDestroy = new Subject();\r\n  constructor(public autoComplete: MatAutocomplete) {\r\n    this.autoComplete.opened.pipe(\r\n      tap(() => {\r\n        setTimeout(() => {\r\n          this.removeScrollEventListener();\r\n          this.autoComplete.panel.nativeElement.addEventListener('scroll', this.onScroll.bind(this));\r\n        }, 1);\r\n      }),\r\n      takeUntil(this._onDestroy)\r\n    ).subscribe();\r\n\r\n    this.autoComplete.closed.pipe(\r\n      tap(() => this.removeScrollEventListener()),\r\n      takeUntil(this._onDestroy)).subscribe();\r\n  }\r\n  private removeScrollEventListener() {\r\n    if (!Utils.isNullEmptyOrUndefined(this.autoComplete.panel))\r\n      this.autoComplete.panel.nativeElement\r\n        .removeEventListener('scroll', this.onScroll);\r\n  }\r\n  ngOnDestroy(): void {\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n    this.removeScrollEventListener();\r\n  }\r\n\r\n  onScroll(event: Event) {\r\n    if (this.tressholdPercent === undefined)\r\n      this.scroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\r\n    else {\r\n      const tress = this.tressholdPercent * 100 * this.autoComplete.panel.nativeElement.scrollHeight / 100;\r\n      const current = this.autoComplete.panel.nativeElement.scrollTop + this.autoComplete.panel.nativeElement.clientHeight;\r\n\r\n      if (current > tress)\r\n        this.scroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule\n  , MatListModule, MatFormFieldModule, MatInputModule, MatButtonToggleModule\n  , MatChipsModule, MatBadgeModule, MatSlideToggleModule, MatCardModule, MatMenuModule\n  , MatDividerModule, MatProgressSpinnerModule, MatRadioModule, MatCheckboxModule\n  , MatGridListModule, MatTooltipModule, MatExpansionModule, MatSelectModule, MatDatepickerModule\n  , MatProgressBarModule, MatSliderModule, MatStepperModule, MatDialogModule, MatTabsModule\n  , MatNativeDateModule, MatSnackBarModule, MatTableModule, MatPaginatorModule, MatSortModule\n  , MatAutocompleteModule, MatTreeModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\n\n\n@NgModule({\n  declarations: [],\n  exports: [\n      MatToolbarModule,\n      MatButtonModule,\n      MatSidenavModule,\n      MatIconModule,\n      MatListModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatButtonToggleModule,\n      MatChipsModule,\n      MatBadgeModule,\n      MatSlideToggleModule,\n      MatCardModule,\n      MatMenuModule,\n      MatDividerModule,\n      MatProgressSpinnerModule,\n      MatRadioModule,\n      MatCheckboxModule,\n      MatGridListModule,\n      MatTooltipModule,\n      MatExpansionModule,\n      MatSelectModule,\n      MatDatepickerModule,\n      MatProgressBarModule,\n      MatSliderModule,\n      MatStepperModule,\n      MatDialogModule,\n      MatTabsModule,\n      MatNativeDateModule,\n      FlexLayoutModule,\n      MatSnackBarModule,\n      FormsModule,\n      ReactiveFormsModule,\n      MatTableModule,\n      MatPaginatorModule,\n      MatSortModule,\n      MatChipsModule,\n      MatAutocompleteModule,\n      MatTreeModule,\n      DragDropModule,\n      ScrollingModule\n  ]\n})\nexport class MaterialModule { }\n","import { Injectable, TemplateRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ActionsRibbonService {\r\n\r\n  infoTemplate: TemplateRef<any>;\r\n  actionsTemplate: TemplateRef<any>;\r\n  spacerTemplate: TemplateRef<any>;\r\n  actionsContextTemplate: TemplateRef<any>;\r\n\r\n  changeSubject: Subject<any>;\r\n  constructor() {\r\n    this.changeSubject = new Subject();\r\n  }\r\n\r\n  change() {\r\n    this.changeSubject.next();\r\n  }\r\n\r\n  clear() {\r\n    this.infoTemplate = undefined;\r\n    this.actionsTemplate = undefined;\r\n    this.spacerTemplate = undefined;\r\n    this.actionsContextTemplate = undefined;\r\n    this.change();\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ActionsRibbonService } from '../../services/actions-ribbon.service';\r\n\r\n@Component({\r\n  selector: 'app-actions-ribbon',\r\n  templateUrl: './actions-ribbon.component.html',\r\n  styleUrls: ['./actions-ribbon.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ActionsRibbonComponent implements OnInit {\r\n\r\n  constructor(\r\n    public actionsRibbonService: ActionsRibbonService,\r\n    private cd: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.actionsRibbonService.changeSubject.subscribe(x => {\r\n      this.cd.markForCheck();\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Utils } from '../../extensions/utils';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-base-selected-tab',\r\n  template: `\r\n    <p>\r\n      NO UI TO BE FOUND HERE!\r\n    </p>\r\n  `,\r\n  styleUrls: ['./base-selected-tab.component.css']\r\n})\r\nexport class BaseSelectedTabComponent implements OnInit {\r\n\r\n  tabSelectedIndex: any;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n              private route: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  setUpTab() {\r\n    this.activatedRoute.queryParams.subscribe((params) => {\r\n      if (params.tab) {\r\n        this.tabSelectedIndex = +params.tab;\r\n        this.route.navigate([], {\r\n          queryParams: {\r\n            tab: null,\r\n          },\r\n          queryParamsHandling: 'merge',\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  navigateToTabWithSubject(selectedIndex, tabSubjects?: Subject<any>[]) {\r\n    tabSubjects[selectedIndex].next();\r\n    // tabSubjects[selectedIndex].complete();\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Optional } from '@angular/core';\nimport { FormControl, NgForm } from '@angular/forms';\nimport { ClassificationService } from '../../services/classification-service.service';\nimport { TranslationService } from '../../services/translation.service';\nimport { ErrorMessagesService } from '../../services/error-messages.service';\nimport { Utils } from '../../extensions/utils';\n\n@Component({\n  selector: 'app-classification-group-input',\n  templateUrl: './classification-group-input.component.html',\n  styleUrls: ['./classification-group-input.component.css']\n})\nexport class ClassificationGroupInputComponent implements OnInit {\n\n  @Input() classificationValueId: number;\n  @Input() classificationName: string;\n  @Input() classificationModel: string;\n  @Input() placeholder: string;\n  @Input() isVolatile: boolean;\n  @Input() propertyName: string;\n  @Input() selectedValue: string;\n  @Input() disabled: boolean;\n  @Input() ngFormObject: NgForm;\n\n  hasErrors: boolean;\n  groups: {options: any[], description: string, id: number}[];\n  options: any[];\n  defaultValue: any;\n  helperValue: any;\n  ngControl: FormControl;\n  form: NgForm;\n\n  @Output() classificationValueIdChange: EventEmitter<any>;\n  @Output() objectClassificationValueChange: EventEmitter<any>;\n\n  constructor(\n    private classificationService: ClassificationService,\n    public translationService: TranslationService,\n    private errorMessageService: ErrorMessagesService,\n    @Optional() private formObject: NgForm) {\n    this.classificationValueIdChange = new EventEmitter<any>();\n    this.objectClassificationValueChange = new EventEmitter<any>();\n  }\n\n  ngOnInit() {\n    // tslint:disable-next-line:max-line-length\n    this.classificationService.getGroupedClassificationValues(this.classificationName, this.classificationModel, this.isVolatile).subscribe(x => {\n      let vals = [];\n      for (let index = 0; index < x.value.length; index++) {\n        const element = x.value[index];\n        vals = [...vals, ...element.options];\n      }\n      this.options = vals;\n\n      this.defaultValue = this.options.find(y => y.isDefaultValue === true);\n      this.groups = x.value;\n\n      if (!Utils.isNullEmptyOrUndefined(this.classificationValueId)) {\n\n        const exValue = this.options.find(y => '' + y.id === '' + this.classificationValueId);\n        if (exValue !== undefined) {\n          this.classificationValueId = exValue.id;\n          this.objectClassificationValueChange.emit(exValue);\n        } else {\n          this.classificationValueId = undefined;\n          this.classificationValueIdChange.emit(this.classificationValueId);\n        }\n      } else if (!Utils.isNullEmptyOrUndefined(this.selectedValue)) {\n        const exValue = this.options.find(y => '' + y.value === '' + this.selectedValue);\n        if (exValue !== undefined) {\n          this.classificationValueId = exValue.id;\n          this.objectClassificationValueChange.emit(exValue);\n        }\n      } else if (!Utils.isNullEmptyOrUndefined(this.defaultValue)) {\n        this.classificationValueId = this.defaultValue.id;\n        this.objectClassificationValueChange.emit(this.defaultValue);\n      }\n\n      if (this.disabled === undefined)\n        this.disabled = false;\n    });\n\n    if (this.propertyName === undefined)\n      this.propertyName = Utils.newTechnicalNumber();\n\n    if (Utils.isNullEmptyOrUndefined(this.ngFormObject))\n        this.form = this.ngFormObject;\n    if (Utils.isNullEmptyOrUndefined(this.form)) {\n        this.form = this.formObject;\n      }\n\n    this.ngControl = new FormControl();\n    if (this.form !== undefined && this.form !== null && this.propertyName !== undefined)\n      this.form.form.addControl(this.propertyName, this.ngControl);\n\n    this.errorMessageService.errorPropertyMessageSubject.subscribe(x => {\n      if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === false) {\n        this.form.form.get(x.propertyName).setErrors({ incorrect: true });\n        this.hasErrors = true;\n      } else if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === true) {\n        this.hasErrors = false;\n        this.form.form.get(x.propertyName).setErrors(null);\n      }\n    });\n    this.errorMessageService.removeFormErrorsSubject.subscribe(x => {\n      this.hasErrors = false;\n      if (!Utils.isNullEmptyOrUndefined(this.form.form.get(this.propertyName) && this.propertyName !== undefined))\n        this.form.form.get(this.propertyName).setErrors(null);\n    });\n  }\n\n  change(event) {\n    this.classificationValueId = event.value;\n    this.classificationValueIdChange.emit(this.classificationValueId);\n\n    const exValue = this.options.find(y => '' + y.id === '' + this.classificationValueId);\n    if (exValue !== undefined)\n      this.objectClassificationValueChange.emit(exValue);\n    const pname = this.propertyName;\n    this.form.form.markAsDirty();\n    this.form.form.patchValue({pname: this.classificationValueId});\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, Optional } from '@angular/core';\r\nimport { ClassificationService } from '../../services/classification-service.service';\r\nimport { Utils } from '../../extensions/utils';\r\nimport { TranslationService } from '../../services/translation.service';\r\nimport { FormControl, NgForm } from '@angular/forms';\r\nimport { ErrorMessagesService } from '../../services/error-messages.service';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-classification-input',\r\n  templateUrl: './classification-input.component.html',\r\n  styleUrls: ['./classification-input.component.css']\r\n})\r\nexport class ClassificationInputComponent implements OnInit {\r\n\r\n  @Input() classificationValueId: number;\r\n  @Input() classificationName: string;\r\n  @Input() classificationModel: string;\r\n  @Input() placeholder: string;\r\n  @Input() isVolatile: boolean;\r\n  @Input() propertyName: string;\r\n  @Input() selectedValue: string;\r\n  @Input() disabled: boolean;\r\n  @Input() resetToDefault: Subject<any>;\r\n  @Input() ngFormObject: NgForm;\r\n\r\n  hasErrors: boolean;\r\n  options: any[];\r\n  defaultValue: any;\r\n  helperValue: any;\r\n  ngControl: FormControl;\r\n  form: NgForm;\r\n\r\n  @Output() classificationValueIdChange: EventEmitter<any>;\r\n  @Output() objectClassificationValueChange: EventEmitter<any>;\r\n\r\n  constructor(\r\n    private classificationService: ClassificationService,\r\n    public translationService: TranslationService,\r\n    private errorMessageService: ErrorMessagesService,\r\n    @Optional() private formObject: NgForm) {\r\n    this.classificationValueIdChange = new EventEmitter<any>();\r\n    this.objectClassificationValueChange = new EventEmitter<any>();\r\n\r\n    if (Utils.isNullEmptyOrUndefined(this.ngFormObject))\r\n      this.form = this.ngFormObject;\r\n    if (Utils.isNullEmptyOrUndefined(this.form)) {\r\n      this.form = this.formObject;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.classificationService.getClassificationValues(this.classificationName, this.classificationModel, this.isVolatile).subscribe(x => {\r\n      this.defaultValue = x.value.find(y => y.isDefaultValue === true);\r\n      this.options = x.value;\r\n\r\n      if (!Utils.isNullEmptyOrUndefined(this.classificationValueId)) {\r\n        const exValue = this.options.find(y => '' + y.id === '' + this.classificationValueId);\r\n        if (exValue !== undefined) {\r\n          this.classificationValueId = exValue.id;\r\n          this.classificationValueIdChange.emit(exValue.id);\r\n          this.objectClassificationValueChange.emit(exValue);\r\n        } else {\r\n          this.classificationValueId = undefined;\r\n          this.classificationValueIdChange.emit(undefined);\r\n          this.classificationValueIdChange.emit(this.classificationValueId);\r\n        }\r\n      } else if (!Utils.isNullEmptyOrUndefined(this.selectedValue)) {\r\n        const exValue = this.options.find(y => '' + y.value === '' + this.selectedValue);\r\n        if (exValue !== undefined) {\r\n          this.classificationValueId = exValue.id;\r\n          this.classificationValueIdChange.emit(exValue.id);\r\n          this.objectClassificationValueChange.emit(exValue);\r\n        }\r\n      } else if (!Utils.isNullEmptyOrUndefined(this.defaultValue)) {\r\n        this.classificationValueId = this.defaultValue.id;\r\n        this.objectClassificationValueChange.emit(this.defaultValue);\r\n        const pName = this.propertyName;\r\n        this.form.form.patchValue({pName: this.defaultValue.id});\r\n      }\r\n\r\n\r\n      if (this.disabled === undefined)\r\n        this.disabled = false;\r\n    });\r\n\r\n    if (this.propertyName === undefined)\r\n      this.propertyName = Utils.newTechnicalNumber();\r\n\r\n    this.ngControl = new FormControl();\r\n\r\n\r\n    if (this.form !== undefined && this.form !== null && this.propertyName !== undefined)\r\n      this.form.form.addControl(this.propertyName, this.ngControl);\r\n\r\n    this.errorMessageService.errorPropertyMessageSubject.subscribe(x => {\r\n      if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === false) {\r\n        this.form.form.get(x.propertyName).setErrors({ incorrect: true });\r\n        this.hasErrors = true;\r\n      } else if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === true) {\r\n        this.hasErrors = false;\r\n        this.form.form.get(x.propertyName).setErrors(null);\r\n      }\r\n    });\r\n    this.errorMessageService.removeFormErrorsSubject.subscribe(x => {\r\n      this.hasErrors = false;\r\n      if (!Utils.isNullEmptyOrUndefined(this.form.form.get(this.propertyName) && this.propertyName !== undefined))\r\n        this.form.form.get(this.propertyName).setErrors(null);\r\n    });\r\n    if (this.resetToDefault !== undefined) {\r\n      this.resetToDefault.subscribe(x => {\r\n        if (!Utils.isNullEmptyOrUndefined(this.defaultValue)) {\r\n          this.classificationValueId = this.defaultValue.id;\r\n          this.classificationValueIdChange.emit(this.defaultValue.id);\r\n          this.objectClassificationValueChange.emit(this.defaultValue);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  change(event) {\r\n    this.classificationValueId = event.value;\r\n    this.classificationValueIdChange.emit(this.classificationValueId);\r\n\r\n    const exValue = this.options.find(y => '' + y.id === '' + this.classificationValueId);\r\n    if (exValue !== undefined)\r\n      this.objectClassificationValueChange.emit(exValue);\r\n    const pname = this.propertyName;\r\n    this.form.form.markAsDirty();\r\n    this.form.form.patchValue({pname: this.classificationValueId});\r\n\r\n  }\r\n}\r\n","export class CurrencyAmount {\r\n  constructor() {\r\n    this.amount = null;\r\n  }\r\n  amount: number;\r\n  currencyCode: string;\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { ClassificationService } from '../../services/classification-service.service';\r\nimport { Utils } from '../../extensions/utils';\r\nimport { FormControl, NgForm } from '@angular/forms';\r\nimport { ErrorMessagesService } from '../../services/error-messages.service';\r\nimport { CurrencyAmount } from '../../POCO/currencyAmount';\r\n\r\n@Component({\r\n  selector: 'app-currency-amount',\r\n  templateUrl: './currency-amount.component.html',\r\n  styleUrls: ['./currency-amount.component.css']\r\n})\r\nexport class CurrencyAmountComponent implements OnInit {\r\n\r\n  @Input() currencyAmount: CurrencyAmount;\r\n  @Input() isReadOnly: boolean;\r\n  @Input() placeholder: string;\r\n  @Input() propertyName: string;\r\n  @Input() showCurrency = true;\r\n  @Input() ngFormObject: NgForm;\r\n  @Output() currencyAmountChange = new EventEmitter<CurrencyAmount>();\r\n\r\n  currencies = [];\r\n  form: NgForm;\r\n\r\n  ngControlAmount: FormControl;\r\n  ngControlCurrency: FormControl;\r\n\r\n  constructor(\r\n    private classificationService: ClassificationService,\r\n    private errorMessageService: ErrorMessagesService,\r\n    private formObject: NgForm) {\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.propertyName === undefined)\r\n      this.propertyName = Utils.newTechnicalNumber();\r\n\r\n    if (Utils.isNullEmptyOrUndefined(this.ngFormObject))\r\n      this.form = this.ngFormObject;\r\n\r\n    if (Utils.isNullEmptyOrUndefined(this.form)) {\r\n      this.form = this.formObject;\r\n    }\r\n\r\n    this.ngControlAmount = new FormControl();\r\n    this.ngControlCurrency = new FormControl();\r\n    if (this.form !== undefined) {\r\n      this.form.form.addControl(this.propertyName + 'Amount', this.ngControlAmount);\r\n      this.form.form.addControl(this.propertyName + 'CurrencyCode', this.ngControlCurrency);\r\n    }\r\n    this.getCurrency();\r\n   }\r\n\r\n  getCurrency() {\r\n    this.classificationService.getClassificationValues('ShortCurrency').subscribe(x => {\r\n      if (Utils.isNullEmptyOrUndefined(x) || Utils.isNullEmptyOrUndefined(x.value))\r\n        return;\r\n      this.currencies = x.value;\r\n      const defaultCurrency = this.currencies.find(y => y.isDefaultValue === true);\r\n      this.currencyAmount.currencyCode = defaultCurrency.value;\r\n      this.currencyAmountChange.emit(this.currencyAmount);\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { ErrorMessagesService } from '../../services/error-messages.service';\r\nimport { Utils } from '../../extensions/utils';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ErrorDialogComponent } from './error-dialog/error-dialog.component';\r\nimport { ErrorMessage } from '../../poco/errorMessage';\r\n\r\n@Component({\r\n  selector: 'app-error-display',\r\n  templateUrl: './error-display.component.html',\r\n  styleUrls: ['./error-display.component.css']\r\n})\r\nexport class ErrorDisplayComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  @Input() errors: string[];\r\n  @Input() source: string;\r\n  @Input() showDialog = false;\r\n\r\n  sources: string[];\r\n  subscription: Subject<ErrorMessage>;\r\n  subscriptionSubscriber: Subscription;\r\n  constructor(private errorService: ErrorMessagesService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    if (!Utils.isNullEmptyOrUndefined(this.source)) {\r\n      this.sources = [];\r\n      this.source = this.source.toLowerCase();\r\n      this.sources = this.source.split(',');\r\n    }\r\n\r\n    // tslint:disable-next-line: max-line-length\r\n    // if (Utils.isNullEmptyOrUndefined(this.errorService.errorMessagesSubject.observers) || this.errorService.errorMessagesSubject.observers.length < 1)\r\n    this.subscriptionSubscriber = this.errorService.errorMessagesSubject.subscribe(x => {\r\n        if (this.sources !== undefined) {\r\n          const myErrors = this.sources.find(y => y === x.source);\r\n          if (myErrors !== undefined)\r\n            if (x.isCleanup === true)\r\n              this.errors = [];\r\n            else\r\n              // this.errors = x.errors;\r\n              if (this.showDialog && x.errors !== undefined && x.errors.length > 0)\r\n                this.dialog.open(ErrorDialogComponent, {\r\n                  data: {errors: x.errors}, panelClass: 'dialog-error'\r\n                });\r\n              else this.errors = x.errors;\r\n        } else\r\n          this.errors = x.errors;\r\n      });\r\n  }\r\n  ngOnDestroy(): void {\r\n    if (!this.subscriptionSubscriber.closed)\r\n      this.subscriptionSubscriber.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-general-error-page',\n  templateUrl: './general-error-page.component.html',\n  styleUrls: ['./general-error-page.component.css']\n})\nexport class GeneralErrorPageComponent implements OnInit {\n\n  constructor(public translationService: TranslationService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ErrorMessagesService } from '../../services/error-messages.service';\r\n\r\n@Component({\r\n  selector: '[app-input-validation-message]',\r\n  templateUrl: './input-validation-message.component.html',\r\n  styleUrls: ['./input-validation-message.component.css']\r\n})\r\nexport class InputValidationMessageComponent implements OnInit {\r\n\r\n  @Input() propertyName: string;\r\n\r\n  errors: string[];\r\n  constructor(private errorMessageService: ErrorMessagesService) { }\r\n\r\n  ngOnInit() {\r\n    // TODO: fix logic\r\n    this.errorMessageService.errorPropertyMessageSubject.subscribe(x => {\r\n      if (this.propertyName === x.propertyName && x.isCleanup === false)\r\n        this.errors = x.errorMessage.split('###');\r\n      else if (this.propertyName === x.propertyName && x.isCleanup === true)\r\n        this.errors = [];\r\n    });\r\n    this.errorMessageService.removeFormErrorsSubject.subscribe(x => {\r\n      this.errors = [];\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  loadingSubject: Subject<boolean>;\n  moduleLoadingSubject: Subject<boolean>;\n  // timeout: any;\n  constructor() {\n    this.loadingSubject = new Subject();\n    this.moduleLoadingSubject = new Subject();\n  }\n\n  loader(loading) {\n    this.loadingSubject.next(loading);\n    // if (loading === true) {\n    //     this.timeout = setTimeout(() => this.loadingSubject.next(false), 120000);\n    // } else {\n    //   if (this.timeout !== undefined)\n    //     clearTimeout(this.timeout);\n    // }\n  }\n\n  moduleLoading(loading) {\n    this.moduleLoadingSubject.next(loading);\n  }\n}\n","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { LoadingService } from '../../services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n\r\n  loadingStatus = 0;\r\n  constructor(private loaderService: LoadingService, private cd: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.loaderService.loadingSubject.subscribe(x => {\r\n      if (x === true)\r\n        this.loadingStatus++;\r\n      else this.loadingStatus--;\r\n\r\n      if (this.loadingStatus < 0)\r\n        this.loadingStatus = 0;\r\n\r\n      this.cd.markForCheck();\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { TranslationService } from '../../services/translation.service';\r\nimport { Utils } from '../../extensions/utils';\r\n\r\n@Component({\r\n  selector: 'app-notification-dialog-unsaved',\r\n  templateUrl: './notification-dialog-unsaved.component.html',\r\n  styleUrls: ['./notification-dialog-unsaved.component.css']\r\n})\r\nexport class NotificationDialogUnsavedComponent implements OnInit {\r\n\r\n  saveDataText = 'Save data?';\r\n  bodyText = 'You have unsaved changes! Do you want to continue?';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<NotificationDialogUnsavedComponent>,\r\n    public translateService: TranslationService) { }\r\n\r\n  ngOnInit() {\r\n    if (!Utils.isNullEmptyOrUndefined(this.data)) {\r\n      if (!Utils.isNullEmptyOrUndefined(this.data.saveDataText))\r\n        this.saveDataText = this.data.saveDataText;\r\n\r\n      if (!Utils.isNullEmptyOrUndefined(this.data.bodyText))\r\n        this.bodyText = this.data.bodyText;\r\n    }\r\n  }\r\n}\r\n","export class Quantity{\r\n  amount: number;\r\n  unitOfMeasure: string;\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Utils } from '../../extensions/utils';\r\nimport { TranslationService } from '../../services/translation.service';\r\nimport { NgForm, FormControl } from '@angular/forms';\r\nimport { Quantity } from '../../POCO/Quantity';\r\n\r\n@Component({\r\n  selector: 'app-quantity',\r\n  templateUrl: './quantity.component.html',\r\n  styleUrls: ['./quantity.component.css']\r\n})\r\nexport class QuantityComponent implements OnInit {\r\n\r\n  @Input() quantity: Quantity;\r\n  @Input() isReadOnly: boolean;\r\n  @Input() placeholder: string;\r\n  @Input() propertyName: string;\r\n\r\n  ngControlAmount: FormControl;\r\n  ngControlUnitOfMeasure: FormControl;\r\n\r\n  @Output() quantityChange = new EventEmitter<Quantity>();\r\n  units = [];\r\n  constructor(\r\n    public translationService: TranslationService,\r\n    private form: NgForm) { }\r\n\r\n  ngOnInit() {\r\n    this.getUnits();\r\n\r\n    if (this.propertyName === undefined)\r\n      this.propertyName = Utils.newTechnicalNumber();\r\n\r\n    this.ngControlAmount = new FormControl();\r\n    this.ngControlUnitOfMeasure = new FormControl();\r\n    if (this.form !== undefined) {\r\n      this.form.form.addControl(this.propertyName + 'Amount', this.ngControlAmount);\r\n      this.form.form.addControl(this.propertyName + 'UnitOfMeasure', this.ngControlUnitOfMeasure);\r\n    }\r\n\r\n  }\r\n\r\n  getUnits() {\r\n    // this.classificationService.getClassificationValues('Quantity').subscribe(x => {\r\n    //   if (Utils.isNullEmptyOrUndefined(x) || Utils.isNullEmptyOrUndefined(x.value))\r\n    //     return;\r\n    //   this.units = x.value;\r\n    //   const defaultCurrency = this.units.find(y => y.isDefaultValue === true);\r\n    //   if (defaultCurrency !== undefined)\r\n    //     this.quantity.unitOfMeasureId = defaultCurrency.value;\r\n    // });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ISearchParams } from '../interfaces/ISearchParams';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  search(searchParams: ISearchParams) {\r\n    let params = new HttpParams();\r\n    params = params.append('typeName', searchParams.typename).append('searchTerm', searchParams.searchTerm)\r\n    .append('skip', '' + searchParams.skip).append('top', '' + searchParams.top);\r\n    return this.apiService.get('common', 'search', params);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { MatAutocomplete, MatAutocompleteTrigger } from '@angular/material';\r\nimport { fromEvent, Subject, merge, forkJoin, of, from } from 'rxjs';\r\nimport { debounceTime, switchMap, distinctUntilChanged, combineLatest, combineAll } from 'rxjs/operators';\r\nimport { SearchService } from '../../services/search.service';\r\nimport { Utils } from '../../extensions/utils';\r\nimport { TranslationService } from '../../services/translation.service';\r\nimport { FormControl, NgForm } from '@angular/forms';\r\nimport { ErrorMessagesService } from '../../services/error-messages.service';\r\n\r\n@Component({\r\n  selector: 'app-typeahead-input',\r\n  templateUrl: './typeahead-input.component.html',\r\n  styleUrls: ['./typeahead-input.component.css']\r\n})\r\nexport class TypeaheadInputComponent implements OnInit {\r\n\r\n  readonly typeaheadSkipValue = 6;\r\n  readonly minNumOfCharToSearch = 3;\r\n\r\n  @Input() typeaheadValue: any;\r\n  @Input() placeholder: string;\r\n  @Input() typename: string;\r\n  @Input() selectedValue: any;\r\n  @Input() filterFormatFn: (value: any) => any;\r\n  @Input() public displayResultFn: (value) => string;\r\n  @Input() propertyName: string;\r\n  @Input() readonly = false;\r\n  @Input() ngFormObject: NgForm;\r\n\r\n  results: any[];\r\n  skip: number;\r\n  top: number;\r\n  currentValue: string;\r\n  hasErrors = false;\r\n  inputChangeSubject: Subject<string>;\r\n  ngControl: FormControl;\r\n  isLoading = false;\r\n  form: NgForm;\r\n\r\n  private nextPage = new Subject();\r\n\r\n  valueChosen = false;\r\n\r\n  @Output() typeaheadValueChange: EventEmitter<any>;\r\n  @Output() typeaheadSelectedValueChange: EventEmitter<any>;\r\n\r\n  @ViewChild('autocomplete', {static: false}) autocomplete: MatAutocomplete;\r\n  @ViewChild(MatAutocompleteTrigger, {static: false}) autocompleteTrigger: MatAutocompleteTrigger;\r\n\r\n  constructor(\r\n    private searchService: SearchService,\r\n    public translateService: TranslationService,\r\n    private formObject: NgForm,\r\n    private errorMessageService: ErrorMessagesService) {\r\n      this.typeaheadValueChange = new EventEmitter();\r\n      this.typeaheadSelectedValueChange = new EventEmitter();\r\n      this.inputChangeSubject = new Subject();\r\n      this.nextPage = new Subject();\r\n      this.skip = 0;\r\n      this.top = this.typeaheadSkipValue;\r\n      this.results = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    merge(this.inputChangeSubject.pipe(\r\n            debounceTime(400),\r\n            distinctUntilChanged((a, b) => {\r\n              if (b.length < this.minNumOfCharToSearch || a === b)\r\n                return true;\r\n              this.resetFilter();\r\n              return false;\r\n            })),\r\n          this.nextPage.pipe(\r\n            distinctUntilChanged((a, b) => {\r\n              if (a === b)\r\n                return true;\r\n              return false;\r\n            })))\r\n            .pipe(switchMap((x) => {\r\n              if (Utils.isNullEmptyOrUndefined(this.currentValue) || this.currentValue.length < this.minNumOfCharToSearch) {\r\n                this.resetFilter();\r\n                return of({value: []});\r\n              }\r\n              let searchTermJson = null;\r\n              this.isLoading = true;\r\n              if (this.filterFormatFn === undefined)\r\n                searchTermJson = { name: this.currentValue };\r\n              else searchTermJson = this.filterFormatFn(this.currentValue);\r\n              return this.searchService.search({\r\n                typename: this.typename, searchTerm: JSON.stringify(searchTermJson),\r\n                skip: this.skip, top: this.top\r\n              });\r\n            })\r\n          )\r\n    .subscribe(x => {\r\n      if (x.value.length === this.typeaheadSkipValue)\r\n        this.skip += this.typeaheadSkipValue;\r\n\r\n      this.results = [...this.results, ...x.value];\r\n      this.autocomplete.opened.next();\r\n      this.isLoading = false;\r\n    });\r\n\r\n    if (this.propertyName === undefined)\r\n      this.propertyName = Utils.newTechnicalNumber();\r\n\r\n    if (Utils.isNullEmptyOrUndefined(this.ngFormObject))\r\n      this.form = this.ngFormObject;\r\n\r\n    if (Utils.isNullEmptyOrUndefined(this.form)) {\r\n      this.form = this.formObject;\r\n    }\r\n\r\n    this.ngControl = new FormControl();\r\n    if (this.form !== undefined)\r\n      this.form.form.addControl(this.propertyName, this.ngControl);\r\n\r\n    this.errorMessageService.errorPropertyMessageSubject.subscribe(x => {\r\n      if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === false) {\r\n        this.form.form.get(x.propertyName).setErrors({ incorrect: true });\r\n        this.form.form.get(x.propertyName).markAsDirty();\r\n        this.form.form.get(x.propertyName).markAsTouched();\r\n        this.hasErrors = true;\r\n      } else if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === true) {\r\n        this.hasErrors = false;\r\n        this.form.form.get(x.propertyName).setErrors(null);\r\n      }\r\n    });\r\n\r\n    this.errorMessageService.removeFormErrorsSubject.subscribe(x => {\r\n      this.hasErrors = false;\r\n      if (!Utils.isNullEmptyOrUndefined(this.form.form.get(this.propertyName) && this.propertyName !== undefined))\r\n        this.form.form.get(this.propertyName).setErrors(null);\r\n    });\r\n    if (this.selectedValue !== undefined && this.selectedValue.hasOwnProperty('id'))\r\n      this.valueChosen = true;\r\n  }\r\n\r\n  onScroll() {\r\n    this.nextPage.next(this.skip);\r\n  }\r\n\r\n  search(event) {\r\n    this.currentValue = event.target.value;\r\n\r\n    if (Utils.isNullEmptyOrUndefined(this.currentValue)) {\r\n      this.skip = 0;\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 8 || event.keyCode === 46)\r\n      this.clearSelectedValue();\r\n\r\n    this.inputChangeSubject.next(this.currentValue);\r\n  }\r\n\r\n  optionSelected(event) {\r\n    this.typeaheadValue = event.option.value.id;\r\n    this.selectedValue = event.option.value;\r\n    this.valueChosen = true;\r\n    this.currentValue = this.displayResultFn(event.option.value);\r\n    this.typeaheadSelectedValueChange.emit(this.selectedValue);\r\n    this.typeaheadValueChange.emit(this.typeaheadValue);\r\n    const pname = this.propertyName;\r\n    this.form.form.markAsDirty();\r\n    this.form.form.patchValue({pname: this.typeaheadValue});\r\n  }\r\n\r\n  clearSelectedValue() {\r\n    this.typeaheadValue = undefined;\r\n    this.selectedValue = undefined;\r\n    this.currentValue = '';\r\n    this.valueChosen = false;\r\n    this.typeaheadSelectedValueChange.emit(this.selectedValue);\r\n    this.typeaheadValueChange.emit(this.typeaheadValue);\r\n  }\r\n\r\n  get checkHasValue() {\r\n    return !this.valueChosen\r\n    && (this.selectedValue === undefined || this.selectedValue === null || !this.selectedValue.hasOwnProperty('id'));\r\n  }\r\n  private resetFilter() {\r\n    this.results = [];\r\n    this.skip = 0;\r\n    this.valueChosen = false;\r\n    this.top = this.typeaheadSkipValue;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material/material.module';\nimport { ActionsRibbonComponent } from './components/actions-ribbon/actions-ribbon.component';\nimport { BaseSelectedTabComponent } from './components/base-selected-tab/base-selected-tab.component';\nimport { ClassificationGroupInputComponent } from './components/classification-group-input/classification-group-input.component';\nimport { ClassificationInputComponent } from './components/classification-input/classification-input.component';\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\nimport { CurrencyAmountComponent } from './components/currency-amount/currency-amount.component';\nimport { ErrorDisplayComponent } from './components/error-display/error-display.component';\nimport { GeneralErrorPageComponent } from './components/general-error-page/general-error-page.component';\nimport { InputValidationMessageComponent } from './components/input-validation-message/input-validation-message.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { NotificationDialogUnsavedComponent } from './components/notification-dialog-unsaved/notification-dialog-unsaved.component';\nimport { QuantityComponent } from './components/quantity/quantity.component';\nimport { TypeaheadInputComponent } from './components/typeahead-input/typeahead-input.component';\nimport { ConfirmActionDirective } from './directives/confirm-action.directive';\nimport { FormValidatorDirective } from './directives/form-validator.directive';\nimport { NumberFormatterDirective } from './directives/number-formatter.directive';\nimport { BooleanEvaluateStatusToStringPipe } from './pipes/boolean-evaluate-status-to-string.pipe';\nimport { BooleanToYesNoPipe } from './pipes/booleanToYesNo.pipe';\nimport { ClassificationValueGet } from './pipes/classification-value-get.pipe';\nimport { ClassificationValuePipe } from './pipes/classification-value.pipe';\nimport { CurrencyPipe } from './pipes/currency.pipe';\nimport { DateTimeFormatPipe } from './pipes/date-time-format.pipe';\nimport { EmptyStringToDefaultPipe } from './pipes/empty-string-to-default.pipe';\nimport { LifecycleStatusPipe } from './pipes/lifecycle-status.pipe';\nimport { QuantityPipe } from './pipes/quantity.pipe';\nimport { TranslatePipe } from './pipes/translate.pipe';\nimport { ErrorDialogComponent } from './components/error-display/error-dialog/error-dialog.component';\nimport { DecimalFormatterDirective } from './components/currency-amount/decimal-formatter.directive';\nimport { OptionsScrollDirective } from './components/typeahead-input/options-scroll.directive';\n\n@NgModule({\n  declarations: [\n    ActionsRibbonComponent,\n    BaseSelectedTabComponent,\n    ClassificationGroupInputComponent,\n    ClassificationInputComponent,\n    ConfirmDialogComponent,\n    CurrencyAmountComponent,\n    ErrorDisplayComponent,\n    ErrorDialogComponent,\n    GeneralErrorPageComponent,\n    InputValidationMessageComponent,\n    LoaderComponent,\n    NotificationDialogUnsavedComponent,\n    QuantityComponent,\n    TypeaheadInputComponent,\n    ConfirmActionDirective,\n    FormValidatorDirective,\n    NumberFormatterDirective,\n    BooleanEvaluateStatusToStringPipe,\n    BooleanToYesNoPipe,\n    ClassificationValueGet,\n    ClassificationValuePipe,\n    CurrencyPipe,\n    DateTimeFormatPipe,\n    EmptyStringToDefaultPipe,\n    LifecycleStatusPipe,\n    QuantityPipe,\n    TranslatePipe,\n    DecimalFormatterDirective,\n    OptionsScrollDirective\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule\n  ],\n  exports: [\n    ConfirmActionDirective,\n    FormValidatorDirective,\n    NumberFormatterDirective,\n    BooleanEvaluateStatusToStringPipe,\n    BooleanToYesNoPipe,\n    ClassificationValueGet,\n    ClassificationValuePipe,\n    CurrencyPipe,\n    DateTimeFormatPipe,\n    EmptyStringToDefaultPipe,\n    LifecycleStatusPipe,\n    QuantityPipe,\n    TranslatePipe,\n    ActionsRibbonComponent,\n    BaseSelectedTabComponent,\n    ClassificationGroupInputComponent,\n    ClassificationInputComponent,\n    ConfirmDialogComponent,\n    CurrencyAmountComponent,\n    ErrorDisplayComponent,\n    ErrorDialogComponent,\n    GeneralErrorPageComponent,\n    InputValidationMessageComponent,\n    LoaderComponent,\n    NotificationDialogUnsavedComponent,\n    QuantityComponent,\n    TypeaheadInputComponent,\n  ],\n  entryComponents: [\n    ErrorDialogComponent,\n    ConfirmDialogComponent,\n    NotificationDialogUnsavedComponent\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { ICommandContract } from '../interfaces/ICommandContract';\r\nimport { TranslationService } from './translation.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommandService {\r\n\r\n  constructor(private apiService: ApiService, private translateService: TranslationService) { }\r\n\r\n  private locationCache: { [id: string]: any } = {};\r\n  // TODO: write calling query method using ICommandContract\r\n\r\n  public post(zone: string, route: string, contract: ICommandContract) {\r\n    return this.apiService.post(zone, route, undefined, contract);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { HttpParams, HttpClient } from '@angular/common/http';\r\nimport { IQueryContract } from '../interfaces/IQueryContract';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QueryService {\r\n\r\n  constructor(private apiService: ApiService, private http: HttpClient) { }\r\n\r\n  public get(zone: string, route: string, contract: IQueryContract) {\r\n    let params = new HttpParams();\r\n    const vl = Object.entries<any>(contract);\r\n    for (let i = 0; i < vl.length; i++) {\r\n      const val = vl[i];\r\n      params = params.append(val[0], val[1]);\r\n    }\r\n    return this.apiService.get(zone, route, params);\r\n  }\r\n\r\n  public getBlobDocument(zone: string, path: string) {\r\n    return this.http.get(`${this.apiService.getApiUrl()}/${zone}/${path}`\r\n      , { responseType: 'blob', observe: 'response' });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatPaginatorIntl } from '@angular/material';\r\nimport { TranslationService } from './translation.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaginatorI18nService extends MatPaginatorIntl {\r\n\r\n  itemsPerPageLabel: string;\r\n  nextPageLabel: string;\r\n  previousPageLabel: string;\r\n  firstPageLabel: string;\r\n  lastPageLabel: string;\r\n  ofLabel: string;\r\n  zeroOfLabel: string;\r\n\r\n  constructor(private translationService: TranslationService) {\r\n    super();\r\n    this.itemsPerPageLabel = this.translationService.getForKey('Items per page');\r\n    this.nextPageLabel = this.translationService.getForKey('Next page');\r\n    this.ofLabel = this.translationService.getForKey('of');\r\n    this.previousPageLabel = this.translationService.getForKey('Previous page');\r\n    this.firstPageLabel = this.translationService.getForKey('First page');\r\n    this.lastPageLabel = this.translationService.getForKey('Last page');\r\n    this.zeroOfLabel = this.translationService.getForKey('0 of');\r\n    this.changes.next();\r\n    this.translationService.cultureChange.subscribe(x => {\r\n      this.itemsPerPageLabel = this.translationService.getForKey('Items per page');\r\n      this.nextPageLabel = this.translationService.getForKey('Next page');\r\n      this.ofLabel = this.translationService.getForKey('of');\r\n      this.previousPageLabel = this.translationService.getForKey('Previous page');\r\n      this.firstPageLabel = this.translationService.getForKey('First page');\r\n      this.lastPageLabel = this.translationService.getForKey('Last page');\r\n      this.zeroOfLabel = this.translationService.getForKey('0 of');\r\n      this.changes.next();\r\n    });\r\n  }\r\n\r\n  getRangeLabel = (page: number, pageSize: number, length: number) => {\r\n\r\n    if (length === 0 || pageSize === 0) {\r\n      return this.zeroOfLabel + ' ' + length;\r\n    }\r\n    length = Math.max(length, 0);\r\n    const startIndex = page * pageSize;\r\n    const endIndex = startIndex < length ?\r\n      Math.min(startIndex + pageSize, length) :\r\n      startIndex + pageSize;\r\n    return startIndex + 1 + ' - ' + endIndex + ' ' + this.ofLabel + ' ' + length;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { NotificationDialogUnsavedComponent } from '../components/notification-dialog-unsaved/notification-dialog-unsaved.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class UnsavedDataNotificationService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  hasChangedData = false;\r\n  formChangesSubscription: Subscription;\r\n  currentForm: NgForm;\r\n\r\n  startTracking(ngForm: NgForm) {\r\n    this.currentForm = ngForm;\r\n    this.currentForm.form.markAsPristine();\r\n    this.formChangesSubscription = ngForm.form.valueChanges.subscribe(x => {\r\n      if (this.currentForm.form.dirty)\r\n        this.hasChangedData = true;\r\n    });\r\n  }\r\n  trackingCheckpoint() {\r\n    this.currentForm.form.markAsPristine();\r\n    this.hasChangedData = false;\r\n  }\r\n\r\n  stopTracking() {\r\n    this.hasChangedData = false;\r\n    this.formChangesSubscription.unsubscribe();\r\n  }\r\n\r\n  doActionWithCheckUnsaved(action, fallbackAction?, modalData?) {\r\n    if (!this.hasChangedData) {\r\n      action();\r\n      return;\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(NotificationDialogUnsavedComponent, {\r\n      width: '356px',\r\n      data: modalData\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === true) {\r\n        this.hasChangedData = false;\r\n        action();\r\n      } else {\r\n        if (fallbackAction !== undefined)\r\n          fallbackAction();\r\n      }\r\n    });\r\n  }\r\n  checkChangesAction(hasChanges, noChanges, modalData?) {\r\n    if (!this.hasChangedData) {\r\n      noChanges();\r\n      return;\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(NotificationDialogUnsavedComponent, {\r\n      width: '356px',\r\n      data: modalData\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === true) {\r\n        this.hasChangedData = false;\r\n        hasChanges();\r\n      } else\r\n        noChanges();\r\n    });\r\n  }\r\n}\r\n"],"names":["TranslationService","tslib_1.__extends"],"mappings":"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"}