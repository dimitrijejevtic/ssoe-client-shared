{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ssoe-client-shared/shared/extensions/utils.ts","ng://ssoe-client-shared/shared/services/config.service.ts","ng://ssoe-client-shared/shared/services/api.service.ts","ng://ssoe-client-shared/shared/services/translation.service.ts","ng://ssoe-client-shared/shared/components/confirm-dialog/confirm-dialog.component.ts","ng://ssoe-client-shared/shared/directives/confirm-action.directive.ts","ng://ssoe-client-shared/shared/components/error-display/error-dialog/error-dialog.component.ts","ng://ssoe-client-shared/shared/poco/errorMessage.ts","ng://ssoe-client-shared/shared/services/error-messages.service.ts","ng://ssoe-client-shared/shared/directives/form-validator.directive.ts","ng://ssoe-client-shared/shared/directives/number-formatter.directive.ts","ng://ssoe-client-shared/shared/pipes/boolean-evaluate-status-to-string.pipe.ts","ng://ssoe-client-shared/shared/pipes/booleanToYesNo.pipe.ts","ng://ssoe-client-shared/shared/services/classification-service.service.ts","ng://ssoe-client-shared/shared/pipes/classification-value-get.pipe.ts","ng://ssoe-client-shared/shared/pipes/classification-value.pipe.ts","ng://ssoe-client-shared/shared/extensions/constants.ts","ng://ssoe-client-shared/shared/pipes/currency.pipe.ts","ng://ssoe-client-shared/shared/pipes/date-time-format.pipe.ts","ng://ssoe-client-shared/shared/pipes/empty-string-to-default.pipe.ts","ng://ssoe-client-shared/shared/pipes/lifecycle-status.pipe.ts","ng://ssoe-client-shared/shared/pipes/quantity.pipe.ts","ng://ssoe-client-shared/shared/pipes/translate.pipe.ts","ng://ssoe-client-shared/shared/components/currency-amount/decimal-formatter.directive.ts","ng://ssoe-client-shared/shared/components/typeahead-input/options-scroll.directive.ts","ng://ssoe-client-shared/material/material.module.ts","ng://ssoe-client-shared/shared/services/actions-ribbon.service.ts","ng://ssoe-client-shared/shared/components/actions-ribbon/actions-ribbon.component.ts","ng://ssoe-client-shared/shared/components/base-selected-tab/base-selected-tab.component.ts","ng://ssoe-client-shared/shared/components/classification-group-input/classification-group-input.component.ts","ng://ssoe-client-shared/shared/components/classification-input/classification-input.component.ts","ng://ssoe-client-shared/shared/components/currency-amount/currency-amount.component.ts","ng://ssoe-client-shared/shared/components/error-display/error-display.component.ts","ng://ssoe-client-shared/shared/components/general-error-page/general-error-page.component.ts","ng://ssoe-client-shared/shared/components/input-validation-message/input-validation-message.component.ts","ng://ssoe-client-shared/shared/services/loading.service.ts","ng://ssoe-client-shared/shared/components/loader/loader.component.ts","ng://ssoe-client-shared/shared/components/notification-dialog-unsaved/notification-dialog-unsaved.component.ts","ng://ssoe-client-shared/shared/components/quantity/quantity.component.ts","ng://ssoe-client-shared/shared/services/search.service.ts","ng://ssoe-client-shared/shared/components/typeahead-input/typeahead-input.component.ts","ng://ssoe-client-shared/shared/shared.module.ts","ng://ssoe-client-shared/shared/services/command.service.ts","ng://ssoe-client-shared/shared/services/query.service.ts","ng://ssoe-client-shared/shared/services/paginator-i18n.service.ts","ng://ssoe-client-shared/shared/services/unsaved-data-notification.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","Utils","isNullEmptyOrUndefined","isNumber","isFinite","deepClone","source","cloneDeep","trimLastComma","str","replace","trimLastSlash","sum","key","array","reduce","a","newTechnicalNumber","c","Math","random","toString","regexMatch","regex","testString","exc","exec","find","x","ConfigService","http","delayInit","Promise","resolve","reject","setTimeout","getConfiguration","config","_this","get","apiUrl","getConfigEndpoint","toPromise","then","response","configurations","catch","err","getConfig","Injectable","args","providedIn","HttpClient","ApiService","configService","formatErrors","console","throwError","zone","path","params","HttpParams","getApiUrl","pipe","catchError","put","body","JSON","stringify","post","id","withCredentials","withCr","undefined","postFile","reportProgress","observe","delete","uploadFile","file","typeName","parentObjectId","formData","FormData","append","name","TranslationService","apiService","translations","cultureChange","Subject","setCultureCode","code","_cultureCode","cultureCode","Date","now","getCultureCode","getTranslations","tap","keyarray","index","element","setTranslations","trans","localStorage","setItem","getForKey","res","log","getForKeyByObject","newKey","split","loadStorage","local","getItem","obj","parse","ConfirmDialogComponent","data","dialogRef","translateService","defineProperty","text","translatedText","confirmLabel","cancelLabel","ngOnInit","ok","action","parameters","close","Component","selector","template","Inject","MAT_DIALOG_DATA","MatDialogRef","ConfirmActionDirective","dialog","onClick","event","confirmDialogData","title","open","panelClass","Directive","MatDialog","Input","HostListener","ErrorDialogComponent","translationService","ErrorMessage","isCleanup","ErrorMessagesService","snackBar","propertyValidationErrors","errorMessagesSubject","errorPropertyMessageSubject","removeFormErrorsSubject","showErrorDialog","errs","errors","publishMessages","errorM","ex","becameValid","stillInvalid","stillInvalidProperty","propertyName","publishPropertyMessage","generalErrors","filter","_a","apply","errorMessage","duration","verticalPosition","clearMessages","validationMessage","MatSnackBar","FormValidatorDirective","form","errorService","subscribe","setErrors","control","incorrect","markAsDirty","markAsTouched","NgForm","NumberFormatterDirective","el","regexStr","onKeyPress","RegExp","test","ElementRef","BooleanEvaluateStatusToStringPipe","transform","Pipe","BooleanToYesNoPipe","ClassificationService","classificationCache","classificationValueCache","getClassificationValues","classificationName","classificationModel","volatile","shareReplay","getGroupedClassificationValues","getClassificationValue","valueId","of","httpParams","set","switchMap","ClassificationValueGet","classificationService","ClassificationValuePipe","caption","Constants","currencyCodes","941","978","840","826","quantityCodes","1","2","3","DATE_FMT","DATE_TIME_FMT","CurrencyPipe","decimalPipe","DecimalPipe","amount","v","currencyCode","DateTimeFormatPipe","tslib_1.__extends","_super","DatePipe","EmptyStringToDefaultPipe","LifecycleStatusPipe","statuses","4","8","16","32","64","128","256","512","status","QuantityPipe","unitOfMeasure","TranslatePipe","byObject","DecimalFormatterDirective","elementRef","ngModel","locale","rgx","nativeElement","decimalFormatPipe","decimals","onFocus","viewModel","lastValue","onBlur","nocomma","target","indexOf","providers","NgModel","OptionsScrollDirective","autoComplete","tressholdPercent","scroll","EventEmitter","_onDestroy","opened","removeScrollEventListener","panel","addEventListener","onScroll","bind","takeUntil","closed","removeEventListener","ngOnDestroy","complete","scrollEvent","tress","scrollHeight","scrollTop","clientHeight","MatAutocomplete","Output","MaterialModule","NgModule","declarations","exports","MatToolbarModule","MatButtonModule","MatSidenavModule","MatIconModule","MatListModule","MatFormFieldModule","MatInputModule","MatButtonToggleModule","MatChipsModule","MatBadgeModule","MatSlideToggleModule","MatCardModule","MatMenuModule","MatDividerModule","MatProgressSpinnerModule","MatRadioModule","MatCheckboxModule","MatGridListModule","MatTooltipModule","MatExpansionModule","MatSelectModule","MatDatepickerModule","MatProgressBarModule","MatSliderModule","MatStepperModule","MatDialogModule","MatTabsModule","MatNativeDateModule","FlexLayoutModule","MatSnackBarModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatSortModule","MatAutocompleteModule","MatTreeModule","DragDropModule","ScrollingModule","ActionsRibbonService","changeSubject","change","clear","infoTemplate","actionsTemplate","spacerTemplate","actionsContextTemplate","ActionsRibbonComponent","actionsRibbonService","cd","markForCheck","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","BaseSelectedTabComponent","activatedRoute","route","setUpTab","queryParams","tab","tabSelectedIndex","navigate","queryParamsHandling","navigateToTabWithSubject","selectedIndex","tabSubjects","ActivatedRoute","Router","ClassificationGroupInputComponent","errorMessageService","formObject","classificationValueIdChange","objectClassificationValueChange","isVolatile","vals","options","defaultValue","y","isDefaultValue","groups","classificationValueId","selectedValue","emit","exValue","disabled","ngFormObject","ngControl","FormControl","addControl","hasErrors","patchValue","pname","decorators","type","Optional","ClassificationInputComponent","pName","resetToDefault","CurrencyAmountComponent","showCurrency","currencyAmountChange","currencies","ngControlAmount","ngControlCurrency","getCurrency","defaultCurrency","currencyAmount","ErrorDisplayComponent","showDialog","sources","toLowerCase","subscriptionSubscriber","unsubscribe","GeneralErrorPageComponent","InputValidationMessageComponent","LoadingService","loadingSubject","moduleLoadingSubject","loader","loading","moduleLoading","LoaderComponent","loaderService","loadingStatus","NotificationDialogUnsavedComponent","saveDataText","bodyText","QuantityComponent","quantityChange","units","getUnits","ngControlUnitOfMeasure","SearchService","search","searchParams","typename","searchTerm","skip","top","TypeaheadInputComponent","searchService","typeaheadSkipValue","minNumOfCharToSearch","readonly","isLoading","nextPage","valueChosen","typeaheadValueChange","typeaheadSelectedValueChange","inputChangeSubject","results","merge","debounceTime","distinctUntilChanged","resetFilter","currentValue","searchTermJson","filterFormatFn","autocomplete","keyCode","clearSelectedValue","optionSelected","typeaheadValue","option","displayResultFn","ViewChild","static","MatAutocompleteTrigger","SharedModule","imports","CommonModule","entryComponents","CommandService","locationCache","contract","QueryService","vl","entries","val","getBlobDocument","responseType","PaginatorI18nService","getRangeLabel","page","pageSize","zeroOfLabel","startIndex","max","min","ofLabel","itemsPerPageLabel","nextPageLabel","previousPageLabel","firstPageLabel","lastPageLabel","changes","MatPaginatorIntl","UnsavedDataNotificationService","hasChangedData","startTracking","ngForm","currentForm","markAsPristine","formChangesSubscription","valueChanges","dirty","trackingCheckpoint","stopTracking","doActionWithCheckUnsaved","fallbackAction","modalData","width","afterClosed","result","checkChangesAction","hasChanges","noChanges"],"mappings":";;;;;;;;;;;;;;;AAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAGrB,SAASO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GA6F5E,SAASK,EAAOC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAgBA,KAAM,MAAQI,EAAIE,EAAEG,QAAQC,MAAMF,EAAGG,KAAKP,EAAEQ,OAExE,MAAOC,GAASR,EAAI,CAAEQ,MAAOA,GACjC,QACQ,IACQT,IAAMA,EAAEM,OAAST,EAAIK,EAAU,SAAIL,EAAEM,KAAKD,GAE1D,QAAkB,GAAID,EAAG,MAAMA,EAAEQ,OAE7B,OAAOL,EAGJ,SAASM,IACZ,IAAK,IAAIN,EAAK,GAAIF,EAAI,EAAGA,EAAIS,UAAUC,OAAQV,IAC3CE,EAAKA,EAAGS,OAAOnB,EAAOiB,UAAUT,KACpC,OAAOE,ECzIX,iBAAA,SAAAU,KA0CA,OAzCkBA,EAAAC,uBAAd,SAAqCP,GACjC,OAAiB,OAAVA,GAA4B,KAAVA,QAAiC,IAAVA,GAAmC,SAAVA,GAG/DM,EAAAE,SAAd,SAAuBR,GACnB,MAAwB,iBAAVA,GAAsBS,SAAST,IAGnCM,EAAAI,UAAd,SAAwBC,GACtB,OAAOC,EAAUD,IAGLL,EAAAO,cAAd,SAA4BC,GAE1B,OADAA,EAAMA,EAAIC,QAAQ,QAAS,KAIfT,EAAAU,cAAd,SAA4BF,GAC1B,OAAOA,EAAIC,QAAQ,MAAO,KAGdT,EAAAW,IAAd,SAAkBC,EAAKC,GACnB,OAAOA,EAAMC,QAAM,SAAEC,EAAGhD,GAAM,OAAAgD,GAAKhD,EAAE6C,IAAQ,KAAI,IAGvCZ,EAAAgB,mBAAd,WAEE,MAAO,WAAWP,QAAQ,SAAO,SAAWQ,OAGpC/B,EAAoB,GAAhBgC,KAAKC,SAAgB,EAC/B,OAD4C,MAANF,EAAY/B,EAAS,EAAJA,EAAU,GACxDkC,SAAS,QAIRpB,EAAAqB,WAAd,SAAyBC,EAAeC,OAChCC,EAAMF,EAAMG,KAAKF,GACvB,OAAY,OAARC,GAAoD,OAApCA,EAAIE,MAAI,SAACC,GAAK,OAAAA,IAAMJ,MAI9CvB,KC5CA4B,EAAA,WAWE,SAAAA,EAAoBC,GAAArD,KAAAqD,KAAAA,SAEpBD,EAAAlD,UAAAoD,UAAA,WACE,OAAO,IAAIC,SAAO,SAAEC,EAASC,GAC3BC,YAAU,WACRF,MACC,QAGPJ,EAAAlD,UAAAyD,iBAAA,SAAiBC,GAAjB,IAAAC,EAAA7D,KACE,OAAOA,KAAKqD,KAAKS,IAAOF,EAAOG,OAAM,IAAIH,EAAOI,mBAAqBC,YAClEC,MAAI,SAAEC,GAGL,OAFAN,EAAKO,eAAiBD,EAEfN,EAAKO,kBAYZC,OAAK,SAACC,QAULlB,EAAAlD,UAAAqE,UAAP,WACE,OAAOvE,KAAKoE,oCA3CfI,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDALLC,EAAAA,+IADT,GCAA,IAAAC,EAAA,WAWE,SAAAA,EAAoBvB,EAA0BwB,GAA1B7E,KAAAqD,KAAAA,EAA0BrD,KAAA6E,cAAAA,SAEtCD,EAAA1E,UAAA4E,aAAR,SAAqB3D,GAEnB,OADA4D,QAAQ5D,MAAMA,GACP6D,EAAAA,WAAW7D,EAAMA,QAE1ByD,EAAA1E,UAAA4D,IAAA,SAAImB,EAAcC,EAAcC,GAC9B,YAD8B,IAAAA,IAAAA,EAAA,IAAyBC,EAAAA,YAChDpF,KAAKqD,KAAKS,IAAO9D,KAAKqF,YAAW,IAAIJ,EAAI,IAAIC,EAChD,CAAEC,OAAMA,IACTG,KAAKC,EAAAA,WAAWvF,KAAK8E,gBAG1BF,EAAA1E,UAAAsF,IAAA,SAAIP,EAAcC,EAAcO,GAC9B,YAD8B,IAAAA,IAAAA,EAAA,IACvBzF,KAAKqD,KAAKmC,IACf,GAAGxF,KAAKqF,YAAcJ,EAAI,IAAIC,EAC9BQ,KAAKC,UAAUF,IACfH,KAAKC,EAAAA,WAAWvF,KAAK8E,gBAGzBF,EAAA1E,UAAA0F,KAAA,SAAKX,EAAcC,EAAcW,EAAaJ,EAAmBK,OAK3DC,EAIJ,YAT4C,IAAAN,IAAAA,EAAA,SAAmB,IAAAK,IAAAA,GAAA,GAE7DD,OADSG,IAAPH,EACG,IAAMA,EACH,IAGc,IAApBC,IACFC,EAAS,CAAED,iBAAiB,IAEvB9F,KAAKqD,KAAKuC,KACZ5F,KAAKqF,YAAW,IAAIJ,EAAI,IAAIC,EAAOW,EACtCH,KAAKC,UAAUF,GAAOM,GACtBT,KAAKC,EAAAA,WAAWvF,KAAK8E,gBAGzBF,EAAA1E,UAAA+F,SAAA,SAAShB,EAAcC,EAAcW,EAAaJ,EAAmBK,EAAyBI,OAKxFH,EAOJ,YAZgD,IAAAN,IAAAA,EAAA,SAAmB,IAAAK,IAAAA,GAAA,GAEjED,OADSG,IAAPH,EACG,IAAMA,EACH,IAGc,IAApBC,IACFC,EAAS,CAAED,iBAAiB,IAKvB9F,KAAKqD,KAAKuC,KACZ5F,KAAKqF,YAAW,IAAIJ,EAAI,IAAIC,EAAOW,EACtCJ,EAAM,CAAEK,gBAAkBC,EAAQG,eAAgBA,EAAgBC,QAAS,WAC3Eb,KAAKC,EAAAA,WAAWvF,KAAK8E,gBAGzBF,EAAA1E,UAAAkG,OAAA,SAAOnB,EAAcC,GACnB,OAAOlF,KAAKqD,KAAK+C,OACZpG,KAAKqF,YAAW,IAAIJ,EAAI,IAAIC,GAC/BI,KAAKC,EAAAA,WAAWvF,KAAK8E,gBAGzBF,EAAA1E,UAAAmG,WAAA,SAAWpB,EAAcC,EAAcoB,EAAYC,EAAmBC,OAC9DC,EAAqB,IAAIC,SAG/B,OAFAD,EAASE,OAAO,OAAQL,EAAMA,EAAKM,MAE5B5G,KAAKqD,KAAKuC,KAAQ5F,KAAK6E,cAAcN,YAAYR,OAAM,IAAIkB,EAAI,IAAIC,EAAI,IAAIqB,EAAQ,IAAIC,EAAkBC,IAG3G7B,EAAA1E,UAAAmF,UAAP,WACE,OAAOrF,KAAK6E,cAAcN,YAAYR,4BAvEzCS,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDANLC,EAAAA,kBAGAvB,oJAJT,GCYA,IAAAyD,EAAA,WAYE,SAAAA,EAAoBC,GAAA9G,KAAA8G,WAAAA,EAClB9G,KAAK+G,aAAe,GACpB/G,KAAKgH,cAAgB,IAAIC,EAAAA,eAG3BJ,EAAA3G,UAAAgH,eAAA,SAAeC,GACbnH,KAAKoH,aAAeD,EACpBnH,KAAKqH,YAAcC,KAAKC,OAE1BV,EAAA3G,UAAAsH,eAAA,WACE,OAAOxH,KAAKoH,cAGdP,EAAA3G,UAAAuH,gBAAA,SAAgBJ,GAAhB,IAAAxD,EAAA7D,KACMmF,EAAS,IAAIC,EAAAA,WAGjB,YAFoBY,IAAhBqB,IACFlC,EAASA,EAAOwB,OAAO,cAAeU,IACjCrH,KAAK8G,WAAWhD,IAAI,SAAU,kBAAmBqB,GAAQG,KAAKoC,EAAAA,KAAG,SAACvE,GAEvE,QADMwE,EAAW,GACRC,EAAQ,EAAGA,EAAQzE,EAAEjC,MAAMI,OAAQsG,IAAS,KAC7CC,EAAU1E,EAAEjC,MAAM0G,GACxBD,EAAS1G,KAAK,CAAEmB,IAAKyF,EAAQzF,IAAKlB,MAAO2G,EAAQ3G,QAEnD2C,EAAKiE,gBAAgBH,GACrB9D,EAAKmD,cAAcjG,OACnB8C,EAAKwD,YAAcC,KAAKC,WAI3BV,EAAA3G,UAAA4H,gBAAA,SAAgBC,GACf/H,KAAK+G,aAAe,GACpB,IAAK,IAAIa,EAAQ,EAAGA,EAAQG,EAAMzG,OAAQsG,IAAS,KAC3CC,EAAUE,EAAMH,GACtB5H,KAAK+G,aAAac,EAAQzF,KAAOyF,EAAQ3G,MAE3C8G,aAAaC,QAAQ,eAAgBvC,KAAKC,UAAU3F,KAAK+G,gBAG3DF,EAAA3G,UAAAgI,UAAA,SAAU9F,OACJ+F,EAAM/F,EACV,GAAIZ,EAAMC,uBAAuBW,IAAgB,MAARA,EACvC,OAAOA,MACH1B,EAAIV,KAAK+G,aAAa3E,GAQ5B,OAPKZ,EAAMC,uBAAuBf,IAGhCqE,QAAQqD,IAAIhG,GACZpC,KAAK+G,aAAa3E,GAAO,IAAMA,EAAM,IACrC+F,EAAM,IAAM/F,EAAM,KAJlB+F,EAAMzH,EAMDyH,GAGTtB,EAAA3G,UAAAmI,kBAAA,SAAkBjG,OACZ+F,EAAM/F,EACV,GAAIZ,EAAMC,uBAAuBW,IAAgB,MAARA,EACvC,OAAOA,MACH1B,EAAIV,KAAK+G,aAAa3E,GAC5B,GAAKZ,EAAMC,uBAAuBf,GAE7B,KACK4H,EAASlG,EAAImG,MAAM,KAAK,GAE9BJ,EADiBnI,KAAK+G,aAAauB,QAHrCH,EAAMzH,EAMR,OAAOyH,GAGTtB,EAAA3G,UAAAsI,YAAA,eACQC,EAAQT,aAAaU,QAAQ,gBACnC,GAAID,MAAAA,EAAuC,KACnCE,EAAMjD,KAAKkD,MAAMH,GACvBzI,KAAK+G,aAAe4B,wBApFzBnE,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAXLE,2HAUT,GCGA,IAAAiE,EAAA,WAwBE,SAAAA,EACkCC,EACzBC,EACAC,GAFyBhJ,KAAA8I,KAAAA,EACzB9I,KAAA+I,UAAAA,EACA/I,KAAAgJ,iBAAAA,EAcX,OAjCExJ,OAAAyJ,eAAIJ,EAAA3I,UAAA,WAAQ,KAAZ,WACE,OAAQsB,EAAMC,uBAAuBzB,KAAK8I,KAAKI,uCAGjD1J,OAAAyJ,eAAIJ,EAAA3I,UAAA,qBAAkB,KAAtB,WACE,OAAQsB,EAAMC,uBAAuBzB,KAAK8I,KAAKK,iDAGjD3J,OAAAyJ,eAAIJ,EAAA3I,UAAA,eAAY,KAAhB,WACE,OAAQsB,EAAMC,uBAAuBzB,KAAK8I,KAAKM,+CAGjD5J,OAAAyJ,eAAIJ,EAAA3I,UAAA,kBAAe,KAAnB,WACE,OAAQsB,EAAMC,uBAAuBzB,KAAK8I,KAAKO,8CAQjDR,EAAA3I,UAAAoJ,SAAA,aAGAT,EAAA3I,UAAAqJ,GAAA,gBAC2BvD,IAArBhG,KAAK8I,KAAKU,QACZxJ,KAAK8I,KAAKU,OAAOxJ,KAAK8I,KAAKW,YAC7BzJ,KAAK+I,UAAUW,OAAM,IAGvBb,EAAA3I,UAAAwJ,MAAA,WACE1J,KAAK+I,UAAUW,6BAvClBC,EAAAA,UAASlF,KAAA,CAAC,CACTmF,SAAU,qBACVC,SAAA,+iCAuBGC,EAAAA,OAAMrF,KAAA,CAACsF,EAAAA,0BAtCcC,EAAAA,oBADjBnD,KAuDTgC,EAzCA,GCfA,IAAAoB,EAAA,WAaE,SAAAA,EACUC,GAAAlK,KAAAkK,OAAAA,EAmBZ,OAjB2BD,EAAA/J,UAAAiK,QAAvB,SAA+BC,OACvBC,EAAwC,CAC5CC,MAAO,yBACPpB,KAAM,6CACNC,oBAAgBnD,EAChBoD,aAAc,UACdC,YAAa,SACbG,OAAQxJ,KAAKwJ,OACbC,WAAYzJ,KAAKyJ,YAEnBzJ,KAAKkK,OAAOK,KAAK1B,EAAwB,CAAE2B,WAAY,cAAe1B,KAAMuB,KAGhFJ,EAAA/J,UAAAoJ,SAAA,iCAzBDmB,EAAAA,UAAShG,KAAA,CAAC,CAETmF,SAAU,+DAJHc,EAAAA,6CAQNC,EAAAA,MAAKlG,KAAA,CAAC,qCACNkG,EAAAA,uBAKEC,EAAAA,aAAYnG,KAAA,CAAC,YAiBlBwF,EAjCA,GCQA,IAAAY,EAAA,WAOE,SAAAA,EAA4C/B,EACzBgC,GADyB9K,KAAA8I,KAAAA,EACzB9I,KAAA8K,mBAAAA,EAKrB,OAHED,EAAA3K,UAAAoJ,SAAA,iCAVDK,EAAAA,UAASlF,KAAA,CAAC,CACTmF,SAAU,mBACVC,SAAA,mZAKaC,EAAAA,OAAMrF,KAAA,CAACsF,EAAAA,0BAbblD,KAmBTgE,EAbA,GCRA,IAAAE,EAAA,WAGE/K,KAAAgL,WAAY,oBCgBZ,SAAAC,EACUH,EACAZ,EACAgB,GAFAlL,KAAA8K,mBAAAA,EACA9K,KAAAkK,OAAAA,EACAlK,KAAAkL,SAAAA,EALFlL,KAAAmL,yBAAoE,GAO1EnL,KAAKoL,qBAAuB,IAAInE,EAAAA,QAChCjH,KAAKqL,4BAA8B,IAAIpE,EAAAA,QACvCjH,KAAKsL,wBAA0B,IAAIrE,EAAAA,eAGrCgE,EAAA/K,UAAAqL,gBAAA,SAAgBC,GACdxL,KAAKkK,OAAOK,KAAKM,EAAsB,CACrC/B,KAAM,CAAC2C,OAAQD,GAAOhB,WAAY,kBAItCS,EAAA/K,UAAAwL,gBAAA,SAAgBD,EAA6B5J,SAIrC8J,EAAS,IAAIZ,EACnBY,EAAO9J,OAASA,EAChB8J,EAAOF,OAAS,OAEVG,EAAK5L,KAAKmL,yBAAyBtJ,GACzC,QAAWmE,IAAP4F,EAAkB,CAGpB,QAFMC,EAAc,GACdC,EAAe,cACZlE,OACDC,EAAU+D,EAAGhE,GACbmE,EAAuBN,EAAOvI,MAAI,SAACC,GAAK,OAAAA,EAAE6I,eAAiBnE,EAAQmE,qBAC5ChG,IAAzB+F,GACFA,EAAqBf,WAAY,EACjCc,EAAa7K,KAAK8K,KAElBlE,EAAQmD,WAAY,EACpBa,EAAY5K,KAAK4G,KARZD,EAAQ,EAAGA,EAAQgE,EAAGtK,OAAQsG,MAA9BA,kBAYAA,OACDC,EAAU4D,EAAO7D,QAEN5B,IADA4F,EAAG1I,MAAI,SAACC,GAAK,OAAAA,EAAE6I,eAAiBnE,EAAQmE,kBAEvDnE,EAAQmD,WAAY,EACpBc,EAAa7K,KAAK4G,KALtB,IAASD,EAAQ,EAAGA,EAAQ6D,EAAOnK,OAAQsG,MAAlCA,GAST5H,KAAKmL,yBAAyBtJ,GAAUiK,EACxC,IAASlE,EAAQ,EAAGA,EAAQiE,EAAYvK,OAAQsG,IAAS,KACjDC,EAAUgE,EAAYjE,GAC5B5H,KAAKiM,uBAAuBpE,QAGzB,CACL,IAASD,EAAQ,EAAGA,EAAQ6D,EAAOnK,OAAQsG,IAAS,EAC5CC,EAAU4D,EAAO7D,IACfoD,WAAY,EAEtBhL,KAAKmL,yBAAyBtJ,GAAU4J,EAG1C,IAAS7D,EAAQ,EAAGA,EAAQ5H,KAAKmL,yBAAyBtJ,GAAQP,OAAQsG,IAAS,CAC3EC,EAAU7H,KAAKmL,yBAAyBtJ,GAAQ+F,GACtD5H,KAAKiM,uBAAuBpE,OAGxBqE,EAAgBT,EAAOU,QAAM,SAAChJ,GAAK,MAAmB,UAAnBA,EAAE6I,gBAC3C,IAASpE,EAAQ,EAAGA,EAAQsE,EAAc5K,OAAQsG,IAAS,CACnDC,EAAUqE,EAActE,IAC9BwE,EAAAT,EAAOF,QAAOxK,KAAIoL,MAAAD,EAAAhL,EAAIyG,EAAQyE,aAAa/D,MAAM,SAI/CvI,KAAKmL,yBAAyBtJ,GAAQP,OAAS,GAA8B,IAAzB4K,EAAc5K,QAA2B,UAAXO,GACpF7B,KAAKkL,SAASX,KAAKvK,KAAK8K,mBAAmB5C,UAAU,sBAAuB,KAAM,CAChFqE,SAAU,IACVC,iBAAkB,MAClBhC,WAAY,WAGhBxK,KAAKoL,qBAAqBrK,KAAK4K,IAGjCV,EAAA/K,UAAAuM,cAAA,SAAc5K,OACN8J,EAAS,IAAIZ,EACnBY,EAAO9J,OAASA,EAChB8J,EAAOX,WAAY,EACnBhL,KAAKoL,qBAAqBrK,KAAK4K,IAGjCV,EAAA/K,UAAA+L,uBAAA,SAAuBS,GACrB1M,KAAKqL,4BAA4BtK,KAAK2L,wBAxGzClI,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDANLmC,SADa6D,EAAAA,iBAAbiC,EAAAA,0LCFT,IAAAC,EAAA,WAWE,SAAAA,EACSC,EACCC,GADD9M,KAAA6M,KAAAA,EACC7M,KAAA8M,aAAAA,EAgBZ,OAdEF,EAAA1M,UAAAoJ,SAAA,WAAA,IAAAzF,EAAA7D,KACEA,KAAK8M,aAAazB,4BAA4B0B,WAAS,SAAC5J,GACtD,GAAK3B,EAAMC,uBAAuBoC,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,iBAAkC,IAAhB7I,EAAE6H,UAK/DxJ,EAAMC,uBAAuBoC,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,iBAAkC,IAAhB7I,EAAE6H,WAChFnH,EAAKgJ,KAAKA,KAAKG,UAAU,UANqE,KACxFC,EAAUpJ,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,cACrCiB,EAAQD,UAAU,CAACE,WAAW,IAC9BD,EAAQE,cACRF,EAAQG,oBAIZpN,KAAK8M,aAAaxB,wBAAwByB,WAAS,SAAC5J,GAClDU,EAAKgJ,KAAKA,KAAKG,UAAU,8BArB9BvC,EAAAA,UAAShG,KAAA,CAAC,CAETmF,SAAU,mEANHyD,EAAAA,cACApC,KA2BT2B,EA7BA,GCAA,IAAAU,EAAA,WAWE,SAAAA,EAAoBC,GAAAvN,KAAAuN,GAAAA,EAHpBvN,KAAAwN,SAAW,WASb,OAHwCF,EAAApN,UAAAuN,WAAtC,SAAiDrD,GAC/C,OAAO,IAAIsD,OAAO1N,KAAKwN,UAAUG,KAAKvD,EAAMhI,0BAb/CqI,EAAAA,UAAShG,KAAA,CAAC,CAETmF,SAAU,iEAJegE,EAAAA,sDASxBjD,EAAAA,0BAKAC,EAAAA,aAAYnG,KAAA,CAAC,WAAY,CAAC,cAG7B6I,EAjBA,GCAA,IAAAO,EAAA,WASE,SAAAA,EAAoB/C,GAAA9K,KAAA8K,mBAAAA,EAUtB,OAPE+C,EAAA3N,UAAA4N,UAAA,SAAU5M,EAAgBuD,GACxB,GAAIjD,EAAMC,uBAAuBP,GAC/B,MAAO,QAEHkB,EAAMlB,EAAQ,uBAAyB,uBAC7C,OAAOlB,KAAK8K,mBAAmB5C,UAAU9F,wBAb5C2L,EAAAA,KAAItJ,KAAA,CAAC,CACJmC,KAAM,6EAJCC,KAkBTgH,EAnBA,GCAA,IAAAG,EAAA,WAQI,SAAAA,EAAoBlD,GAAA9K,KAAA8K,mBAAAA,EAOxB,OAJIkD,EAAA9N,UAAA4N,UAAA,SAAU5M,EAAgBuD,OAChBrC,EAAMlB,EAAQ,MAAQ,KAC5B,OAAOlB,KAAK8K,mBAAmB5C,UAAU9F,wBAVhD2L,EAAAA,KAAItJ,KAAA,CAAC,CACJmC,KAAM,8DAHCC,KAcTmH,EAfA,GCAA,IAAAC,EAAA,WAeE,SAAAA,EAAoBnH,GAAA9G,KAAA8G,WAAAA,EAClB9G,KAAKkO,oBAAsB,GAC3BlO,KAAKmO,yBAA2B,UAGlCF,EAAA/N,UAAAkO,wBAAA,SAAwBC,EAA4BC,EAA8BC,GAChF,QADgF,IAAAA,IAAAA,GAAA,IAC5E/M,EAAMC,uBAAuB4M,GAAjC,KAQQjM,EAAMiM,GAJVC,EADE9M,EAAMC,uBAAuB6M,GACT,GAEA,UAAYA,GAIpC,OAAiB,IAAbC,EACKvO,KAAK8G,WAAWhD,IAAI,SAAU,qBAAuBuK,EAAqBC,SAE7CtI,IAAlChG,KAAKkO,oBAAoB9L,KAC3BpC,KAAKkO,oBAAoB9L,GACvBpC,KAAK8G,WAAWhD,IAAI,SAAU,qBAAuBuK,EAAqBC,GAAqBhJ,KAAKkJ,EAAAA,YAAY,KAE7GxO,KAAKkO,oBAAoB9L,MAIpC6L,EAAA/N,UAAAuO,+BAAA,SAA+BJ,EAA4BC,EAA8BC,GACvF,QADuF,IAAAA,IAAAA,GAAA,IACnF/M,EAAMC,uBAAuB4M,GAAjC,KAQQjM,EAAMiM,GAJVC,EADE9M,EAAMC,uBAAuB6M,GACT,GAEA,UAAYA,GAIpC,OAAiB,IAAbC,EACKvO,KAAK8G,WAAWhD,IAAI,SAAU,4BAA8BuK,EAAqBC,SAEpDtI,IAAlChG,KAAKkO,oBAAoB9L,KAC3BpC,KAAKkO,oBAAoB9L,GACvBpC,KAAK8G,WAAWhD,IAAI,SAAU,4BAA8BuK,EAAqBC,GAAqBhJ,KAAKkJ,EAAAA,YAAY,KAEpHxO,KAAKkO,oBAAoB9L,MAGpC6L,EAAA/N,UAAAwO,uBAAA,SAAuBC,GACrB,GAAInN,EAAMC,uBAAuBkN,GAC/B,OAAOC,EAAAA,GAAG,SACNxM,EAAMuM,EACZ,QAA2C3I,IAAvChG,KAAKmO,yBAAyB/L,GAAoB,KAC9CyM,GAAa,IAAIzJ,EAAAA,YAAa0J,IAAI,UAAW,GAAKH,GACxD3O,KAAKmO,yBAAyB/L,GAC5BpC,KAAK8G,WAAWhD,IAAI,SAAU,yBAA0B+K,GAAYvJ,KAAKkJ,EAAAA,YAAY,GAAIO,EAAAA,WAAS,SAAC5L,GACnG,OAAIA,MAAAA,QAA6C6C,IAAZ7C,EAAEjC,MAA4B,GAC5D0N,EAAAA,GAAGzL,OAMd,OAAOnD,KAAKmO,yBAAyB/L,wBAvExCoC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAPLE,2HADT,GCAA,IAAAoK,EAAA,WAQE,SAAAA,EAAoBC,GAAAjP,KAAAiP,sBAAAA,EAQtB,OANED,EAAA9O,UAAA4N,UAAA,SAAU5M,EAAYuD,GACpB,OAAIvD,MAAAA,GAA2D,iBAAlB,EAAmC,GAEzElB,KAAKiP,sBAAsBP,uBAAuBxN,wBAV5D6M,EAAAA,KAAItJ,KAAA,CAAC,CACJmC,KAAM,sEAHCqH,KAeTe,EAhBA,GCAA,IAAAE,EAAA,WAIA,SAAAA,KAWA,OANEA,EAAAhP,UAAA4N,UAAA,SAAU5M,EAAYuD,GACpB,OAAIvD,MAAAA,QAAyD8E,IAAhB9E,EAAMA,OAAuC,OAAhBA,EAAMA,MAAuB,IAEhGA,EAAMA,MAAMiO,6BARtBpB,EAAAA,KAAItJ,KAAA,CAAC,CACJmC,KAAM,0BAURsI,EAfA,GCCAE,EAAA,WAAA,SAAAA,KAcA,OAbSA,EAAAC,cAAgB,CACrBC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,OACAL,EAAAM,cAAgB,CACrBC,EAAG,MACHC,EAAG,OACHC,EAAG,MAGWT,EAAAU,SAAW,WACXV,EAAAW,cAAmBX,EAAUU,SAAQ,QACvDV,EAdA,GCDA,IAAAY,EAAA,WAMA,SAAAA,IAIUhQ,KAAAiQ,YAAc,IAAIC,EAAAA,YAAY,cAWxC,OATEF,EAAA9P,UAAA4N,UAAA,SAAU5M,EAAuBuD,GAC/B,GAAIjD,EAAMC,uBAAuBP,IAAUM,EAAMC,uBAAuBP,EAAMiP,QAAS,MAAO,OAC1FC,EAAI,GAAKpQ,KAAKiQ,YAAYnC,UAAU5M,EAAMiP,OAAQ,SAItD,OAHK3O,EAAMC,uBAAuBP,EAAMmP,gBACtCD,GAAK,UAAuDpK,IAAhDoJ,EAAUC,cAAcnO,EAAMmP,cAA8BjB,EAAUC,cAAcnO,EAAMmP,cAAgB,KAEjHD,uBAZVrC,EAAAA,KAAItJ,KAAA,CAAC,CACJmC,KAAM,sBAcRoJ,EArBA,qBCIA,SAAAM,mDASA,OANwCC,EAAAA,EAAAA,GAEtCD,EAAApQ,UAAA4N,UAAA,SAAU5M,EAAYuD,GACpB,OAAO+L,EAAAtQ,UAAM4N,UAASjN,KAAAb,KAACkB,EAAOkO,EAAUW,oCAN3ChC,EAAAA,KAAItJ,KAAA,CAAC,CACJmC,KAAM,qBAQR0J,GANwCG,EAAAA,UCPxCC,EAAA,WAGA,SAAAA,KAWA,OANEA,EAAAxQ,UAAA4N,UAAA,SAAU5M,EAAYuD,GAGpB,OAAIjD,EAAMC,uBAAuBP,GAAe,IACzCA,uBATV6M,EAAAA,KAAItJ,KAAA,CAAC,CACJmC,KAAM,2BAUR8J,EAdA,GCAAC,EAAA,WAoBE,SAAAA,IAbA3Q,KAAA4Q,SAAW,CACTjB,EAAG,QACHC,EAAG,SACHiB,EAAG,WACHC,EAAG,YACHC,GAAI,aACJC,GAAI,UACJC,GAAI,YACJC,IAAK,UACLC,IAAK,cACLC,IAAK,kBAYT,OAPET,EAAAzQ,UAAA4N,UAAA,SAAU5M,EAAYuD,OACd4M,EAASrR,KAAK4Q,SAAS1P,GAC7B,YAAe8E,IAAXqL,EACKnQ,EACFmQ,uBAvBVtD,EAAAA,KAAItJ,KAAA,CAAC,CACJmC,KAAM,4DAyBR+J,EA7BA,GCAA,IAAAW,EAAA,WAIA,SAAAA,KAYA,OAPEA,EAAApR,UAAA4N,UAAA,SAAU5M,EAAiBuD,OACrB2L,EAAI,GAAKlP,EAAMiP,OAGnB,YAF4BnK,IAAxB9E,EAAMqQ,gBACRnB,GAAK,IAAMlP,EAAMqQ,eACZnB,uBATVrC,EAAAA,KAAItJ,KAAA,CAAC,CACJmC,KAAM,eAWR0K,EAhBA,GCAAE,EAAA,WASE,SAAAA,EAAoB1G,GAAA9K,KAAA8K,mBAAAA,EActB,OAXE0G,EAAAtR,UAAA4N,UAAA,SAAU5M,EAAYuD,EAAYgN,GAChC,GAAIhN,MAAAA,EAGJ,OAAKjD,EAAMC,uBAAuBgQ,GAI3BzR,KAAK8K,mBAAmB5C,UAAUhH,GAH/BlB,KAAK8K,mBAAmBzC,kBAAkBnH,wBAbvD6M,EAAAA,KAAItJ,KAAA,CAAC,CACJmC,KAAM,yDAJCC,KAsBT2K,EAvBA,GCAA,IAAAE,EAAA,WAqBE,SAAAA,EACkBC,EACAC,GADA5R,KAAA2R,WAAAA,EACA3R,KAAA4R,QAAAA,EARlB5R,KAAA6R,OAAS,aAGT7R,KAAA8R,IAAM,4BAOJ9R,KAAKuN,GAAKvN,KAAK2R,WAAWI,cAC1B/R,KAAKgS,kBAAoB,IAAI9B,EAAAA,YAAY,cAyC7C,OAtCEwB,EAAAxR,UAAAoJ,SAAA,WACuB,MAAjBtJ,KAAKiS,WACPjS,KAAKiS,SAAW,SAElBjS,KAAKuN,GAAGrM,MAAQlB,KAAKgS,kBAAkBlE,UAAU9N,KAAKuN,GAAGrM,MAAOlB,KAAKiS,SAAUjS,KAAK6R,QAC9D,MAAlB7R,KAAKuN,GAAGrM,QACVlB,KAAKuN,GAAGrM,MAAQ,KAIpBwQ,EAAAxR,UAAAgS,QADA,SACQhR,GACJlB,KAAKuN,GAAGrM,MAAQlB,KAAK4R,QAAQO,UAC7BnS,KAAKoS,UAAYpS,KAAK4R,QAAQO,WAIlCT,EAAAxR,UAAAmS,OADA,SACOnR,GACL,IACElB,KAAK4R,QAAQO,UAAYnS,KAAKuN,GAAGrM,UAC3BoR,EAAUtS,KAAKuN,GAAGrM,MAAMe,QAAQ,IAAK,KAC3CjC,KAAKuN,GAAGrM,MAAQlB,KAAKgS,kBAAkBlE,UAAUwE,EAAStS,KAAKiS,SAAUjS,KAAK6R,QAC9E,MAAOjG,IACFpK,EAAMC,uBAAuBzB,KAAKoS,YAAc5Q,EAAMqB,WAAW7C,KAAK8R,IAAK9R,KAAKoS,aACnFpS,KAAKuN,GAAGrM,MAAQlB,KAAKgS,kBAAkBlE,UAAU9N,KAAKoS,UAAWpS,KAAKiS,SAAUjS,KAAK6R,QACrF7R,KAAK4R,QAAQO,UAAYnS,KAAKoS,aAKpCV,EAAAxR,UAAAuN,WADA,SACWrD,GAEP,OADApK,KAAKoS,UAAY5Q,EAAMI,UAAUwI,EAAMmI,OAAOrR,OAC1B,UAAfkJ,EAAMjD,OAAqD,IAAjCnH,KAAKoS,UAAUI,QAAQ,MAClC,WAAfpI,EAAMjD,MAAoC,cAAfiD,EAAMjD,OAAyBuG,OAAO,MAAMC,KAAKvD,EAAMhI,0BAvD5FqI,EAAAA,UAAShG,KAAA,CAAC,CAETmF,SAAU,8BACV6I,UAAW,CAACC,EAAAA,sDATqB9E,EAAAA,kBAC1B8E,EAAAA,6CAaN/H,EAAAA,MAAKlG,KAAA,CAAC,6BAwBNmG,EAAAA,aAAYnG,KAAA,CAAC,QAAS,CAAC,wCAMvBmG,EAAAA,aAAYnG,KAAA,CAAC,OAAQ,CAAC,4CAatBmG,EAAAA,aAAYnG,KAAA,CAAC,UAAW,CAAC,cAU5BiN,EAnEA,GCWA,IAAAiB,EAAA,WAaE,SAAAA,EAAmBC,GAAnB,IAAA/O,EAAA7D,KAAmBA,KAAA4S,aAAAA,EANV5S,KAAA6S,iBAAmB,GAEH7S,KAAA8S,OAAS,IAAIC,EAAAA,aAGtC/S,KAAAgT,WAAa,IAAI/L,EAAAA,QAEfjH,KAAK4S,aAAaK,OAAO3N,KACvBoC,EAAAA,KAAG,WACDhE,YAAU,WACRG,EAAKqP,4BACLrP,EAAK+O,aAAaO,MAAMpB,cAAcqB,iBAAiB,SAAUvP,EAAKwP,SAASC,KAAKzP,MACnF,MAEL0P,EAAAA,UAAUvT,KAAKgT,aACfjG,YAEF/M,KAAK4S,aAAaY,OAAOlO,KACvBoC,EAAAA,KAAG,WAAO,OAAA7D,EAAKqP,+BACfK,EAAAA,UAAUvT,KAAKgT,aAAajG,YAwBlC,OAtBU4F,EAAAzS,UAAAgT,0BAAR,WACO1R,EAAMC,uBAAuBzB,KAAK4S,aAAaO,QAClDnT,KAAK4S,aAAaO,MAAMpB,cACrB0B,oBAAoB,SAAUzT,KAAKqT,WAE1CV,EAAAzS,UAAAwT,YAAA,WACE1T,KAAKgT,WAAWjS,OAChBf,KAAKgT,WAAWW,WAChB3T,KAAKkT,6BAGPP,EAAAzS,UAAAmT,SAAA,SAASjJ,GACP,QAA8BpE,IAA1BhG,KAAK6S,iBACP7S,KAAK8S,OAAO/R,KAAK,CAAE6R,aAAc5S,KAAK4S,aAAcgB,YAAaxJ,QAC9D,KACGyJ,EAAgC,IAAxB7T,KAAK6S,iBAAyB7S,KAAK4S,aAAaO,MAAMpB,cAAc+B,aAAe,IACjF9T,KAAK4S,aAAaO,MAAMpB,cAAcgC,UAAY/T,KAAK4S,aAAaO,MAAMpB,cAAciC,aAE1FH,GACZ7T,KAAK8S,OAAO/R,KAAK,CAAE6R,aAAc5S,KAAK4S,aAAcgB,YAAaxJ,0BA/CxEK,EAAAA,UAAShG,KAAA,CAAC,CAETmF,SAAU,+EAZHqK,EAAAA,6DAiBNtJ,EAAAA,sBAEAuJ,EAAAA,OAAMzP,KAAA,CAAC,oBAyCVkO,EAlDA,GCXA,IAAAwB,EAAA,WAiBA,SAAAA,KA6C8B,2BA7C7BC,EAAAA,SAAQ3P,KAAA,CAAC,CACR4P,aAAc,GACdC,QAAS,CACLC,EAAAA,iBACAC,EAAAA,gBACAC,EAAAA,iBACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,mBACAC,EAAAA,eACAC,EAAAA,sBACAC,EAAAA,eACAC,EAAAA,eACAC,EAAAA,qBACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,iBACAC,EAAAA,yBACAC,EAAAA,eACAC,EAAAA,kBACAC,EAAAA,kBACAC,EAAAA,iBACAC,EAAAA,mBACAC,EAAAA,gBACAC,EAAAA,oBACAC,EAAAA,qBACAC,EAAAA,gBACAC,EAAAA,iBACAC,EAAAA,gBACAC,EAAAA,cACAC,EAAAA,oBACAC,EAAAA,iBACAC,EAAAA,kBACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,eACAC,EAAAA,mBACAC,EAAAA,cACA1B,EAAAA,eACA2B,EAAAA,sBACAC,EAAAA,cACAC,EAAAA,eACAC,EAAAA,qBAGwB1C,EA9D9B,GCAA2C,EAAA,WAcE,SAAAA,IACE9W,KAAK+W,cAAgB,IAAI9P,EAAAA,eAG3B6P,EAAA5W,UAAA8W,OAAA,WACEhX,KAAK+W,cAAchW,QAGrB+V,EAAA5W,UAAA+W,MAAA,WACEjX,KAAKkX,kBAAelR,EACpBhG,KAAKmX,qBAAkBnR,EACvBhG,KAAKoX,oBAAiBpR,EACtBhG,KAAKqX,4BAAyBrR,EAC9BhG,KAAKgX,8BAxBRxS,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAJd,GCAA,IAAA4S,EAAA,WAWE,SAAAA,EACSC,EACCC,GADDxX,KAAAuX,qBAAAA,EACCvX,KAAAwX,GAAAA,EAQZ,OANEF,EAAApX,UAAAoJ,SAAA,WAAA,IAAAzF,EAAA7D,KACEA,KAAKuX,qBAAqBR,cAAchK,WAAS,SAAC5J,GAChDU,EAAK2T,GAAGC,uCAdb9N,EAAAA,UAASlF,KAAA,CAAC,CACTmF,SAAU,qBACVC,SAAA,8kCAEA6N,gBAAiBC,EAAAA,wBAAwBC,4HANlCd,SADmBe,EAAAA,qBAqB5BP,EArBA,GCAA,IAAAQ,EAAA,WAmBE,SAAAA,EAAoBC,EACAC,GADAhY,KAAA+X,eAAAA,EACA/X,KAAAgY,MAAAA,EAwBtB,OAtBEF,EAAA5X,UAAAoJ,SAAA,aAGAwO,EAAA5X,UAAA+X,SAAA,WAAA,IAAApU,EAAA7D,KACEA,KAAK+X,eAAeG,YAAYnL,WAAS,SAAE5H,GACrCA,EAAOgT,MACTtU,EAAKuU,kBAAoBjT,EAAOgT,IAChCtU,EAAKmU,MAAMK,SAAS,GAAI,CACtBH,YAAa,CACXC,IAAK,MAEPG,oBAAqB,eAO7BR,EAAA5X,UAAAqY,yBAAA,SAAyBC,EAAeC,GACtCA,EAAYD,GAAezX,4BAnC9B4I,EAAAA,UAASlF,KAAA,CAAC,CACTmF,SAAU,wBACVC,SAAU,kHAPH6O,EAAAA,sBAAgBC,EAAAA,UA2CzBb,EA5CA,oBCmCE,SAAAc,EACU3J,EACDnE,EACC+N,EACYC,GAHZ9Y,KAAAiP,sBAAAA,EACDjP,KAAA8K,mBAAAA,EACC9K,KAAA6Y,oBAAAA,EACY7Y,KAAA8Y,WAAAA,EACpB9Y,KAAK+Y,4BAA8B,IAAIhG,EAAAA,aACvC/S,KAAKgZ,gCAAkC,IAAIjG,EAAAA,aAiF/C,OA9EE6F,EAAA1Y,UAAAoJ,SAAA,WAAA,IAAAzF,EAAA7D,KAEEA,KAAKiP,sBAAsBR,+BAA+BzO,KAAKqO,mBAAoBrO,KAAKsO,oBAAqBtO,KAAKiZ,YAAYlM,WAAS,SAAC5J,GAEtI,QADI+V,EAAO,GACFtR,EAAQ,EAAGA,EAAQzE,EAAEjC,MAAMI,OAAQsG,IAAS,CAEnDsR,EAAI9X,EAAO8X,EADK/V,EAAEjC,MAAM0G,GACIuR,SAO9B,GALAtV,EAAKsV,QAAUD,EAEfrV,EAAKuV,aAAevV,EAAKsV,QAAQjW,MAAI,SAACmW,GAAK,OAAqB,IAArBA,EAAEC,kBAC7CzV,EAAK0V,OAASpW,EAAEjC,MAEXM,EAAMC,uBAAuBoC,EAAK2V,uBAUhC,GAAKhY,EAAMC,uBAAuBoC,EAAK4V,eAMlCjY,EAAMC,uBAAuBoC,EAAKuV,gBAC5CvV,EAAK2V,sBAAwB3V,EAAKuV,aAAavT,GAC/ChC,EAAKmV,gCAAgCU,KAAK7V,EAAKuV,mBARa,KACtDO,OACU3T,KADV2T,EAAU9V,EAAKsV,QAAQjW,MAAI,SAACmW,GAAK,MAAA,GAAKA,EAAEnY,OAAU,GAAK2C,EAAK4V,oBAEhE5V,EAAK2V,sBAAwBG,EAAQ9T,GACrChC,EAAKmV,gCAAgCU,KAAKC,cAX5B3T,KADV2T,EAAU9V,EAAKsV,QAAQjW,MAAI,SAACmW,GAAK,MAAA,GAAKA,EAAExT,IAAO,GAAKhC,EAAK2V,2BAE7D3V,EAAK2V,sBAAwBG,EAAQ9T,GACrChC,EAAKmV,gCAAgCU,KAAKC,KAE1C9V,EAAK2V,2BAAwBxT,EAC7BnC,EAAKkV,4BAA4BW,KAAK7V,EAAK2V,6BAazBxT,IAAlBnC,EAAK+V,WACP/V,EAAK+V,UAAW,WAGM5T,IAAtBhG,KAAKgM,eACPhM,KAAKgM,aAAexK,EAAMgB,sBAExBhB,EAAMC,uBAAuBzB,KAAK6Z,gBAClC7Z,KAAK6M,KAAO7M,KAAK6Z,cACjBrY,EAAMC,uBAAuBzB,KAAK6M,QAClC7M,KAAK6M,KAAO7M,KAAK8Y,YAGrB9Y,KAAK8Z,UAAY,IAAIC,EAAAA,iBACH/T,IAAdhG,KAAK6M,MAAoC,OAAd7M,KAAK6M,WAAuC7G,IAAtBhG,KAAKgM,cACxDhM,KAAK6M,KAAKA,KAAKmN,WAAWha,KAAKgM,aAAchM,KAAK8Z,WAEpD9Z,KAAK6Y,oBAAoBxN,4BAA4B0B,WAAS,SAAC5J,GACxD3B,EAAMC,uBAAuBoC,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,iBAAkC,IAAhB7I,EAAE6H,UAG/DxJ,EAAMC,uBAAuBoC,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,iBAAkC,IAAhB7I,EAAE6H,YAChFnH,EAAKoW,WAAY,EACjBpW,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,cAAcgB,UAAU,QAJ7CnJ,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,cAAcgB,UAAU,CAAEE,WAAW,IAC1DrJ,EAAKoW,WAAY,MAMrBja,KAAK6Y,oBAAoBvN,wBAAwByB,WAAS,SAAC5J,GACzDU,EAAKoW,WAAY,EACZzY,EAAMC,uBAAuBoC,EAAKgJ,KAAKA,KAAK/I,IAAID,EAAKmI,oBAAuChG,IAAtBnC,EAAKmI,eAC9EnI,EAAKgJ,KAAKA,KAAK/I,IAAID,EAAKmI,cAAcgB,UAAU,UAItD4L,EAAA1Y,UAAA8W,OAAA,SAAO5M,GAAP,IAAAvG,EAAA7D,KACEA,KAAKwZ,sBAAwBpP,EAAMlJ,MACnClB,KAAK+Y,4BAA4BW,KAAK1Z,KAAKwZ,2BAErCG,EAAU3Z,KAAKmZ,QAAQjW,MAAI,SAACmW,GAAK,MAAA,GAAKA,EAAExT,IAAO,GAAKhC,EAAK2V,8BAC/CxT,IAAZ2T,GACF3Z,KAAKgZ,gCAAgCU,KAAKC,GAC9B3Z,KAAKgM,aACnBhM,KAAK6M,KAAKA,KAAKM,cACfnN,KAAK6M,KAAKA,KAAKqN,WAAW,CAACC,MAAOna,KAAKwZ,6CAjH1C7P,EAAAA,UAASlF,KAAA,CAAC,CACTmF,SAAU,iCACVC,SAAA,oyBAPOoE,SACApH,SACAoE,SAHaoC,EAAAA,OAAM+M,WAAA,CAAA,CAAAC,KAsCvBC,EAAAA,6DAzBF3P,EAAAA,kCACAA,EAAAA,mCACAA,EAAAA,2BACAA,EAAAA,0BACAA,EAAAA,4BACAA,EAAAA,6BACAA,EAAAA,wBACAA,EAAAA,4BACAA,EAAAA,2CAUAuJ,EAAAA,gDACAA,EAAAA,UAyFH0E,KC1HA,IAAA2B,EAAA,WAoCE,SAAAA,EACUtL,EACDnE,EACC+N,EACYC,GAHZ9Y,KAAAiP,sBAAAA,EACDjP,KAAA8K,mBAAAA,EACC9K,KAAA6Y,oBAAAA,EACY7Y,KAAA8Y,WAAAA,EACpB9Y,KAAK+Y,4BAA8B,IAAIhG,EAAAA,aACvC/S,KAAKgZ,gCAAkC,IAAIjG,EAAAA,aAEvCvR,EAAMC,uBAAuBzB,KAAK6Z,gBACpC7Z,KAAK6M,KAAO7M,KAAK6Z,cACfrY,EAAMC,uBAAuBzB,KAAK6M,QACpC7M,KAAK6M,KAAO7M,KAAK8Y,YAqFvB,OAjFEyB,EAAAra,UAAAoJ,SAAA,WAAA,IAAAzF,EAAA7D,KACEA,KAAKiP,sBAAsBb,wBAAwBpO,KAAKqO,mBAAoBrO,KAAKsO,oBAAqBtO,KAAKiZ,YAAYlM,WAAS,SAAC5J,GAI/H,GAHAU,EAAKuV,aAAejW,EAAEjC,MAAMgC,MAAI,SAACmW,GAAK,OAAqB,IAArBA,EAAEC,kBACxCzV,EAAKsV,QAAUhW,EAAEjC,MAEZM,EAAMC,uBAAuBoC,EAAK2V,uBAWhC,GAAKhY,EAAMC,uBAAuBoC,EAAK4V,gBAOvC,IAAKjY,EAAMC,uBAAuBoC,EAAKuV,cAAe,CAC3DvV,EAAK2V,sBAAwB3V,EAAKuV,aAAavT,GAC/ChC,EAAKmV,gCAAgCU,KAAK7V,EAAKuV,cACjCvV,EAAKmI,aACnBnI,EAAKgJ,KAAKA,KAAKqN,WAAW,CAACM,MAAO3W,EAAKuV,aAAavT,UAXQ,KACtD8T,OACU3T,KADV2T,EAAU9V,EAAKsV,QAAQjW,MAAI,SAACmW,GAAK,MAAA,GAAKA,EAAEnY,OAAU,GAAK2C,EAAK4V,oBAEhE5V,EAAK2V,sBAAwBG,EAAQ9T,GACrChC,EAAKkV,4BAA4BW,KAAKC,EAAQ9T,IAC9ChC,EAAKmV,gCAAgCU,KAAKC,cAd5B3T,KADV2T,EAAU9V,EAAKsV,QAAQjW,MAAI,SAACmW,GAAK,MAAA,GAAKA,EAAExT,IAAO,GAAKhC,EAAK2V,2BAE7D3V,EAAK2V,sBAAwBG,EAAQ9T,GACrChC,EAAKkV,4BAA4BW,KAAKC,EAAQ9T,IAC9ChC,EAAKmV,gCAAgCU,KAAKC,KAE1C9V,EAAK2V,2BAAwBxT,EAC7BnC,EAAKkV,4BAA4BW,UAAK1T,GACtCnC,EAAKkV,4BAA4BW,KAAK7V,EAAK2V,6BAiBzBxT,IAAlBnC,EAAK+V,WACP/V,EAAK+V,UAAW,WAGM5T,IAAtBhG,KAAKgM,eACPhM,KAAKgM,aAAexK,EAAMgB,sBAE5BxC,KAAK8Z,UAAY,IAAIC,EAAAA,iBAGH/T,IAAdhG,KAAK6M,MAAoC,OAAd7M,KAAK6M,WAAuC7G,IAAtBhG,KAAKgM,cACxDhM,KAAK6M,KAAKA,KAAKmN,WAAWha,KAAKgM,aAAchM,KAAK8Z,WAEpD9Z,KAAK6Y,oBAAoBxN,4BAA4B0B,WAAS,SAAC5J,GACxD3B,EAAMC,uBAAuBoC,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,iBAAkC,IAAhB7I,EAAE6H,UAG/DxJ,EAAMC,uBAAuBoC,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,iBAAkC,IAAhB7I,EAAE6H,YAChFnH,EAAKoW,WAAY,EACjBpW,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,cAAcgB,UAAU,QAJ7CnJ,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,cAAcgB,UAAU,CAAEE,WAAW,IAC1DrJ,EAAKoW,WAAY,MAMrBja,KAAK6Y,oBAAoBvN,wBAAwByB,WAAS,SAAC5J,GACzDU,EAAKoW,WAAY,EACZzY,EAAMC,uBAAuBoC,EAAKgJ,KAAKA,KAAK/I,IAAID,EAAKmI,oBAAuChG,IAAtBnC,EAAKmI,eAC9EnI,EAAKgJ,KAAKA,KAAK/I,IAAID,EAAKmI,cAAcgB,UAAU,cAExBhH,IAAxBhG,KAAKya,gBACPza,KAAKya,eAAe1N,WAAS,SAAC5J,GACvB3B,EAAMC,uBAAuBoC,EAAKuV,gBACrCvV,EAAK2V,sBAAwB3V,EAAKuV,aAAavT,GAC/ChC,EAAKkV,4BAA4BW,KAAK7V,EAAKuV,aAAavT,IACxDhC,EAAKmV,gCAAgCU,KAAK7V,EAAKuV,mBAMvDmB,EAAAra,UAAA8W,OAAA,SAAO5M,GAAP,IAAAvG,EAAA7D,KACEA,KAAKwZ,sBAAwBpP,EAAMlJ,MACnClB,KAAK+Y,4BAA4BW,KAAK1Z,KAAKwZ,2BAErCG,EAAU3Z,KAAKmZ,QAAQjW,MAAI,SAACmW,GAAK,MAAA,GAAKA,EAAExT,IAAO,GAAKhC,EAAK2V,8BAC/CxT,IAAZ2T,GACF3Z,KAAKgZ,gCAAgCU,KAAKC,GAC9B3Z,KAAKgM,aACnBhM,KAAK6M,KAAKA,KAAKM,cACfnN,KAAK6M,KAAKA,KAAKqN,WAAW,CAACC,MAAOna,KAAKwZ,6CAzH1C7P,EAAAA,UAASlF,KAAA,CAAC,CACTmF,SAAU,2BACVC,SAAA,8qBATOoE,SAEApH,SAEAoE,SADaoC,EAAAA,OAAM+M,WAAA,CAAA,CAAAC,KAoCvBC,EAAAA,6DAzBF3P,EAAAA,kCACAA,EAAAA,mCACAA,EAAAA,2BACAA,EAAAA,0BACAA,EAAAA,4BACAA,EAAAA,6BACAA,EAAAA,wBACAA,EAAAA,8BACAA,EAAAA,4BACAA,EAAAA,2CASAuJ,EAAAA,gDACAA,EAAAA,UAkGHqG,EApIA,GCAA,IAAAG,EAAA,WA4BE,SAAAA,EACUzL,EACA4J,EACAC,GAFA9Y,KAAAiP,sBAAAA,EACAjP,KAAA6Y,oBAAAA,EACA7Y,KAAA8Y,WAAAA,EAbD9Y,KAAA2a,cAAe,EAEd3a,KAAA4a,qBAAuB,IAAI7H,EAAAA,aAErC/S,KAAA6a,WAAa,GA2Cf,OA/BEH,EAAAxa,UAAAoJ,SAAA,gBAE4BtD,IAAtBhG,KAAKgM,eACPhM,KAAKgM,aAAexK,EAAMgB,sBAExBhB,EAAMC,uBAAuBzB,KAAK6Z,gBACpC7Z,KAAK6M,KAAO7M,KAAK6Z,cAEfrY,EAAMC,uBAAuBzB,KAAK6M,QACpC7M,KAAK6M,KAAO7M,KAAK8Y,YAGnB9Y,KAAK8a,gBAAkB,IAAIf,EAAAA,YAC3B/Z,KAAK+a,kBAAoB,IAAIhB,EAAAA,iBACX/T,IAAdhG,KAAK6M,OACP7M,KAAK6M,KAAKA,KAAKmN,WAAWha,KAAKgM,aAAe,SAAUhM,KAAK8a,iBAC7D9a,KAAK6M,KAAKA,KAAKmN,WAAWha,KAAKgM,aAAe,eAAgBhM,KAAK+a,oBAErE/a,KAAKgb,eAGPN,EAAAxa,UAAA8a,YAAA,WAAA,IAAAnX,EAAA7D,KACEA,KAAKiP,sBAAsBb,wBAAwB,iBAAiBrB,WAAS,SAAC5J,GAC5E,IAAI3B,EAAMC,uBAAuB0B,KAAM3B,EAAMC,uBAAuB0B,EAAEjC,OAAtE,CAEA2C,EAAKgX,WAAa1X,EAAEjC,UACd+Z,EAAkBpX,EAAKgX,WAAW3X,MAAI,SAACmW,GAAK,OAAqB,IAArBA,EAAEC,kBACpDzV,EAAKqX,eAAe7K,aAAe4K,EAAgB/Z,MACnD2C,EAAK+W,qBAAqBlB,KAAK7V,EAAKqX,yCAvDzCvR,EAAAA,UAASlF,KAAA,CAAC,CACTmF,SAAU,sBACVC,SAAA,0yCAROoE,SAGAhD,SADaoC,EAAAA,kDAWnB1C,EAAAA,0BACAA,EAAAA,2BACAA,EAAAA,4BACAA,EAAAA,4BACAA,EAAAA,4BACAA,EAAAA,oCACAuJ,EAAAA,UA6CHwG,EAjEA,GCAA,IAAAS,EAAA,WAuBE,SAAAA,EAAoBrO,EAA2C5C,GAA3ClK,KAAA8M,aAAAA,EAA2C9M,KAAAkK,OAAAA,EALtDlK,KAAAob,YAAa,EAqCxB,OA9BED,EAAAjb,UAAAoJ,SAAA,WAAA,IAAAzF,EAAA7D,KACOwB,EAAMC,uBAAuBzB,KAAK6B,UACrC7B,KAAKqb,QAAU,GACfrb,KAAK6B,OAAS7B,KAAK6B,OAAOyZ,cAC1Btb,KAAKqb,QAAUrb,KAAK6B,OAAO0G,MAAM,MAKnCvI,KAAKub,uBAAyBvb,KAAK8M,aAAa1B,qBAAqB2B,WAAS,SAAC5J,QACtD6C,IAAjBnC,EAAKwX,aAEUrV,IADAnC,EAAKwX,QAAQnY,MAAI,SAACmW,GAAK,OAAAA,IAAMlW,EAAEtB,aAE1B,IAAhBsB,EAAE6H,UACJnH,EAAK4H,OAAS,GAGV5H,EAAKuX,iBAA2BpV,IAAb7C,EAAEsI,QAAwBtI,EAAEsI,OAAOnK,OAAS,EACjEuC,EAAKqG,OAAOK,KAAKM,EAAsB,CACrC/B,KAAM,CAAC2C,OAAQtI,EAAEsI,QAASjB,WAAY,iBAErC3G,EAAK4H,OAAStI,EAAEsI,QAEzB5H,EAAK4H,OAAStI,EAAEsI,WAGxB0P,EAAAjb,UAAAwT,YAAA,WACO1T,KAAKub,uBAAuB/H,QAC/BxT,KAAKub,uBAAuBC,mCA7CjC7R,EAAAA,UAASlF,KAAA,CAAC,CACTmF,SAAU,oBACVC,SAAA,4OAROoB,SAEAP,EAAAA,6CAYNC,EAAAA,sBACAA,EAAAA,0BACAA,EAAAA,SAqCHwQ,EAvDA,GCAA,IAAAM,EAAA,WAUE,SAAAA,EAAmB3Q,GAAA9K,KAAA8K,mBAAAA,EAKrB,OAHE2Q,EAAAvb,UAAAoJ,SAAA,iCATDK,EAAAA,UAASlF,KAAA,CAAC,CACTmF,SAAU,yBACVC,SAAA,sMAJOhD,KAcT4U,EAfA,GCAA,IAAAC,EAAA,WAaE,SAAAA,EAAoB7C,GAAA7Y,KAAA6Y,oBAAAA,EAetB,OAbE6C,EAAAxb,UAAAoJ,SAAA,WAAA,IAAAzF,EAAA7D,KAEEA,KAAK6Y,oBAAoBxN,4BAA4B0B,WAAS,SAAC5J,GACzDU,EAAKmI,eAAiB7I,EAAE6I,eAAgC,IAAhB7I,EAAE6H,UAC5CnH,EAAK4H,OAAStI,EAAEmJ,aAAa/D,MAAM,OAC5B1E,EAAKmI,eAAiB7I,EAAE6I,eAAgC,IAAhB7I,EAAE6H,YACjDnH,EAAK4H,OAAS,OAElBzL,KAAK6Y,oBAAoBvN,wBAAwByB,WAAS,SAAC5J,GACzDU,EAAK4H,OAAS,2BArBnB9B,EAAAA,UAASlF,KAAA,CAAC,CACTmF,SAAU,iCACVC,SAAA,mHAJOoB,2CASNN,EAAAA,SAkBH+Q,EA5BA,GCAA,IAAAC,GAAA,WAWE,SAAAA,IACE3b,KAAK4b,eAAiB,IAAI3U,EAAAA,QAC1BjH,KAAK6b,qBAAuB,IAAI5U,EAAAA,eAGlC0U,EAAAzb,UAAA4b,OAAA,SAAOC,GACL/b,KAAK4b,eAAe7a,KAAKgb,IAS3BJ,EAAAzb,UAAA8b,cAAA,SAAcD,GACZ/b,KAAK6b,qBAAqB9a,KAAKgb,wBAxBlCvX,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAJd,GCAA,IAAAuX,GAAA,WAYE,SAAAA,EAAoBC,EAAuC1E,GAAvCxX,KAAAkc,cAAAA,EAAuClc,KAAAwX,GAAAA,EAD3DxX,KAAAmc,cAAgB,EAgBlB,OAbEF,EAAA/b,UAAAoJ,SAAA,WAAA,IAAAzF,EAAA7D,KACEA,KAAKkc,cAAcN,eAAe7O,WAAS,SAAC5J,IAChC,IAANA,EACFU,EAAKsY,gBACFtY,EAAKsY,gBAENtY,EAAKsY,cAAgB,IACvBtY,EAAKsY,cAAgB,GAEvBtY,EAAK2T,GAAGC,uCApBb9N,EAAAA,UAASlF,KAAA,CAAC,CACTmF,SAAU,aACVC,SAAA,wGAEA6N,gBAAiBC,EAAAA,wBAAwBC,gEANlC+D,UADmD9D,EAAAA,qBA2B5DoE,EA3BA,GCAA,IAAAG,GAAA,WAeE,SAAAA,EACkCtT,EACzBC,EACAC,GAFyBhJ,KAAA8I,KAAAA,EACzB9I,KAAA+I,UAAAA,EACA/I,KAAAgJ,iBAAAA,EANThJ,KAAAqc,aAAe,aACfrc,KAAAsc,SAAW,qDAgBb,OATEF,EAAAlc,UAAAoJ,SAAA,WACO9H,EAAMC,uBAAuBzB,KAAK8I,QAChCtH,EAAMC,uBAAuBzB,KAAK8I,KAAKuT,gBAC1Crc,KAAKqc,aAAerc,KAAK8I,KAAKuT,cAE3B7a,EAAMC,uBAAuBzB,KAAK8I,KAAKwT,YAC1Ctc,KAAKsc,SAAWtc,KAAK8I,KAAKwT,gCArBjC3S,EAAAA,UAASlF,KAAA,CAAC,CACTmF,SAAU,kCACVC,SAAA,wsBASGC,EAAAA,OAAMrF,KAAA,CAACsF,EAAAA,0BAfcC,EAAAA,oBACjBnD,KA2BTuV,EA7BA,GCAA,IAAAG,GAAA,WAuBE,SAAAA,EACSzR,EACC+B,GADD7M,KAAA8K,mBAAAA,EACC9K,KAAA6M,KAAAA,EAJA7M,KAAAwc,eAAiB,IAAIzJ,EAAAA,aAC/B/S,KAAAyc,MAAQ,GA+BV,OA1BEF,EAAArc,UAAAoJ,SAAA,WACEtJ,KAAK0c,gBAEqB1W,IAAtBhG,KAAKgM,eACPhM,KAAKgM,aAAexK,EAAMgB,sBAE5BxC,KAAK8a,gBAAkB,IAAIf,EAAAA,YAC3B/Z,KAAK2c,uBAAyB,IAAI5C,EAAAA,iBAChB/T,IAAdhG,KAAK6M,OACP7M,KAAK6M,KAAKA,KAAKmN,WAAWha,KAAKgM,aAAe,SAAUhM,KAAK8a,iBAC7D9a,KAAK6M,KAAKA,KAAKmN,WAAWha,KAAKgM,aAAe,gBAAiBhM,KAAK2c,0BAKxEJ,EAAArc,UAAAwc,SAAA,iCApCD/S,EAAAA,UAASlF,KAAA,CAAC,CACTmF,SAAU,eACVC,SAAA,mpCANOhD,SACAwG,EAAAA,4CAUN1C,EAAAA,0BACAA,EAAAA,2BACAA,EAAAA,4BACAA,EAAAA,8BAKAuJ,EAAAA,UAgCHqI,EArDA,GCAA,IAAAK,GAAA,WAWE,SAAAA,EAAoB9V,GAAA9G,KAAA8G,WAAAA,SAEpB8V,EAAA1c,UAAA2c,OAAA,SAAOC,OACD3X,EAAS,IAAIC,EAAAA,WAGjB,OAFAD,EAASA,EAAOwB,OAAO,WAAYmW,EAAaC,UAAUpW,OAAO,aAAcmW,EAAaE,YAC3FrW,OAAO,OAAQ,GAAKmW,EAAaG,MAAMtW,OAAO,MAAO,GAAKmW,EAAaI,KACjEld,KAAK8G,WAAWhD,IAAI,SAAU,SAAUqB,wBAXlDX,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDANLE,2HADT,qBCkDE,SAAAuY,EACUC,EACDpU,EACC8P,EACAD,GAHA7Y,KAAAod,cAAAA,EACDpd,KAAAgJ,iBAAAA,EACChJ,KAAA8Y,WAAAA,EACA9Y,KAAA6Y,oBAAAA,EArCD7Y,KAAAqd,mBAAqB,EACrBrd,KAAAsd,qBAAuB,EASvBtd,KAAAud,UAAW,EAOpBvd,KAAAia,WAAY,EAGZja,KAAAwd,WAAY,EAGJxd,KAAAyd,SAAW,IAAIxW,EAAAA,QAEvBjH,KAAA0d,aAAc,EAaV1d,KAAK2d,qBAAuB,IAAI5K,EAAAA,aAChC/S,KAAK4d,6BAA+B,IAAI7K,EAAAA,aACxC/S,KAAK6d,mBAAqB,IAAI5W,EAAAA,QAC9BjH,KAAKyd,SAAW,IAAIxW,EAAAA,QACpBjH,KAAKid,KAAO,EACZjd,KAAKkd,IAAMld,KAAKqd,mBAChBrd,KAAK8d,QAAU,GA+HrB,OA5HEX,EAAAjd,UAAAoJ,SAAA,WAAA,IAAAzF,EAAA7D,KACE+d,EAAAA,MAAM/d,KAAK6d,mBAAmBvY,KACtB0Y,EAAAA,aAAa,KACbC,EAAAA,sBAAoB,SAAE1b,EAAGhD,GACvB,OAAIA,EAAE+B,OAASuC,EAAKyZ,sBAAwB/a,IAAMhD,IAElDsE,EAAKqa,eACE,OAEXle,KAAKyd,SAASnY,KACZ2Y,EAAAA,sBAAoB,SAAE1b,EAAGhD,GACvB,OAAIgD,IAAMhD,OAIX+F,KAAKyJ,EAAAA,WAAS,SAAE5L,GACf,GAAI3B,EAAMC,uBAAuBoC,EAAKsa,eAAiBta,EAAKsa,aAAa7c,OAASuC,EAAKyZ,qBAErF,OADAzZ,EAAKqa,cACEtP,EAAAA,GAAG,CAAC1N,MAAO,SAEhBkd,EAAiB,KAKrB,OAJAva,EAAK2Z,WAAY,EAEfY,OAD0BpY,IAAxBnC,EAAKwa,eACU,CAAEzX,KAAM/C,EAAKsa,cACVta,EAAKwa,eAAexa,EAAKsa,cACxCta,EAAKuZ,cAAcP,OAAO,CAC/BE,SAAUlZ,EAAKkZ,SAAUC,WAAYtX,KAAKC,UAAUyY,GACpDnB,KAAMpZ,EAAKoZ,KAAMC,IAAKrZ,EAAKqZ,UAItCnQ,WAAS,SAAC5J,GACLA,EAAEjC,MAAMI,SAAWuC,EAAKwZ,qBAC1BxZ,EAAKoZ,MAAQpZ,EAAKwZ,oBAEpBxZ,EAAKia,QAAO1c,EAAOyC,EAAKia,QAAY3a,EAAEjC,OACtC2C,EAAKya,aAAarL,OAAOlS,OACzB8C,EAAK2Z,WAAY,UAGOxX,IAAtBhG,KAAKgM,eACPhM,KAAKgM,aAAexK,EAAMgB,sBAExBhB,EAAMC,uBAAuBzB,KAAK6Z,gBACpC7Z,KAAK6M,KAAO7M,KAAK6Z,cAEfrY,EAAMC,uBAAuBzB,KAAK6M,QACpC7M,KAAK6M,KAAO7M,KAAK8Y,YAGnB9Y,KAAK8Z,UAAY,IAAIC,EAAAA,iBACH/T,IAAdhG,KAAK6M,MACP7M,KAAK6M,KAAKA,KAAKmN,WAAWha,KAAKgM,aAAchM,KAAK8Z,WAEpD9Z,KAAK6Y,oBAAoBxN,4BAA4B0B,WAAS,SAAC5J,GACxD3B,EAAMC,uBAAuBoC,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,iBAAkC,IAAhB7I,EAAE6H,UAK/DxJ,EAAMC,uBAAuBoC,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,iBAAkC,IAAhB7I,EAAE6H,YAChFnH,EAAKoW,WAAY,EACjBpW,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,cAAcgB,UAAU,QAN7CnJ,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,cAAcgB,UAAU,CAAEE,WAAW,IAC1DrJ,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,cAAcmB,cACnCtJ,EAAKgJ,KAAKA,KAAK/I,IAAIX,EAAE6I,cAAcoB,gBACnCvJ,EAAKoW,WAAY,MAOrBja,KAAK6Y,oBAAoBvN,wBAAwByB,WAAS,SAAC5J,GACzDU,EAAKoW,WAAY,EACZzY,EAAMC,uBAAuBoC,EAAKgJ,KAAKA,KAAK/I,IAAID,EAAKmI,oBAAuChG,IAAtBnC,EAAKmI,eAC9EnI,EAAKgJ,KAAKA,KAAK/I,IAAID,EAAKmI,cAAcgB,UAAU,cAEzBhH,IAAvBhG,KAAKyZ,eAA+BzZ,KAAKyZ,cAAc5Z,eAAe,QACxEG,KAAK0d,aAAc,IAGvBP,EAAAjd,UAAAmT,SAAA,WACErT,KAAKyd,SAAS1c,KAAKf,KAAKid,OAG1BE,EAAAjd,UAAA2c,OAAA,SAAOzS,GACLpK,KAAKme,aAAe/T,EAAMmI,OAAOrR,MAE7BM,EAAMC,uBAAuBzB,KAAKme,cACpCne,KAAKid,KAAO,GAIQ,IAAlB7S,EAAMmU,SAAmC,KAAlBnU,EAAMmU,SAC/Bve,KAAKwe,qBAEPxe,KAAK6d,mBAAmB9c,KAAKf,KAAKme,gBAGpChB,EAAAjd,UAAAue,eAAA,SAAerU,GACbpK,KAAK0e,eAAiBtU,EAAMuU,OAAOzd,MAAM2E,GACzC7F,KAAKyZ,cAAgBrP,EAAMuU,OAAOzd,MAClClB,KAAK0d,aAAc,EACnB1d,KAAKme,aAAene,KAAK4e,gBAAgBxU,EAAMuU,OAAOzd,OACtDlB,KAAK4d,6BAA6BlE,KAAK1Z,KAAKyZ,eAC5CzZ,KAAK2d,qBAAqBjE,KAAK1Z,KAAK0e,gBACtB1e,KAAKgM,aACnBhM,KAAK6M,KAAKA,KAAKM,cACfnN,KAAK6M,KAAKA,KAAKqN,WAAW,CAACC,MAAOna,KAAK0e,kBAGzCvB,EAAAjd,UAAAse,mBAAA,WACExe,KAAK0e,oBAAiB1Y,EACtBhG,KAAKyZ,mBAAgBzT,EACrBhG,KAAKme,aAAe,GACpBne,KAAK0d,aAAc,EACnB1d,KAAK4d,6BAA6BlE,KAAK1Z,KAAKyZ,eAC5CzZ,KAAK2d,qBAAqBjE,KAAK1Z,KAAK0e,iBAGtClf,OAAAyJ,eAAIkU,EAAAjd,UAAA,gBAAa,KAAjB,WACE,QAAQF,KAAK0d,kBACc1X,IAAvBhG,KAAKyZ,eAAsD,OAAvBzZ,KAAKyZ,eAA2BzZ,KAAKyZ,cAAc5Z,eAAe,wCAEpGsd,EAAAjd,UAAAge,YAAR,WACEle,KAAK8d,QAAU,GACf9d,KAAKid,KAAO,EACZjd,KAAK0d,aAAc,EACnB1d,KAAKkd,IAAMld,KAAKqd,wCAhLnB1T,EAAAA,UAASlF,KAAA,CAAC,CACTmF,SAAU,sBACVC,SAAA,umCARO+S,UAEA/V,SACawG,EAAAA,cACbpC,6CAYNN,EAAAA,2BACAA,EAAAA,wBACAA,EAAAA,6BACAA,EAAAA,8BACAA,EAAAA,+BACAA,EAAAA,4BACAA,EAAAA,wBACAA,EAAAA,4BACAA,EAAAA,oCAgBAuJ,EAAAA,6CACAA,EAAAA,6BAEA2K,EAAAA,UAASpa,KAAA,CAAC,eAAgB,CAACqa,QAAQ,iCACnCD,EAAAA,UAASpa,KAAA,CAACsa,EAAAA,uBAAwB,CAACD,QAAQ,OA4I9C3B,KC5LA,IAAA6B,GAAA,WAiCA,SAAAA,KAuE4B,2BAvE3B5K,EAAAA,SAAQ3P,KAAA,CAAC,CACR4P,aAAc,CACZiD,EACAQ,EACAc,EACA2B,EACA1R,EACA6R,EACAS,EACAtQ,EACA4Q,EACAC,EACAO,GACAG,GACAG,GACAY,GACAlT,EACA2C,EACAU,EACAO,EACAG,EACAgB,EACAE,EACAc,EACAM,EACAI,EACAC,EACAW,EACAE,EACAE,EACAiB,GAEFsM,QAAS,CACPC,EAAAA,aACA/K,GAEFG,QAAS,CACPrK,EACA2C,EACAU,EACAO,EACAG,EACAgB,EACAE,EACAc,EACAM,EACAI,EACAC,EACAW,EACAE,EACA8F,EACAQ,EACAc,EACA2B,EACA1R,EACA6R,EACAS,EACAtQ,EACA4Q,EACAC,EACAO,GACAG,GACAG,GACAY,IAEFgC,gBAAiB,CACftU,EACAhC,EACAuT,QAGwB4C,EAxG5B,GCAAI,GAAA,WAUE,SAAAA,EAAoBtY,EAAgCkC,GAAhChJ,KAAA8G,WAAAA,EAAgC9G,KAAAgJ,iBAAAA,EAE5ChJ,KAAAqf,cAAuC,UAGxCD,EAAAlf,UAAA0F,KAAP,SAAYX,EAAc+S,EAAesH,GACvC,OAAOtf,KAAK8G,WAAWlB,KAAKX,EAAM+S,OAAOhS,EAAWsZ,wBAXvD9a,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDALLE,SAEAiC,yIAHT,GCAA,IAAA0Y,GAAA,WAUE,SAAAA,EAAoBzY,EAAgCzD,GAAhCrD,KAAA8G,WAAAA,EAAgC9G,KAAAqD,KAAAA,SAE7Ckc,EAAArf,UAAA4D,IAAP,SAAWmB,EAAc+S,EAAesH,GAGtC,QAFIna,EAAS,IAAIC,EAAAA,WACXoa,EAAKhgB,OAAOigB,QAAaH,GACtB1e,EAAI,EAAGA,EAAI4e,EAAGle,OAAQV,IAAK,KAC5B8e,EAAMF,EAAG5e,GACfuE,EAASA,EAAOwB,OAAO+Y,EAAI,GAAIA,EAAI,IAErC,OAAO1f,KAAK8G,WAAWhD,IAAImB,EAAM+S,EAAO7S,IAGnCoa,EAAArf,UAAAyf,gBAAP,SAAuB1a,EAAcC,GACnC,OAAOlF,KAAKqD,KAAKS,IAAO9D,KAAK8G,WAAWzB,YAAW,IAAIJ,EAAI,IAAIC,EAC3D,CAAE0a,aAAc,OAAQzZ,QAAS,kCAnBxC3B,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDALLE,SACYD,EAAAA,6JAFrB,sBCiBE,SAAAkb,EAAoB/U,GAApB,IAAAjH,EACE2M,EAAA3P,KAAAb,OAAOA,YADW6D,EAAAiH,mBAAAA,EAsBpBjH,EAAAic,cAAa,SAAIC,EAAcC,EAAkB1e,GAE/C,GAAe,IAAXA,GAA6B,IAAb0e,EAClB,OAAOnc,EAAKoc,YAAc,IAAM3e,MAG5B4e,EAAaH,EAAOC,EAI1B,OAAOE,EAAa,EAAI,OAHPA,GAFjB5e,EAASoB,KAAKyd,IAAI7e,EAAQ,IAGxBoB,KAAK0d,IAAIF,EAAaF,EAAU1e,GAChC4e,EAAaF,GAC4B,IAAMnc,EAAKwc,QAAU,IAAM/e,GA9BtEuC,EAAKyc,kBAAoBzc,EAAKiH,mBAAmB5C,UAAU,kBAC3DrE,EAAK0c,cAAgB1c,EAAKiH,mBAAmB5C,UAAU,aACvDrE,EAAKwc,QAAUxc,EAAKiH,mBAAmB5C,UAAU,MACjDrE,EAAK2c,kBAAoB3c,EAAKiH,mBAAmB5C,UAAU,iBAC3DrE,EAAK4c,eAAiB5c,EAAKiH,mBAAmB5C,UAAU,cACxDrE,EAAK6c,cAAgB7c,EAAKiH,mBAAmB5C,UAAU,aACvDrE,EAAKoc,YAAcpc,EAAKiH,mBAAmB5C,UAAU,QACrDrE,EAAK8c,QAAQ5f,OACb8C,EAAKiH,mBAAmB9D,cAAc+F,WAAS,SAAC5J,GAC9CU,EAAKyc,kBAAoBzc,EAAKiH,mBAAmB5C,UAAU,kBAC3DrE,EAAK0c,cAAgB1c,EAAKiH,mBAAmB5C,UAAU,aACvDrE,EAAKwc,QAAUxc,EAAKiH,mBAAmB5C,UAAU,MACjDrE,EAAK2c,kBAAoB3c,EAAKiH,mBAAmB5C,UAAU,iBAC3DrE,EAAK4c,eAAiB5c,EAAKiH,mBAAmB5C,UAAU,cACxDrE,EAAK6c,cAAgB7c,EAAKiH,mBAAmB5C,UAAU,aACvDrE,EAAKoc,YAAcpc,EAAKiH,mBAAmB5C,UAAU,QACrDrE,EAAK8c,QAAQ5f,mBA5BuBwP,EAAAA,EAAAA,uBAHzC/L,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAHLmC,4HAKiC+Z,EAAAA,kBCP1C,IAAAC,GAAA,WASE,SAAAA,EAAmB3W,GAAAlK,KAAAkK,OAAAA,EAEnBlK,KAAA8gB,gBAAiB,EA8DnB,OA1DED,EAAA3gB,UAAA6gB,cAAA,SAAcC,GAAd,IAAAnd,EAAA7D,KACEA,KAAKihB,YAAcD,EACnBhhB,KAAKihB,YAAYpU,KAAKqU,iBACtBlhB,KAAKmhB,wBAA0BH,EAAOnU,KAAKuU,aAAarU,WAAS,SAAC5J,GAC5DU,EAAKod,YAAYpU,KAAKwU,QACxBxd,EAAKid,gBAAiB,OAG5BD,EAAA3gB,UAAAohB,mBAAA,WACEthB,KAAKihB,YAAYpU,KAAKqU,iBACtBlhB,KAAK8gB,gBAAiB,GAGxBD,EAAA3gB,UAAAqhB,aAAA,WACEvhB,KAAK8gB,gBAAiB,EACtB9gB,KAAKmhB,wBAAwB3F,eAG/BqF,EAAA3gB,UAAAshB,yBAAA,SAAyBhY,EAAQiY,EAAiBC,GAAlD,IAAA7d,EAAA7D,KACOA,KAAK8gB,eAKQ9gB,KAAKkK,OAAOK,KAAK6R,GAAoC,CACrEuF,MAAO,QACP7Y,KAAM4Y,IAGEE,cAAc7U,WAAS,SAAC8U,IACjB,IAAXA,GACFhe,EAAKid,gBAAiB,EACtBtX,UAEuBxD,IAAnByb,GACFA,OAfJjY,KAmBJqX,EAAA3gB,UAAA4hB,mBAAA,SAAmBC,EAAYC,EAAWN,GAA1C,IAAA7d,EAAA7D,KACOA,KAAK8gB,eAKQ9gB,KAAKkK,OAAOK,KAAK6R,GAAoC,CACrEuF,MAAO,QACP7Y,KAAM4Y,IAGEE,cAAc7U,WAAS,SAAC8U,IACjB,IAAXA,GACFhe,EAAKid,gBAAiB,EACtBiB,KAEAC,OAdFA,yBAlDLxd,EAAAA,sDALQkG,EAAAA,aAwETmW,EAzEA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import cloneDeep from 'lodash/cloneDeep';\r\n// @dynamic\r\nexport class Utils {\r\n    public static isNullEmptyOrUndefined(value) {\r\n        return value === null || value === '' || typeof value === 'undefined' || value === 'null';\r\n    }\r\n\r\n    public static isNumber(value) {\r\n        return typeof value === 'number' && isFinite(value);\r\n    }\r\n\r\n    public static deepClone(source): any {\r\n      return cloneDeep(source);\r\n    }\r\n\r\n    public static trimLastComma(str: string) {\r\n      str = str.replace(/,\\s*$/, '');\r\n      return str;\r\n    }\r\n\r\n    public static trimLastSlash(str: string) {\r\n      return str.replace(/\\/$/, '');\r\n    }\r\n\r\n    public static sum(key, array) {\r\n        return array.reduce((a, b) => a + (b[key] || 0), 0);\r\n    }\r\n\r\n    public static newTechnicalNumber(): string {\r\n      // tslint:disable-next-line: only-arrow-functions\r\n      return 'xxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        // tslint:disable:one-variable-per-declaration\r\n        // tslint:disable: no-bitwise\r\n        const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n      });\r\n    }\r\n\r\n    public static regexMatch(regex: RegExp, testString: string) {\r\n      const exc = regex.exec(testString);\r\n      if (exc !== null && exc.find(x => x === testString) !== null)\r\n        return true;\r\n      else return false;\r\n    }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IConfigServiceConfig } from '../interfaces/IConfigServiceConfig';\nimport { Configuration } from '../poco/configuration';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  private configurations;\n  constructor(private http: HttpClient) { }\n\n  delayInit(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, 10);\n    });\n  }\n  getConfiguration(config: IConfigServiceConfig) {\n    return this.http.get(`${config.apiUrl}/${config.getConfigEndpoint}`).toPromise()\n      .then((response: Response) => {\n        this.configurations = response;\n        // environment.configuration = this.configurations;\n        return this.configurations;\n       }\n      // ).then((_) => {\n      //   return this.http.get(`${environment.configuration.apiUrl}/common/getTranslations`).toPromise().then((resp: any) => {\n      //     const keyarray = [];\n      //     for (let index = 0; index < resp.value.length; index++) {\n      //       const el = resp.value[index];\n      //       if (localTranslations.findIndex(x => x.key === el.key) < 0)\n      //         localTranslations.push({ key: el.key, value: el.value });\n      //     }\n      //   });\n      //   }\n      ).catch(err => {\n        // if (environment.production)\n        //   return Promise.reject(err);\n        // else {\n        //   this.configurations = environment.configuration;\n        //   return Promise.resolve(environment.configuration);\n        // }\n      });\n  }\n\n  public getConfig(): Configuration {\n    return this.configurations;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ConfigService } from './config.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private http: HttpClient, private configService: ConfigService) { }\r\n\r\n  private formatErrors(error: any) {\r\n    console.error(error);\r\n    return throwError(error.error);\r\n  }\r\n  get(zone: string, path: string, params: HttpParams = new HttpParams()): Observable<any> {\r\n    return this.http.get(`${this.getApiUrl()}/${zone}/${path}`\r\n      , { params })\r\n      .pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  put(zone: string, path: string, body: Object = {}): Observable<any> {\r\n    return this.http.put(\r\n      `${this.getApiUrl()}${zone}/${path}`,\r\n      JSON.stringify(body)\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  post(zone: string, path: string, id?: string, body: Object = {}, withCredentials = false): Observable<any> {\r\n    if (id !== undefined)\r\n      id = '/' + id;\r\n    else id = '';\r\n\r\n    let withCr;\r\n    if (withCredentials === true)\r\n      withCr = { withCredentials: true };\r\n\r\n    return this.http.post(\r\n      `${this.getApiUrl()}/${zone}/${path}${id}`,\r\n      JSON.stringify(body), withCr\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  postFile(zone: string, path: string, id?: string, body: Object = {}, withCredentials = false, reportProgress?: boolean): Observable<any> {\r\n    if (id !== undefined)\r\n      id = '/' + id;\r\n    else id = '';\r\n\r\n    let withCr;\r\n    if (withCredentials === true)\r\n      withCr = { withCredentials: true };\r\n\r\n    if (reportProgress === undefined)\r\n      reportProgress == false;\r\n\r\n    return this.http.post(\r\n      `${this.getApiUrl()}/${zone}/${path}${id}`,\r\n      body, { withCredentials : withCr, reportProgress: reportProgress, observe: 'events' }\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  delete(zone: string, path: string): Observable<any> {\r\n    return this.http.delete(\r\n      `${this.getApiUrl()}/${zone}/${path}`\r\n    ).pipe(catchError(this.formatErrors));\r\n  }\r\n\r\n  uploadFile(zone: string, path: string, file: File, typeName?: string, parentObjectId?: number) {\r\n    const formData: FormData = new FormData();\r\n    formData.append('file', file, file.name);\r\n\r\n    return this.http.post(`${this.configService.getConfig().apiUrl}/${zone}/${path}/${typeName}/${parentObjectId}`, formData);\r\n  }\r\n\r\n  public getApiUrl() {\r\n    return this.configService.getConfig().apiUrl;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Utils } from '../extensions/utils';\r\nimport { ApiService } from './api.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { HttpParams } from '@angular/common/http';\r\n\r\nexport class TranslationKeyContract {\r\n  key: string;\r\n  value: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranslationService {\r\n\r\n  private translations: { [key: string]: string };\r\n\r\n  public cultureCode: number;\r\n  private _cultureCode: number;\r\n\r\n  cultureChange: Subject<any>;\r\n\r\n  constructor(private apiService: ApiService) {\r\n    this.translations = {};\r\n    this.cultureChange = new Subject();\r\n  }\r\n\r\n  setCultureCode(code: number) {\r\n    this._cultureCode = code;\r\n    this.cultureCode = Date.now();\r\n  }\r\n  getCultureCode() {\r\n    return this._cultureCode;\r\n  }\r\n\r\n  getTranslations(cultureCode?) {\r\n    let params = new HttpParams();\r\n    if (cultureCode !== undefined)\r\n      params = params.append('cultureCode', cultureCode);\r\n    return this.apiService.get('common', 'getTranslations', params).pipe(tap(x => {\r\n      const keyarray = [];\r\n      for (let index = 0; index < x.value.length; index++) {\r\n        const element = x.value[index];\r\n        keyarray.push({ key: element.key, value: element.value });\r\n      }\r\n      this.setTranslations(keyarray);\r\n      this.cultureChange.next();\r\n      this.cultureCode = Date.now();\r\n    }));\r\n  }\r\n\r\n   setTranslations(trans: TranslationKeyContract[]) {\r\n    this.translations = {};\r\n    for (let index = 0; index < trans.length; index++) {\r\n      const element = trans[index];\r\n      this.translations[element.key] = element.value;\r\n    }\r\n    localStorage.setItem('translations', JSON.stringify(this.translations));\r\n  }\r\n\r\n  getForKey(key: string): string {\r\n    let res = key;\r\n    if (Utils.isNullEmptyOrUndefined(key) || key === '-')\r\n      return key;\r\n    const r = this.translations[key];\r\n    if (!Utils.isNullEmptyOrUndefined(r))\r\n      res = r;\r\n    else {\r\n      console.log(key);\r\n      this.translations[key] = '[' + key + ']';\r\n      res = '[' + key + ']';\r\n    }\r\n    return res;\r\n  }\r\n\r\n  getForKeyByObject(key: string): string {\r\n    let res = key;\r\n    if (Utils.isNullEmptyOrUndefined(key) || key === '-')\r\n      return key;\r\n    const r = this.translations[key];\r\n    if (!Utils.isNullEmptyOrUndefined(r))\r\n      res = r;\r\n    else {\r\n        const newKey = key.split('_')[1];\r\n        const keyValue = this.translations[newKey];\r\n        res = keyValue;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  loadStorage() {\r\n    const local = localStorage.getItem('translations');\r\n    if (local !== undefined && local !== null) {\r\n      const obj = JSON.parse(local);\r\n      this.translations = obj;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { TranslationService } from '../../services/translation.service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { Utils } from '../../extensions/utils';\r\n\r\nexport interface IConfirmDialogData {\r\n  title: string;\r\n  text: string;\r\n  translatedText: string;\r\n  confirmLabel: string;\r\n  cancelLabel: string;\r\n  action: any;\r\n  parameters: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\n\r\nexport class ConfirmDialogComponent implements OnInit {\r\n\r\n  get showText() {\r\n    return !Utils.isNullEmptyOrUndefined(this.data.text);\r\n  }\r\n\r\n  get showTranslatedText() {\r\n    return !Utils.isNullEmptyOrUndefined(this.data.translatedText);\r\n  }\r\n\r\n  get showOkButton() {\r\n    return !Utils.isNullEmptyOrUndefined(this.data.confirmLabel);\r\n  }\r\n\r\n  get showCloseButton() {\r\n    return !Utils.isNullEmptyOrUndefined(this.data.cancelLabel);\r\n  }\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: IConfirmDialogData,\r\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\r\n    public translateService: TranslationService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ok() {\r\n    if (this.data.action !== undefined)\r\n      this.data.action(this.data.parameters);\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef, HostListener, Optional } from '@angular/core';\r\nimport { IConfirmDialogData, ConfirmDialogComponent } from '../components/confirm-dialog/confirm-dialog.component';\r\nimport { MatDialog } from '@angular/material';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[confirmAction]'\r\n})\r\nexport class ConfirmActionDirective implements OnInit {\r\n\r\n  @Input('confirmAction') action: any;\r\n  @Input() parameters: any;\r\n\r\n  constructor(\r\n    private dialog: MatDialog) { }\r\n\r\n    @HostListener('click') onClick(event) {\r\n      const confirmDialogData: IConfirmDialogData = {\r\n        title: 'Confirm publish tender',\r\n        text: 'This action is irrevertible, are you sure?',\r\n        translatedText: undefined,\r\n        confirmLabel: 'Confirm',\r\n        cancelLabel: 'Cancel',\r\n        action: this.action,\r\n        parameters: this.parameters\r\n      };\r\n      this.dialog.open(ConfirmDialogComponent, { panelClass: 'modal-small', data: confirmDialogData });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.viewContainer.createEmbeddedView(this.templateRef);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { TranslationService } from '../../../services/translation.service';\r\n\r\nexport interface ErrorData {\r\n  errors: [];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-error-dialog',\r\n  templateUrl: './error-dialog.component.html',\r\n  styleUrls: ['./error-dialog.component.css']\r\n})\r\nexport class ErrorDialogComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: ErrorData,\r\n              public translationService: TranslationService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export class ErrorMessage {\r\n  source: string;\r\n  errors: string[];\r\n  isCleanup = false;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { MatSnackBar, MatDialog } from '@angular/material';\r\nimport { TranslationService } from './translation.service';\r\nimport { ErrorDialogComponent } from '../components/error-display/error-dialog/error-dialog.component';\r\nimport { ValidationFailure } from '../poco/validationFailure';\r\nimport { ErrorMessage } from '../poco/errorMessage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorMessagesService {\r\n\r\n  public errorMessagesSubject: Subject<ErrorMessage>;\r\n  public errorPropertyMessageSubject: Subject<ValidationFailure>;\r\n  public removeFormErrorsSubject: Subject<boolean>;\r\n\r\n  private propertyValidationErrors: {[source: string]: ValidationFailure[]} = {};\r\n\r\n  constructor(\r\n    private translationService: TranslationService,\r\n    private dialog: MatDialog,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.errorMessagesSubject = new Subject();\r\n    this.errorPropertyMessageSubject = new Subject();\r\n    this.removeFormErrorsSubject = new Subject();\r\n  }\r\n\r\n  showErrorDialog(errs) {\r\n    this.dialog.open(ErrorDialogComponent, {\r\n      data: {errors: errs}, panelClass: 'dialog-error'\r\n    });\r\n  }\r\n\r\n  publishMessages(errors: ValidationFailure[], source?: string) {\r\n\r\n    // TODO: errors with property name 'popup' should not go to propertyvalidators\r\n\r\n    const errorM = new ErrorMessage();\r\n    errorM.source = source;\r\n    errorM.errors = [];\r\n\r\n    const ex = this.propertyValidationErrors[source];\r\n    if (ex !== undefined) {\r\n      const becameValid = [];\r\n      const stillInvalid = [];\r\n      for (let index = 0; index < ex.length; index++) {\r\n        const element = ex[index];\r\n        const stillInvalidProperty = errors.find(x => x.propertyName === element.propertyName);\r\n        if (stillInvalidProperty !== undefined) {\r\n          stillInvalidProperty.isCleanup = false;\r\n          stillInvalid.push(stillInvalidProperty);\r\n        } else {\r\n          element.isCleanup = true;\r\n          becameValid.push(element);\r\n        }\r\n      }\r\n\r\n      for (let index = 0; index < errors.length; index++) {\r\n        const element = errors[index];\r\n        const newError = ex.find(x => x.propertyName === element.propertyName);\r\n        if (newError === undefined) {\r\n          element.isCleanup = false;\r\n          stillInvalid.push(element);\r\n        }\r\n      }\r\n\r\n      this.propertyValidationErrors[source] = stillInvalid;\r\n      for (let index = 0; index < becameValid.length; index++) {\r\n        const element = becameValid[index];\r\n        this.publishPropertyMessage(element);\r\n      }\r\n\r\n    } else {\r\n      for (let index = 0; index < errors.length; index++) {\r\n        const element = errors[index];\r\n        element.isCleanup = false;\r\n      }\r\n      this.propertyValidationErrors[source] = errors;\r\n    }\r\n\r\n    for (let index = 0; index < this.propertyValidationErrors[source].length; index++) {\r\n      const element = this.propertyValidationErrors[source][index];\r\n      this.publishPropertyMessage(element);\r\n    }\r\n\r\n    const generalErrors = errors.filter(x => x.propertyName === 'popup');\r\n    for (let index = 0; index < generalErrors.length; index++) {\r\n      const element = generalErrors[index];\r\n      errorM.errors.push(...element.errorMessage.split('###'));\r\n      // errorM.errors.push(element.errorMessage);\r\n    }\r\n\r\n    if (this.propertyValidationErrors[source].length > 0 && generalErrors.length === 0 && source !== 'login') {\r\n      this.snackBar.open(this.translationService.getForKey('There were errors!'), null, {\r\n        duration: 2000,\r\n        verticalPosition: 'top',\r\n        panelClass: 'danger'\r\n      });\r\n    }\r\n    this.errorMessagesSubject.next(errorM);\r\n  }\r\n\r\n  clearMessages(source: string) {\r\n    const errorM = new ErrorMessage();\r\n    errorM.source = source;\r\n    errorM.isCleanup = true;\r\n    this.errorMessagesSubject.next(errorM);\r\n  }\r\n\r\n  publishPropertyMessage(validationMessage: ValidationFailure) {\r\n    this.errorPropertyMessageSubject.next(validationMessage);\r\n  }\r\n}\r\n","import { Directive, TemplateRef, ViewContainerRef, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, ValidationErrors } from '@angular/forms';\r\nimport { ErrorMessagesService } from '../services/error-messages.service';\r\nimport { Utils } from '../extensions/utils';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'form[formValidator]'\r\n})\r\nexport class FormValidatorDirective implements OnInit {\r\n\r\n  constructor(\r\n    public form: NgForm,\r\n    private errorService: ErrorMessagesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.errorService.errorPropertyMessageSubject.subscribe(x => {\r\n      if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === false) {\r\n        const control = this.form.form.get(x.propertyName);\r\n        control.setErrors({incorrect: true});\r\n        control.markAsDirty();\r\n        control.markAsTouched();\r\n      } else if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === true)\r\n        this.form.form.setErrors(null);\r\n    });\r\n    this.errorService.removeFormErrorsSubject.subscribe(x => {\r\n      this.form.form.setErrors(null);\r\n    });\r\n  }\r\n}\r\n","import { Directive, Input, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[numberFormatter]'\r\n})\r\nexport class NumberFormatterDirective {\r\n\r\n  regexStr = '^[0-9]*$';\r\n  @Input() isAlphaNumeric: boolean;\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n\r\n  @HostListener('keypress', ['$event']) onKeyPress(event) {\r\n    return new RegExp(this.regexStr).test(event.key);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { Utils } from '../extensions/utils';\r\n\r\n@Pipe({\r\n  name: 'booleanEvaluateStatusToString'\r\n})\r\nexport class BooleanEvaluateStatusToStringPipe implements PipeTransform {\r\n\r\n  constructor(private translationService: TranslationService) {\r\n  }\r\n\r\n  transform(value: boolean, args?: any): any {\r\n    if (Utils.isNullEmptyOrUndefined(value))\r\n      return '-';\r\n\r\n    const key = value ? 'Evaluated (accepted)' : 'Evaluated (rejected)';\r\n    return this.translationService.getForKey(key);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslationService } from '../services/translation.service';\r\n\r\n@Pipe({\r\n  name: 'booleanToYesNo'\r\n})\r\nexport class BooleanToYesNoPipe implements PipeTransform {\r\n\r\n    constructor(private translationService: TranslationService) {\r\n    }\r\n\r\n    transform(value: boolean, args?: any): any {\r\n        const key = value ? 'Yes' : 'No';\r\n        return this.translationService.getForKey(key);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { Utils } from '../extensions/utils';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { shareReplay, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClassificationService {\r\n\r\n  private classificationCache: {[key: string]: Observable<any[]>};\r\n  private classificationValueCache: {[key: string]: Observable<any>};\r\n\r\n  constructor(private apiService: ApiService) {\r\n    this.classificationCache = {};\r\n    this.classificationValueCache = {};\r\n  }\r\n\r\n  getClassificationValues(classificationName: string, classificationModel?: string, volatile = false): Observable<any> {\r\n    if (Utils.isNullEmptyOrUndefined(classificationName))\r\n      return;\r\n    else {\r\n      if (Utils.isNullEmptyOrUndefined(classificationModel))\r\n        classificationModel = '';\r\n        else\r\n        classificationModel = '?model=' + classificationModel;\r\n\r\n      const key = classificationName + classificationModel;\r\n\r\n      if (volatile === true)\r\n        return this.apiService.get('common', 'GetClassification/' + classificationName + classificationModel);\r\n\r\n      if (this.classificationCache[key] === undefined)\r\n        this.classificationCache[key]\r\n        = this.apiService.get('common', 'GetClassification/' + classificationName + classificationModel).pipe(shareReplay(1));\r\n\r\n      return this.classificationCache[key];\r\n    }\r\n  }\r\n\r\n  getGroupedClassificationValues(classificationName: string, classificationModel?: string, volatile = false): Observable<any> {\r\n    if (Utils.isNullEmptyOrUndefined(classificationName))\r\n      return;\r\n    else {\r\n      if (Utils.isNullEmptyOrUndefined(classificationModel))\r\n        classificationModel = '';\r\n        else\r\n        classificationModel = '?model=' + classificationModel;\r\n\r\n      const key = classificationName + classificationModel;\r\n\r\n      if (volatile === true)\r\n        return this.apiService.get('common', 'GetGroupedClassification/' + classificationName + classificationModel);\r\n\r\n      if (this.classificationCache[key] === undefined)\r\n        this.classificationCache[key]\r\n        = this.apiService.get('common', 'GetGroupedClassification/' + classificationName + classificationModel).pipe(shareReplay(1));\r\n\r\n      return this.classificationCache[key];\r\n    }\r\n  }\r\n  getClassificationValue(valueId: string) {\r\n    if (Utils.isNullEmptyOrUndefined(valueId))\r\n      return of('-');\r\n    const key = valueId;\r\n    if (this.classificationValueCache[key] === undefined) {\r\n      const httpParams = new HttpParams().set('valueId', '' + valueId);\r\n      this.classificationValueCache[key]\r\n      = this.apiService.get('common', 'getClassificationValue', httpParams).pipe(shareReplay(1), switchMap(x => {\r\n        if (x === undefined || x === null || x.value === undefined) return '';\r\n        return of(x);\r\n      }));\r\n    }\r\n\r\n    // const httpParams = new HttpParams().set('valueId', '' + valueId);\r\n    // return this.apiService.get('common', 'getClassificationValue', httpParams);\r\n    return this.classificationValueCache[key];\r\n\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ClassificationService } from '../services/classification-service.service';\r\n\r\n@Pipe({\r\n  name: 'classificationValueGet'\r\n})\r\nexport class ClassificationValueGet implements PipeTransform {\r\n\r\n  constructor(private classificationService: ClassificationService) {\r\n  }\r\n  transform(value: any, args?: any): any {\r\n    if (value === undefined || value === null || typeof(value) === 'object') return '';\r\n\r\n    return this.classificationService.getClassificationValue(value);\r\n\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslatePipe } from './translate.pipe';\r\nimport { TranslationService } from '../services/translation.service';\r\n\r\n@Pipe({\r\n  name: 'classificationValue'\r\n})\r\nexport class ClassificationValuePipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    if (value === undefined || value === null || value.value === undefined || value.value === null) return '-';\r\n\r\n    return value.value.caption;\r\n  }\r\n\r\n}\r\n","// @dynamic\r\nexport class Constants {\r\n  static currencyCodes = {\r\n    941: 'RSD',\r\n    978: 'EUR',\r\n    840: 'USD',\r\n    826: 'GBP'};\r\n  static quantityCodes = {\r\n    1: 'pcs',\r\n    2: 'pack',\r\n    3: 'kg'\r\n  };\r\n\r\n  static readonly DATE_FMT = 'd.M.yyyy';\r\n  static readonly DATE_TIME_FMT = `${Constants.DATE_FMT} H:mm`;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Constants } from '../extensions/constants';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { Utils } from '../extensions/utils';\r\nimport { CurrencyAmount } from '../POCO/currencyAmount';\r\n\r\n@Pipe({\r\n  name: 'currencyAmmount'\r\n})\r\nexport class CurrencyPipe implements PipeTransform {\r\n  private decimalPipe = new DecimalPipe('sr-Latn-ME');\r\n\r\n  transform(value: CurrencyAmount, args?: any): any {\r\n    if (Utils.isNullEmptyOrUndefined(value) || Utils.isNullEmptyOrUndefined(value.amount)) return '';\r\n    let v = '' + this.decimalPipe.transform(value.amount, '1.2-2');\r\n    if (!Utils.isNullEmptyOrUndefined(value.currencyCode))\r\n      v += ' ' + (Constants.currencyCodes[value.currencyCode] !== undefined ? Constants.currencyCodes[value.currencyCode] : '');\r\n\r\n    return v;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Constants } from '../extensions/constants';\r\n\r\n@Pipe({\r\n  name: 'dateTimeFormat'\r\n})\r\nexport class DateTimeFormatPipe extends DatePipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    return super.transform(value, Constants.DATE_TIME_FMT);\r\n  }\r\n\r\n}\r\n","import { Utils } from './../extensions/utils';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'emptyStringToDefault'\r\n})\r\nexport class EmptyStringToDefaultPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    // if (value === undefined || value === null || value.value === undefined || value.value === null) return '-';\r\n    // return value.value.caption;\r\n    if (Utils.isNullEmptyOrUndefined(value)) return '-';\r\n    return value;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from '../services/translation.service';\n\n@Pipe({\n  name: 'lifecycleStatus'\n})\nexport class LifecycleStatusPipe implements PipeTransform {\n  statuses = {\n    1: 'Ready',\n    2: 'Active',\n    4: 'Canceled',\n    8: 'Completed',\n    16: 'Terminated',\n    32: 'Suspend',\n    64: 'Published',\n    128: 'Deleted',\n    256: 'Deactivated',\n    512: 'PublishPending'\n  };\n\n  constructor() {\n  }\n  transform(value: any, args?: any): any {\n    const status = this.statuses[value];\n    if (status === undefined)\n      return value;\n    return status;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Constants } from '../extensions/constants';\r\nimport { Quantity } from '../POCO/Quantity';\r\n\r\n@Pipe({\r\n  name: 'quantity'\r\n})\r\nexport class QuantityPipe implements PipeTransform {\r\n\r\n  transform(value: Quantity, args?: any): any {\r\n    let v = '' + value.amount;\r\n    if (value.unitOfMeasure !== undefined)\r\n      v += ' ' + value.unitOfMeasure;\r\n    return v;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TranslationService } from '../services/translation.service';\r\nimport { Utils } from '../extensions/utils';\r\n\r\n@Pipe({\r\n  name: 'translate'\r\n})\r\nexport class TranslatePipe implements PipeTransform {\r\n\r\n  constructor(private translationService: TranslationService) {\r\n  }\r\n\r\n  transform(value: any, args?: any, byObject?: any): any {\r\n    if (args === undefined || args === null)\r\n      return;\r\n\r\n    if (!Utils.isNullEmptyOrUndefined(byObject))\r\n       return this.translationService.getForKeyByObject(value);\r\n\r\n      // console.log(value);\r\n    return this.translationService.getForKey(value);\r\n  }\r\n\r\n}\r\n","import { Directive, OnInit, Input, ElementRef, HostListener } from '@angular/core';\r\nimport { NgModel } from '@angular/forms';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { tap, map } from 'rxjs/operators';\r\nimport { Utils } from '../../extensions/utils';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[decimalFormatter][ngModel]',\r\n  providers: [NgModel]\r\n})\r\nexport class DecimalFormatterDirective implements OnInit {\r\n\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('decimals') decimals: string;\r\n  locale = 'sr-Latn-ME';\r\n  decimalFormatPipe: DecimalPipe;\r\n  lastValue: any;\r\n  rgx = /^\\d*((\\,|\\.)\\d*)?(?!\\w)$/g;\r\n\r\n  private el: HTMLInputElement;\r\n  constructor(\r\n            private elementRef: ElementRef,\r\n            private ngModel: NgModel\r\n  ) {\r\n    this.el = this.elementRef.nativeElement;\r\n    this.decimalFormatPipe = new DecimalPipe('sr-Latn-ME');\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    if (this.decimals == null)\r\n      this.decimals = '1.2-2';\r\n\r\n    this.el.value = this.decimalFormatPipe.transform(this.el.value, this.decimals, this.locale);\r\n    if (this.el.value === '0')\r\n      this.el.value = '';\r\n  }\r\n\r\n  @HostListener('focus', ['$event.target.value'])\r\n  onFocus(value) {\r\n      this.el.value = this.ngModel.viewModel;\r\n      this.lastValue = this.ngModel.viewModel;\r\n  }\r\n\r\n  @HostListener('blur', ['$event.target.value'])\r\n  onBlur(value) {\r\n    try {\r\n      this.ngModel.viewModel = this.el.value;\r\n      const nocomma = this.el.value.replace(',', '.');\r\n      this.el.value = this.decimalFormatPipe.transform(nocomma, this.decimals, this.locale);\r\n    } catch (ex) {\r\n      if (!Utils.isNullEmptyOrUndefined(this.lastValue) && Utils.regexMatch(this.rgx, this.lastValue)) {\r\n        this.el.value = this.decimalFormatPipe.transform(this.lastValue, this.decimals, this.locale);\r\n        this.ngModel.viewModel = this.lastValue;\r\n      }\r\n    }\r\n  }\r\n  @HostListener('keydown', ['$event'])\r\n  onKeyPress(event) {\r\n      this.lastValue = Utils.deepClone(event.target.value);\r\n      if ((event.code === 'Comma' && this.lastValue.indexOf(',') === -1)\r\n        || event.code === 'Delete' || event.code === 'Backspace' || !RegExp(/\\D/).test(event.key)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n}\r\n","import { Directive, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { MatAutocomplete } from '@angular/material';\r\nimport { Subject } from 'rxjs';\r\nimport { tap, takeUntil } from 'rxjs/operators';\r\nimport { Utils } from '../../extensions/utils';\r\n\r\nexport interface IAutoCompleteScrollEvent {\r\n  autoComplete: MatAutocomplete;\r\n  scrollEvent: Event;\r\n}\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'mat-autocomplete[optionsScroll]'\r\n})\r\nexport class OptionsScrollDirective implements OnDestroy {\r\n\r\n\r\n  @Input() tressholdPercent = 0.8;\r\n  // tslint:disable-next-line:no-output-rename\r\n  @Output('optionsScroll') scroll = new EventEmitter<IAutoCompleteScrollEvent>();\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  _onDestroy = new Subject();\r\n  constructor(public autoComplete: MatAutocomplete) {\r\n    this.autoComplete.opened.pipe(\r\n      tap(() => {\r\n        setTimeout(() => {\r\n          this.removeScrollEventListener();\r\n          this.autoComplete.panel.nativeElement.addEventListener('scroll', this.onScroll.bind(this));\r\n        }, 1);\r\n      }),\r\n      takeUntil(this._onDestroy)\r\n    ).subscribe();\r\n\r\n    this.autoComplete.closed.pipe(\r\n      tap(() => this.removeScrollEventListener()),\r\n      takeUntil(this._onDestroy)).subscribe();\r\n  }\r\n  private removeScrollEventListener() {\r\n    if (!Utils.isNullEmptyOrUndefined(this.autoComplete.panel))\r\n      this.autoComplete.panel.nativeElement\r\n        .removeEventListener('scroll', this.onScroll);\r\n  }\r\n  ngOnDestroy(): void {\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n    this.removeScrollEventListener();\r\n  }\r\n\r\n  onScroll(event: Event) {\r\n    if (this.tressholdPercent === undefined)\r\n      this.scroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\r\n    else {\r\n      const tress = this.tressholdPercent * 100 * this.autoComplete.panel.nativeElement.scrollHeight / 100;\r\n      const current = this.autoComplete.panel.nativeElement.scrollTop + this.autoComplete.panel.nativeElement.clientHeight;\r\n\r\n      if (current > tress)\r\n        this.scroll.next({ autoComplete: this.autoComplete, scrollEvent: event });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule\n  , MatListModule, MatFormFieldModule, MatInputModule, MatButtonToggleModule\n  , MatChipsModule, MatBadgeModule, MatSlideToggleModule, MatCardModule, MatMenuModule\n  , MatDividerModule, MatProgressSpinnerModule, MatRadioModule, MatCheckboxModule\n  , MatGridListModule, MatTooltipModule, MatExpansionModule, MatSelectModule, MatDatepickerModule\n  , MatProgressBarModule, MatSliderModule, MatStepperModule, MatDialogModule, MatTabsModule\n  , MatNativeDateModule, MatSnackBarModule, MatTableModule, MatPaginatorModule, MatSortModule\n  , MatAutocompleteModule, MatTreeModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n\n\n\n@NgModule({\n  declarations: [],\n  exports: [\n      MatToolbarModule,\n      MatButtonModule,\n      MatSidenavModule,\n      MatIconModule,\n      MatListModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatButtonToggleModule,\n      MatChipsModule,\n      MatBadgeModule,\n      MatSlideToggleModule,\n      MatCardModule,\n      MatMenuModule,\n      MatDividerModule,\n      MatProgressSpinnerModule,\n      MatRadioModule,\n      MatCheckboxModule,\n      MatGridListModule,\n      MatTooltipModule,\n      MatExpansionModule,\n      MatSelectModule,\n      MatDatepickerModule,\n      MatProgressBarModule,\n      MatSliderModule,\n      MatStepperModule,\n      MatDialogModule,\n      MatTabsModule,\n      MatNativeDateModule,\n      FlexLayoutModule,\n      MatSnackBarModule,\n      FormsModule,\n      ReactiveFormsModule,\n      MatTableModule,\n      MatPaginatorModule,\n      MatSortModule,\n      MatChipsModule,\n      MatAutocompleteModule,\n      MatTreeModule,\n      DragDropModule,\n      ScrollingModule\n  ]\n})\nexport class MaterialModule { }\n","import { Injectable, TemplateRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ActionsRibbonService {\r\n\r\n  infoTemplate: TemplateRef<any>;\r\n  actionsTemplate: TemplateRef<any>;\r\n  spacerTemplate: TemplateRef<any>;\r\n  actionsContextTemplate: TemplateRef<any>;\r\n\r\n  changeSubject: Subject<any>;\r\n  constructor() {\r\n    this.changeSubject = new Subject();\r\n  }\r\n\r\n  change() {\r\n    this.changeSubject.next();\r\n  }\r\n\r\n  clear() {\r\n    this.infoTemplate = undefined;\r\n    this.actionsTemplate = undefined;\r\n    this.spacerTemplate = undefined;\r\n    this.actionsContextTemplate = undefined;\r\n    this.change();\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ActionsRibbonService } from '../../services/actions-ribbon.service';\r\n\r\n@Component({\r\n  selector: 'app-actions-ribbon',\r\n  templateUrl: './actions-ribbon.component.html',\r\n  styleUrls: ['./actions-ribbon.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ActionsRibbonComponent implements OnInit {\r\n\r\n  constructor(\r\n    public actionsRibbonService: ActionsRibbonService,\r\n    private cd: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.actionsRibbonService.changeSubject.subscribe(x => {\r\n      this.cd.markForCheck();\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Utils } from '../../extensions/utils';\r\nimport { Subject } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-base-selected-tab',\r\n  template: `\r\n    <p>\r\n      NO UI TO BE FOUND HERE!\r\n    </p>\r\n  `,\r\n  styleUrls: ['./base-selected-tab.component.css']\r\n})\r\nexport class BaseSelectedTabComponent implements OnInit {\r\n\r\n  tabSelectedIndex: any;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n              private route: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  setUpTab() {\r\n    this.activatedRoute.queryParams.subscribe((params) => {\r\n      if (params.tab) {\r\n        this.tabSelectedIndex = +params.tab;\r\n        this.route.navigate([], {\r\n          queryParams: {\r\n            tab: null,\r\n          },\r\n          queryParamsHandling: 'merge',\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  navigateToTabWithSubject(selectedIndex, tabSubjects?: Subject<any>[]) {\r\n    tabSubjects[selectedIndex].next();\r\n    // tabSubjects[selectedIndex].complete();\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Optional } from '@angular/core';\nimport { FormControl, NgForm } from '@angular/forms';\nimport { ClassificationService } from '../../services/classification-service.service';\nimport { TranslationService } from '../../services/translation.service';\nimport { ErrorMessagesService } from '../../services/error-messages.service';\nimport { Utils } from '../../extensions/utils';\n\n@Component({\n  selector: 'app-classification-group-input',\n  templateUrl: './classification-group-input.component.html',\n  styleUrls: ['./classification-group-input.component.css']\n})\nexport class ClassificationGroupInputComponent implements OnInit {\n\n  @Input() classificationValueId: number;\n  @Input() classificationName: string;\n  @Input() classificationModel: string;\n  @Input() placeholder: string;\n  @Input() isVolatile: boolean;\n  @Input() propertyName: string;\n  @Input() selectedValue: string;\n  @Input() disabled: boolean;\n  @Input() ngFormObject: NgForm;\n\n  hasErrors: boolean;\n  groups: {options: any[], description: string, id: number}[];\n  options: any[];\n  defaultValue: any;\n  helperValue: any;\n  ngControl: FormControl;\n  form: NgForm;\n\n  @Output() classificationValueIdChange: EventEmitter<any>;\n  @Output() objectClassificationValueChange: EventEmitter<any>;\n\n  constructor(\n    private classificationService: ClassificationService,\n    public translationService: TranslationService,\n    private errorMessageService: ErrorMessagesService,\n    @Optional() private formObject: NgForm) {\n    this.classificationValueIdChange = new EventEmitter<any>();\n    this.objectClassificationValueChange = new EventEmitter<any>();\n  }\n\n  ngOnInit() {\n    // tslint:disable-next-line:max-line-length\n    this.classificationService.getGroupedClassificationValues(this.classificationName, this.classificationModel, this.isVolatile).subscribe(x => {\n      let vals = [];\n      for (let index = 0; index < x.value.length; index++) {\n        const element = x.value[index];\n        vals = [...vals, ...element.options];\n      }\n      this.options = vals;\n\n      this.defaultValue = this.options.find(y => y.isDefaultValue === true);\n      this.groups = x.value;\n\n      if (!Utils.isNullEmptyOrUndefined(this.classificationValueId)) {\n\n        const exValue = this.options.find(y => '' + y.id === '' + this.classificationValueId);\n        if (exValue !== undefined) {\n          this.classificationValueId = exValue.id;\n          this.objectClassificationValueChange.emit(exValue);\n        } else {\n          this.classificationValueId = undefined;\n          this.classificationValueIdChange.emit(this.classificationValueId);\n        }\n      } else if (!Utils.isNullEmptyOrUndefined(this.selectedValue)) {\n        const exValue = this.options.find(y => '' + y.value === '' + this.selectedValue);\n        if (exValue !== undefined) {\n          this.classificationValueId = exValue.id;\n          this.objectClassificationValueChange.emit(exValue);\n        }\n      } else if (!Utils.isNullEmptyOrUndefined(this.defaultValue)) {\n        this.classificationValueId = this.defaultValue.id;\n        this.objectClassificationValueChange.emit(this.defaultValue);\n      }\n\n      if (this.disabled === undefined)\n        this.disabled = false;\n    });\n\n    if (this.propertyName === undefined)\n      this.propertyName = Utils.newTechnicalNumber();\n\n    if (Utils.isNullEmptyOrUndefined(this.ngFormObject))\n        this.form = this.ngFormObject;\n    if (Utils.isNullEmptyOrUndefined(this.form)) {\n        this.form = this.formObject;\n      }\n\n    this.ngControl = new FormControl();\n    if (this.form !== undefined && this.form !== null && this.propertyName !== undefined)\n      this.form.form.addControl(this.propertyName, this.ngControl);\n\n    this.errorMessageService.errorPropertyMessageSubject.subscribe(x => {\n      if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === false) {\n        this.form.form.get(x.propertyName).setErrors({ incorrect: true });\n        this.hasErrors = true;\n      } else if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === true) {\n        this.hasErrors = false;\n        this.form.form.get(x.propertyName).setErrors(null);\n      }\n    });\n    this.errorMessageService.removeFormErrorsSubject.subscribe(x => {\n      this.hasErrors = false;\n      if (!Utils.isNullEmptyOrUndefined(this.form.form.get(this.propertyName) && this.propertyName !== undefined))\n        this.form.form.get(this.propertyName).setErrors(null);\n    });\n  }\n\n  change(event) {\n    this.classificationValueId = event.value;\n    this.classificationValueIdChange.emit(this.classificationValueId);\n\n    const exValue = this.options.find(y => '' + y.id === '' + this.classificationValueId);\n    if (exValue !== undefined)\n      this.objectClassificationValueChange.emit(exValue);\n    const pname = this.propertyName;\n    this.form.form.markAsDirty();\n    this.form.form.patchValue({pname: this.classificationValueId});\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, Optional } from '@angular/core';\r\nimport { ClassificationService } from '../../services/classification-service.service';\r\nimport { Utils } from '../../extensions/utils';\r\nimport { TranslationService } from '../../services/translation.service';\r\nimport { FormControl, NgForm } from '@angular/forms';\r\nimport { ErrorMessagesService } from '../../services/error-messages.service';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-classification-input',\r\n  templateUrl: './classification-input.component.html',\r\n  styleUrls: ['./classification-input.component.css']\r\n})\r\nexport class ClassificationInputComponent implements OnInit {\r\n\r\n  @Input() classificationValueId: number;\r\n  @Input() classificationName: string;\r\n  @Input() classificationModel: string;\r\n  @Input() placeholder: string;\r\n  @Input() isVolatile: boolean;\r\n  @Input() propertyName: string;\r\n  @Input() selectedValue: string;\r\n  @Input() disabled: boolean;\r\n  @Input() resetToDefault: Subject<any>;\r\n  @Input() ngFormObject: NgForm;\r\n\r\n  hasErrors: boolean;\r\n  options: any[];\r\n  defaultValue: any;\r\n  helperValue: any;\r\n  ngControl: FormControl;\r\n  form: NgForm;\r\n\r\n  @Output() classificationValueIdChange: EventEmitter<any>;\r\n  @Output() objectClassificationValueChange: EventEmitter<any>;\r\n\r\n  constructor(\r\n    private classificationService: ClassificationService,\r\n    public translationService: TranslationService,\r\n    private errorMessageService: ErrorMessagesService,\r\n    @Optional() private formObject: NgForm) {\r\n    this.classificationValueIdChange = new EventEmitter<any>();\r\n    this.objectClassificationValueChange = new EventEmitter<any>();\r\n\r\n    if (Utils.isNullEmptyOrUndefined(this.ngFormObject))\r\n      this.form = this.ngFormObject;\r\n    if (Utils.isNullEmptyOrUndefined(this.form)) {\r\n      this.form = this.formObject;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.classificationService.getClassificationValues(this.classificationName, this.classificationModel, this.isVolatile).subscribe(x => {\r\n      this.defaultValue = x.value.find(y => y.isDefaultValue === true);\r\n      this.options = x.value;\r\n\r\n      if (!Utils.isNullEmptyOrUndefined(this.classificationValueId)) {\r\n        const exValue = this.options.find(y => '' + y.id === '' + this.classificationValueId);\r\n        if (exValue !== undefined) {\r\n          this.classificationValueId = exValue.id;\r\n          this.classificationValueIdChange.emit(exValue.id);\r\n          this.objectClassificationValueChange.emit(exValue);\r\n        } else {\r\n          this.classificationValueId = undefined;\r\n          this.classificationValueIdChange.emit(undefined);\r\n          this.classificationValueIdChange.emit(this.classificationValueId);\r\n        }\r\n      } else if (!Utils.isNullEmptyOrUndefined(this.selectedValue)) {\r\n        const exValue = this.options.find(y => '' + y.value === '' + this.selectedValue);\r\n        if (exValue !== undefined) {\r\n          this.classificationValueId = exValue.id;\r\n          this.classificationValueIdChange.emit(exValue.id);\r\n          this.objectClassificationValueChange.emit(exValue);\r\n        }\r\n      } else if (!Utils.isNullEmptyOrUndefined(this.defaultValue)) {\r\n        this.classificationValueId = this.defaultValue.id;\r\n        this.objectClassificationValueChange.emit(this.defaultValue);\r\n        const pName = this.propertyName;\r\n        this.form.form.patchValue({pName: this.defaultValue.id});\r\n      }\r\n\r\n\r\n      if (this.disabled === undefined)\r\n        this.disabled = false;\r\n    });\r\n\r\n    if (this.propertyName === undefined)\r\n      this.propertyName = Utils.newTechnicalNumber();\r\n\r\n    this.ngControl = new FormControl();\r\n\r\n\r\n    if (this.form !== undefined && this.form !== null && this.propertyName !== undefined)\r\n      this.form.form.addControl(this.propertyName, this.ngControl);\r\n\r\n    this.errorMessageService.errorPropertyMessageSubject.subscribe(x => {\r\n      if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === false) {\r\n        this.form.form.get(x.propertyName).setErrors({ incorrect: true });\r\n        this.hasErrors = true;\r\n      } else if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === true) {\r\n        this.hasErrors = false;\r\n        this.form.form.get(x.propertyName).setErrors(null);\r\n      }\r\n    });\r\n    this.errorMessageService.removeFormErrorsSubject.subscribe(x => {\r\n      this.hasErrors = false;\r\n      if (!Utils.isNullEmptyOrUndefined(this.form.form.get(this.propertyName) && this.propertyName !== undefined))\r\n        this.form.form.get(this.propertyName).setErrors(null);\r\n    });\r\n    if (this.resetToDefault !== undefined) {\r\n      this.resetToDefault.subscribe(x => {\r\n        if (!Utils.isNullEmptyOrUndefined(this.defaultValue)) {\r\n          this.classificationValueId = this.defaultValue.id;\r\n          this.classificationValueIdChange.emit(this.defaultValue.id);\r\n          this.objectClassificationValueChange.emit(this.defaultValue);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  change(event) {\r\n    this.classificationValueId = event.value;\r\n    this.classificationValueIdChange.emit(this.classificationValueId);\r\n\r\n    const exValue = this.options.find(y => '' + y.id === '' + this.classificationValueId);\r\n    if (exValue !== undefined)\r\n      this.objectClassificationValueChange.emit(exValue);\r\n    const pname = this.propertyName;\r\n    this.form.form.markAsDirty();\r\n    this.form.form.patchValue({pname: this.classificationValueId});\r\n\r\n  }\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { ClassificationService } from '../../services/classification-service.service';\r\nimport { Utils } from '../../extensions/utils';\r\nimport { FormControl, NgForm } from '@angular/forms';\r\nimport { ErrorMessagesService } from '../../services/error-messages.service';\r\nimport { CurrencyAmount } from '../../POCO/currencyAmount';\r\n\r\n@Component({\r\n  selector: 'app-currency-amount',\r\n  templateUrl: './currency-amount.component.html',\r\n  styleUrls: ['./currency-amount.component.css']\r\n})\r\nexport class CurrencyAmountComponent implements OnInit {\r\n\r\n  @Input() currencyAmount: CurrencyAmount;\r\n  @Input() isReadOnly: boolean;\r\n  @Input() placeholder: string;\r\n  @Input() propertyName: string;\r\n  @Input() showCurrency = true;\r\n  @Input() ngFormObject: NgForm;\r\n  @Output() currencyAmountChange = new EventEmitter<CurrencyAmount>();\r\n\r\n  currencies = [];\r\n  form: NgForm;\r\n\r\n  ngControlAmount: FormControl;\r\n  ngControlCurrency: FormControl;\r\n\r\n  constructor(\r\n    private classificationService: ClassificationService,\r\n    private errorMessageService: ErrorMessagesService,\r\n    private formObject: NgForm) {\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.propertyName === undefined)\r\n      this.propertyName = Utils.newTechnicalNumber();\r\n\r\n    if (Utils.isNullEmptyOrUndefined(this.ngFormObject))\r\n      this.form = this.ngFormObject;\r\n\r\n    if (Utils.isNullEmptyOrUndefined(this.form)) {\r\n      this.form = this.formObject;\r\n    }\r\n\r\n    this.ngControlAmount = new FormControl();\r\n    this.ngControlCurrency = new FormControl();\r\n    if (this.form !== undefined) {\r\n      this.form.form.addControl(this.propertyName + 'Amount', this.ngControlAmount);\r\n      this.form.form.addControl(this.propertyName + 'CurrencyCode', this.ngControlCurrency);\r\n    }\r\n    this.getCurrency();\r\n   }\r\n\r\n  getCurrency() {\r\n    this.classificationService.getClassificationValues('ShortCurrency').subscribe(x => {\r\n      if (Utils.isNullEmptyOrUndefined(x) || Utils.isNullEmptyOrUndefined(x.value))\r\n        return;\r\n      this.currencies = x.value;\r\n      const defaultCurrency = this.currencies.find(y => y.isDefaultValue === true);\r\n      this.currencyAmount.currencyCode = defaultCurrency.value;\r\n      this.currencyAmountChange.emit(this.currencyAmount);\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { ErrorMessagesService } from '../../services/error-messages.service';\r\nimport { Utils } from '../../extensions/utils';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ErrorDialogComponent } from './error-dialog/error-dialog.component';\r\nimport { ErrorMessage } from '../../poco/errorMessage';\r\n\r\n@Component({\r\n  selector: 'app-error-display',\r\n  templateUrl: './error-display.component.html',\r\n  styleUrls: ['./error-display.component.css']\r\n})\r\nexport class ErrorDisplayComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  @Input() errors: string[];\r\n  @Input() source: string;\r\n  @Input() showDialog = false;\r\n\r\n  sources: string[];\r\n  subscription: Subject<ErrorMessage>;\r\n  subscriptionSubscriber: Subscription;\r\n  constructor(private errorService: ErrorMessagesService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    if (!Utils.isNullEmptyOrUndefined(this.source)) {\r\n      this.sources = [];\r\n      this.source = this.source.toLowerCase();\r\n      this.sources = this.source.split(',');\r\n    }\r\n\r\n    // tslint:disable-next-line: max-line-length\r\n    // if (Utils.isNullEmptyOrUndefined(this.errorService.errorMessagesSubject.observers) || this.errorService.errorMessagesSubject.observers.length < 1)\r\n    this.subscriptionSubscriber = this.errorService.errorMessagesSubject.subscribe(x => {\r\n        if (this.sources !== undefined) {\r\n          const myErrors = this.sources.find(y => y === x.source);\r\n          if (myErrors !== undefined)\r\n            if (x.isCleanup === true)\r\n              this.errors = [];\r\n            else\r\n              // this.errors = x.errors;\r\n              if (this.showDialog && x.errors !== undefined && x.errors.length > 0)\r\n                this.dialog.open(ErrorDialogComponent, {\r\n                  data: {errors: x.errors}, panelClass: 'dialog-error'\r\n                });\r\n              else this.errors = x.errors;\r\n        } else\r\n          this.errors = x.errors;\r\n      });\r\n  }\r\n  ngOnDestroy(): void {\r\n    if (!this.subscriptionSubscriber.closed)\r\n      this.subscriptionSubscriber.unsubscribe();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n  selector: 'app-general-error-page',\n  templateUrl: './general-error-page.component.html',\n  styleUrls: ['./general-error-page.component.css']\n})\nexport class GeneralErrorPageComponent implements OnInit {\n\n  constructor(public translationService: TranslationService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ErrorMessagesService } from '../../services/error-messages.service';\r\n\r\n@Component({\r\n  selector: '[app-input-validation-message]',\r\n  templateUrl: './input-validation-message.component.html',\r\n  styleUrls: ['./input-validation-message.component.css']\r\n})\r\nexport class InputValidationMessageComponent implements OnInit {\r\n\r\n  @Input() propertyName: string;\r\n\r\n  errors: string[];\r\n  constructor(private errorMessageService: ErrorMessagesService) { }\r\n\r\n  ngOnInit() {\r\n    // TODO: fix logic\r\n    this.errorMessageService.errorPropertyMessageSubject.subscribe(x => {\r\n      if (this.propertyName === x.propertyName && x.isCleanup === false)\r\n        this.errors = x.errorMessage.split('###');\r\n      else if (this.propertyName === x.propertyName && x.isCleanup === true)\r\n        this.errors = [];\r\n    });\r\n    this.errorMessageService.removeFormErrorsSubject.subscribe(x => {\r\n      this.errors = [];\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n\n  loadingSubject: Subject<boolean>;\n  moduleLoadingSubject: Subject<boolean>;\n  // timeout: any;\n  constructor() {\n    this.loadingSubject = new Subject();\n    this.moduleLoadingSubject = new Subject();\n  }\n\n  loader(loading) {\n    this.loadingSubject.next(loading);\n    // if (loading === true) {\n    //     this.timeout = setTimeout(() => this.loadingSubject.next(false), 120000);\n    // } else {\n    //   if (this.timeout !== undefined)\n    //     clearTimeout(this.timeout);\n    // }\n  }\n\n  moduleLoading(loading) {\n    this.moduleLoadingSubject.next(loading);\n  }\n}\n","import { Component, OnInit, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { LoadingService } from '../../services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n\r\n  loadingStatus = 0;\r\n  constructor(private loaderService: LoadingService, private cd: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    this.loaderService.loadingSubject.subscribe(x => {\r\n      if (x === true)\r\n        this.loadingStatus++;\r\n      else this.loadingStatus--;\r\n\r\n      if (this.loadingStatus < 0)\r\n        this.loadingStatus = 0;\r\n\r\n      this.cd.markForCheck();\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { TranslationService } from '../../services/translation.service';\r\nimport { Utils } from '../../extensions/utils';\r\n\r\n@Component({\r\n  selector: 'app-notification-dialog-unsaved',\r\n  templateUrl: './notification-dialog-unsaved.component.html',\r\n  styleUrls: ['./notification-dialog-unsaved.component.css']\r\n})\r\nexport class NotificationDialogUnsavedComponent implements OnInit {\r\n\r\n  saveDataText = 'Save data?';\r\n  bodyText = 'You have unsaved changes! Do you want to continue?';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public dialogRef: MatDialogRef<NotificationDialogUnsavedComponent>,\r\n    public translateService: TranslationService) { }\r\n\r\n  ngOnInit() {\r\n    if (!Utils.isNullEmptyOrUndefined(this.data)) {\r\n      if (!Utils.isNullEmptyOrUndefined(this.data.saveDataText))\r\n        this.saveDataText = this.data.saveDataText;\r\n\r\n      if (!Utils.isNullEmptyOrUndefined(this.data.bodyText))\r\n        this.bodyText = this.data.bodyText;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Utils } from '../../extensions/utils';\r\nimport { TranslationService } from '../../services/translation.service';\r\nimport { NgForm, FormControl } from '@angular/forms';\r\nimport { Quantity } from '../../POCO/Quantity';\r\n\r\n@Component({\r\n  selector: 'app-quantity',\r\n  templateUrl: './quantity.component.html',\r\n  styleUrls: ['./quantity.component.css']\r\n})\r\nexport class QuantityComponent implements OnInit {\r\n\r\n  @Input() quantity: Quantity;\r\n  @Input() isReadOnly: boolean;\r\n  @Input() placeholder: string;\r\n  @Input() propertyName: string;\r\n\r\n  ngControlAmount: FormControl;\r\n  ngControlUnitOfMeasure: FormControl;\r\n\r\n  @Output() quantityChange = new EventEmitter<Quantity>();\r\n  units = [];\r\n  constructor(\r\n    public translationService: TranslationService,\r\n    private form: NgForm) { }\r\n\r\n  ngOnInit() {\r\n    this.getUnits();\r\n\r\n    if (this.propertyName === undefined)\r\n      this.propertyName = Utils.newTechnicalNumber();\r\n\r\n    this.ngControlAmount = new FormControl();\r\n    this.ngControlUnitOfMeasure = new FormControl();\r\n    if (this.form !== undefined) {\r\n      this.form.form.addControl(this.propertyName + 'Amount', this.ngControlAmount);\r\n      this.form.form.addControl(this.propertyName + 'UnitOfMeasure', this.ngControlUnitOfMeasure);\r\n    }\r\n\r\n  }\r\n\r\n  getUnits() {\r\n    // this.classificationService.getClassificationValues('Quantity').subscribe(x => {\r\n    //   if (Utils.isNullEmptyOrUndefined(x) || Utils.isNullEmptyOrUndefined(x.value))\r\n    //     return;\r\n    //   this.units = x.value;\r\n    //   const defaultCurrency = this.units.find(y => y.isDefaultValue === true);\r\n    //   if (defaultCurrency !== undefined)\r\n    //     this.quantity.unitOfMeasureId = defaultCurrency.value;\r\n    // });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ISearchParams } from '../interfaces/ISearchParams';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  constructor(private apiService: ApiService) { }\r\n\r\n  search(searchParams: ISearchParams) {\r\n    let params = new HttpParams();\r\n    params = params.append('typeName', searchParams.typename).append('searchTerm', searchParams.searchTerm)\r\n    .append('skip', '' + searchParams.skip).append('top', '' + searchParams.top);\r\n    return this.apiService.get('common', 'search', params);\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { MatAutocomplete, MatAutocompleteTrigger } from '@angular/material';\r\nimport { fromEvent, Subject, merge, forkJoin, of, from } from 'rxjs';\r\nimport { debounceTime, switchMap, distinctUntilChanged, combineLatest, combineAll } from 'rxjs/operators';\r\nimport { SearchService } from '../../services/search.service';\r\nimport { Utils } from '../../extensions/utils';\r\nimport { TranslationService } from '../../services/translation.service';\r\nimport { FormControl, NgForm } from '@angular/forms';\r\nimport { ErrorMessagesService } from '../../services/error-messages.service';\r\n\r\n@Component({\r\n  selector: 'app-typeahead-input',\r\n  templateUrl: './typeahead-input.component.html',\r\n  styleUrls: ['./typeahead-input.component.css']\r\n})\r\nexport class TypeaheadInputComponent implements OnInit {\r\n\r\n  readonly typeaheadSkipValue = 6;\r\n  readonly minNumOfCharToSearch = 3;\r\n\r\n  @Input() typeaheadValue: any;\r\n  @Input() placeholder: string;\r\n  @Input() typename: string;\r\n  @Input() selectedValue: any;\r\n  @Input() filterFormatFn: (value: any) => any;\r\n  @Input() public displayResultFn: (value) => string;\r\n  @Input() propertyName: string;\r\n  @Input() readonly = false;\r\n  @Input() ngFormObject: NgForm;\r\n\r\n  results: any[];\r\n  skip: number;\r\n  top: number;\r\n  currentValue: string;\r\n  hasErrors = false;\r\n  inputChangeSubject: Subject<string>;\r\n  ngControl: FormControl;\r\n  isLoading = false;\r\n  form: NgForm;\r\n\r\n  private nextPage = new Subject();\r\n\r\n  valueChosen = false;\r\n\r\n  @Output() typeaheadValueChange: EventEmitter<any>;\r\n  @Output() typeaheadSelectedValueChange: EventEmitter<any>;\r\n\r\n  @ViewChild('autocomplete', {static: false}) autocomplete: MatAutocomplete;\r\n  @ViewChild(MatAutocompleteTrigger, {static: false}) autocompleteTrigger: MatAutocompleteTrigger;\r\n\r\n  constructor(\r\n    private searchService: SearchService,\r\n    public translateService: TranslationService,\r\n    private formObject: NgForm,\r\n    private errorMessageService: ErrorMessagesService) {\r\n      this.typeaheadValueChange = new EventEmitter();\r\n      this.typeaheadSelectedValueChange = new EventEmitter();\r\n      this.inputChangeSubject = new Subject();\r\n      this.nextPage = new Subject();\r\n      this.skip = 0;\r\n      this.top = this.typeaheadSkipValue;\r\n      this.results = [];\r\n  }\r\n\r\n  ngOnInit() {\r\n    merge(this.inputChangeSubject.pipe(\r\n            debounceTime(400),\r\n            distinctUntilChanged((a, b) => {\r\n              if (b.length < this.minNumOfCharToSearch || a === b)\r\n                return true;\r\n              this.resetFilter();\r\n              return false;\r\n            })),\r\n          this.nextPage.pipe(\r\n            distinctUntilChanged((a, b) => {\r\n              if (a === b)\r\n                return true;\r\n              return false;\r\n            })))\r\n            .pipe(switchMap((x) => {\r\n              if (Utils.isNullEmptyOrUndefined(this.currentValue) || this.currentValue.length < this.minNumOfCharToSearch) {\r\n                this.resetFilter();\r\n                return of({value: []});\r\n              }\r\n              let searchTermJson = null;\r\n              this.isLoading = true;\r\n              if (this.filterFormatFn === undefined)\r\n                searchTermJson = { name: this.currentValue };\r\n              else searchTermJson = this.filterFormatFn(this.currentValue);\r\n              return this.searchService.search({\r\n                typename: this.typename, searchTerm: JSON.stringify(searchTermJson),\r\n                skip: this.skip, top: this.top\r\n              });\r\n            })\r\n          )\r\n    .subscribe(x => {\r\n      if (x.value.length === this.typeaheadSkipValue)\r\n        this.skip += this.typeaheadSkipValue;\r\n\r\n      this.results = [...this.results, ...x.value];\r\n      this.autocomplete.opened.next();\r\n      this.isLoading = false;\r\n    });\r\n\r\n    if (this.propertyName === undefined)\r\n      this.propertyName = Utils.newTechnicalNumber();\r\n\r\n    if (Utils.isNullEmptyOrUndefined(this.ngFormObject))\r\n      this.form = this.ngFormObject;\r\n\r\n    if (Utils.isNullEmptyOrUndefined(this.form)) {\r\n      this.form = this.formObject;\r\n    }\r\n\r\n    this.ngControl = new FormControl();\r\n    if (this.form !== undefined)\r\n      this.form.form.addControl(this.propertyName, this.ngControl);\r\n\r\n    this.errorMessageService.errorPropertyMessageSubject.subscribe(x => {\r\n      if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === false) {\r\n        this.form.form.get(x.propertyName).setErrors({ incorrect: true });\r\n        this.form.form.get(x.propertyName).markAsDirty();\r\n        this.form.form.get(x.propertyName).markAsTouched();\r\n        this.hasErrors = true;\r\n      } else if (!Utils.isNullEmptyOrUndefined(this.form.form.get(x.propertyName)) && x.isCleanup === true) {\r\n        this.hasErrors = false;\r\n        this.form.form.get(x.propertyName).setErrors(null);\r\n      }\r\n    });\r\n\r\n    this.errorMessageService.removeFormErrorsSubject.subscribe(x => {\r\n      this.hasErrors = false;\r\n      if (!Utils.isNullEmptyOrUndefined(this.form.form.get(this.propertyName) && this.propertyName !== undefined))\r\n        this.form.form.get(this.propertyName).setErrors(null);\r\n    });\r\n    if (this.selectedValue !== undefined && this.selectedValue.hasOwnProperty('id'))\r\n      this.valueChosen = true;\r\n  }\r\n\r\n  onScroll() {\r\n    this.nextPage.next(this.skip);\r\n  }\r\n\r\n  search(event) {\r\n    this.currentValue = event.target.value;\r\n\r\n    if (Utils.isNullEmptyOrUndefined(this.currentValue)) {\r\n      this.skip = 0;\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 8 || event.keyCode === 46)\r\n      this.clearSelectedValue();\r\n\r\n    this.inputChangeSubject.next(this.currentValue);\r\n  }\r\n\r\n  optionSelected(event) {\r\n    this.typeaheadValue = event.option.value.id;\r\n    this.selectedValue = event.option.value;\r\n    this.valueChosen = true;\r\n    this.currentValue = this.displayResultFn(event.option.value);\r\n    this.typeaheadSelectedValueChange.emit(this.selectedValue);\r\n    this.typeaheadValueChange.emit(this.typeaheadValue);\r\n    const pname = this.propertyName;\r\n    this.form.form.markAsDirty();\r\n    this.form.form.patchValue({pname: this.typeaheadValue});\r\n  }\r\n\r\n  clearSelectedValue() {\r\n    this.typeaheadValue = undefined;\r\n    this.selectedValue = undefined;\r\n    this.currentValue = '';\r\n    this.valueChosen = false;\r\n    this.typeaheadSelectedValueChange.emit(this.selectedValue);\r\n    this.typeaheadValueChange.emit(this.typeaheadValue);\r\n  }\r\n\r\n  get checkHasValue() {\r\n    return !this.valueChosen\r\n    && (this.selectedValue === undefined || this.selectedValue === null || !this.selectedValue.hasOwnProperty('id'));\r\n  }\r\n  private resetFilter() {\r\n    this.results = [];\r\n    this.skip = 0;\r\n    this.valueChosen = false;\r\n    this.top = this.typeaheadSkipValue;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material/material.module';\nimport { ActionsRibbonComponent } from './components/actions-ribbon/actions-ribbon.component';\nimport { BaseSelectedTabComponent } from './components/base-selected-tab/base-selected-tab.component';\nimport { ClassificationGroupInputComponent } from './components/classification-group-input/classification-group-input.component';\nimport { ClassificationInputComponent } from './components/classification-input/classification-input.component';\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\nimport { CurrencyAmountComponent } from './components/currency-amount/currency-amount.component';\nimport { ErrorDisplayComponent } from './components/error-display/error-display.component';\nimport { GeneralErrorPageComponent } from './components/general-error-page/general-error-page.component';\nimport { InputValidationMessageComponent } from './components/input-validation-message/input-validation-message.component';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { NotificationDialogUnsavedComponent } from './components/notification-dialog-unsaved/notification-dialog-unsaved.component';\nimport { QuantityComponent } from './components/quantity/quantity.component';\nimport { TypeaheadInputComponent } from './components/typeahead-input/typeahead-input.component';\nimport { ConfirmActionDirective } from './directives/confirm-action.directive';\nimport { FormValidatorDirective } from './directives/form-validator.directive';\nimport { NumberFormatterDirective } from './directives/number-formatter.directive';\nimport { BooleanEvaluateStatusToStringPipe } from './pipes/boolean-evaluate-status-to-string.pipe';\nimport { BooleanToYesNoPipe } from './pipes/booleanToYesNo.pipe';\nimport { ClassificationValueGet } from './pipes/classification-value-get.pipe';\nimport { ClassificationValuePipe } from './pipes/classification-value.pipe';\nimport { CurrencyPipe } from './pipes/currency.pipe';\nimport { DateTimeFormatPipe } from './pipes/date-time-format.pipe';\nimport { EmptyStringToDefaultPipe } from './pipes/empty-string-to-default.pipe';\nimport { LifecycleStatusPipe } from './pipes/lifecycle-status.pipe';\nimport { QuantityPipe } from './pipes/quantity.pipe';\nimport { TranslatePipe } from './pipes/translate.pipe';\nimport { ErrorDialogComponent } from './components/error-display/error-dialog/error-dialog.component';\nimport { DecimalFormatterDirective } from './components/currency-amount/decimal-formatter.directive';\nimport { OptionsScrollDirective } from './components/typeahead-input/options-scroll.directive';\n\n@NgModule({\n  declarations: [\n    ActionsRibbonComponent,\n    BaseSelectedTabComponent,\n    ClassificationGroupInputComponent,\n    ClassificationInputComponent,\n    ConfirmDialogComponent,\n    CurrencyAmountComponent,\n    ErrorDisplayComponent,\n    ErrorDialogComponent,\n    GeneralErrorPageComponent,\n    InputValidationMessageComponent,\n    LoaderComponent,\n    NotificationDialogUnsavedComponent,\n    QuantityComponent,\n    TypeaheadInputComponent,\n    ConfirmActionDirective,\n    FormValidatorDirective,\n    NumberFormatterDirective,\n    BooleanEvaluateStatusToStringPipe,\n    BooleanToYesNoPipe,\n    ClassificationValueGet,\n    ClassificationValuePipe,\n    CurrencyPipe,\n    DateTimeFormatPipe,\n    EmptyStringToDefaultPipe,\n    LifecycleStatusPipe,\n    QuantityPipe,\n    TranslatePipe,\n    DecimalFormatterDirective,\n    OptionsScrollDirective\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule\n  ],\n  exports: [\n    ConfirmActionDirective,\n    FormValidatorDirective,\n    NumberFormatterDirective,\n    BooleanEvaluateStatusToStringPipe,\n    BooleanToYesNoPipe,\n    ClassificationValueGet,\n    ClassificationValuePipe,\n    CurrencyPipe,\n    DateTimeFormatPipe,\n    EmptyStringToDefaultPipe,\n    LifecycleStatusPipe,\n    QuantityPipe,\n    TranslatePipe,\n    ActionsRibbonComponent,\n    BaseSelectedTabComponent,\n    ClassificationGroupInputComponent,\n    ClassificationInputComponent,\n    ConfirmDialogComponent,\n    CurrencyAmountComponent,\n    ErrorDisplayComponent,\n    ErrorDialogComponent,\n    GeneralErrorPageComponent,\n    InputValidationMessageComponent,\n    LoaderComponent,\n    NotificationDialogUnsavedComponent,\n    QuantityComponent,\n    TypeaheadInputComponent,\n  ],\n  entryComponents: [\n    ErrorDialogComponent,\n    ConfirmDialogComponent,\n    NotificationDialogUnsavedComponent\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { ICommandContract } from '../interfaces/ICommandContract';\r\nimport { TranslationService } from './translation.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommandService {\r\n\r\n  constructor(private apiService: ApiService, private translateService: TranslationService) { }\r\n\r\n  private locationCache: { [id: string]: any } = {};\r\n  // TODO: write calling query method using ICommandContract\r\n\r\n  public post(zone: string, route: string, contract: ICommandContract) {\r\n    return this.apiService.post(zone, route, undefined, contract);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { HttpParams, HttpClient } from '@angular/common/http';\r\nimport { IQueryContract } from '../interfaces/IQueryContract';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QueryService {\r\n\r\n  constructor(private apiService: ApiService, private http: HttpClient) { }\r\n\r\n  public get(zone: string, route: string, contract: IQueryContract) {\r\n    let params = new HttpParams();\r\n    const vl = Object.entries<any>(contract);\r\n    for (let i = 0; i < vl.length; i++) {\r\n      const val = vl[i];\r\n      params = params.append(val[0], val[1]);\r\n    }\r\n    return this.apiService.get(zone, route, params);\r\n  }\r\n\r\n  public getBlobDocument(zone: string, path: string) {\r\n    return this.http.get(`${this.apiService.getApiUrl()}/${zone}/${path}`\r\n      , { responseType: 'blob', observe: 'response' });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatPaginatorIntl } from '@angular/material';\r\nimport { TranslationService } from './translation.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaginatorI18nService extends MatPaginatorIntl {\r\n\r\n  itemsPerPageLabel: string;\r\n  nextPageLabel: string;\r\n  previousPageLabel: string;\r\n  firstPageLabel: string;\r\n  lastPageLabel: string;\r\n  ofLabel: string;\r\n  zeroOfLabel: string;\r\n\r\n  constructor(private translationService: TranslationService) {\r\n    super();\r\n    this.itemsPerPageLabel = this.translationService.getForKey('Items per page');\r\n    this.nextPageLabel = this.translationService.getForKey('Next page');\r\n    this.ofLabel = this.translationService.getForKey('of');\r\n    this.previousPageLabel = this.translationService.getForKey('Previous page');\r\n    this.firstPageLabel = this.translationService.getForKey('First page');\r\n    this.lastPageLabel = this.translationService.getForKey('Last page');\r\n    this.zeroOfLabel = this.translationService.getForKey('0 of');\r\n    this.changes.next();\r\n    this.translationService.cultureChange.subscribe(x => {\r\n      this.itemsPerPageLabel = this.translationService.getForKey('Items per page');\r\n      this.nextPageLabel = this.translationService.getForKey('Next page');\r\n      this.ofLabel = this.translationService.getForKey('of');\r\n      this.previousPageLabel = this.translationService.getForKey('Previous page');\r\n      this.firstPageLabel = this.translationService.getForKey('First page');\r\n      this.lastPageLabel = this.translationService.getForKey('Last page');\r\n      this.zeroOfLabel = this.translationService.getForKey('0 of');\r\n      this.changes.next();\r\n    });\r\n  }\r\n\r\n  getRangeLabel = (page: number, pageSize: number, length: number) => {\r\n\r\n    if (length === 0 || pageSize === 0) {\r\n      return this.zeroOfLabel + ' ' + length;\r\n    }\r\n    length = Math.max(length, 0);\r\n    const startIndex = page * pageSize;\r\n    const endIndex = startIndex < length ?\r\n      Math.min(startIndex + pageSize, length) :\r\n      startIndex + pageSize;\r\n    return startIndex + 1 + ' - ' + endIndex + ' ' + this.ofLabel + ' ' + length;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { NotificationDialogUnsavedComponent } from '../components/notification-dialog-unsaved/notification-dialog-unsaved.component';\r\nimport { Subscription } from 'rxjs';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Injectable()\r\nexport class UnsavedDataNotificationService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  hasChangedData = false;\r\n  formChangesSubscription: Subscription;\r\n  currentForm: NgForm;\r\n\r\n  startTracking(ngForm: NgForm) {\r\n    this.currentForm = ngForm;\r\n    this.currentForm.form.markAsPristine();\r\n    this.formChangesSubscription = ngForm.form.valueChanges.subscribe(x => {\r\n      if (this.currentForm.form.dirty)\r\n        this.hasChangedData = true;\r\n    });\r\n  }\r\n  trackingCheckpoint() {\r\n    this.currentForm.form.markAsPristine();\r\n    this.hasChangedData = false;\r\n  }\r\n\r\n  stopTracking() {\r\n    this.hasChangedData = false;\r\n    this.formChangesSubscription.unsubscribe();\r\n  }\r\n\r\n  doActionWithCheckUnsaved(action, fallbackAction?, modalData?) {\r\n    if (!this.hasChangedData) {\r\n      action();\r\n      return;\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(NotificationDialogUnsavedComponent, {\r\n      width: '356px',\r\n      data: modalData\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === true) {\r\n        this.hasChangedData = false;\r\n        action();\r\n      } else {\r\n        if (fallbackAction !== undefined)\r\n          fallbackAction();\r\n      }\r\n    });\r\n  }\r\n  checkChangesAction(hasChanges, noChanges, modalData?) {\r\n    if (!this.hasChangedData) {\r\n      noChanges();\r\n      return;\r\n    }\r\n\r\n    const dialogRef = this.dialog.open(NotificationDialogUnsavedComponent, {\r\n      width: '356px',\r\n      data: modalData\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === true) {\r\n        this.hasChangedData = false;\r\n        hasChanges();\r\n      } else\r\n        noChanges();\r\n    });\r\n  }\r\n}\r\n"]}